cscope 16 $HOME/projects/kitten/scripts/kconfig               0000872556
	@conf.c

6 
	~<˘y≥.h
>

7 
	~<°dlib.h
>

8 
	~<°dio.h
>

9 
	~<°rög.h
>

10 
	~<uni°d.h
>

11 
	~<time.h
>

12 
	~<sys/°©.h
>

14 
	#LKC_DIRECT_LINK


	)

15 
	~"lkc.h
"

17 
c⁄f
(
míu
 *menu);

18 
check_c⁄f
(
míu
 *menu);

21 
	mask_Æl
,

22 
	mask_√w
,

23 
	mask_sûít
,

24 
	m£t_deÁu…
,

25 
	m£t_yes
,

26 
	m£t_mod
,

27 
	m£t_no
,

28 
	m£t_øndom


29 } 
	göput_mode
 = 
ask_Æl
;

30 *
	gdefc⁄fig_fûe
;

32 
	gödít
 = 1;

33 
	gvÆid_°dö
 = 1;

34 
	gc⁄f_˙t
;

35 
	glöe
[128];

36 
míu
 *
	groŸE¡ry
;

38 
	gnohñp_ãxt
[] = 
N_
("Sorry,Ço helpávailable forÅhis option yet.\n");

40 
	$°rù
(*
°r
)

42 *
p
 = 
°r
;

43 
l
;

45 (
	`is•a˚
(*
p
)))

46 
p
++;

47 
l
 = 
	`°æí
(
p
);

48 i‡(
p
 !
°r
)

49 
	`memmove
(
°r
, 
p
, 
l
 + 1);

50 i‡(!
l
)

52 
p
 = 
°r
 + 
l
 - 1;

53 (
	`is•a˚
(*
p
)))

54 *
p
-- = 0;

55 
	}
}

57 
	$check_°dö
()

59 i‡(!
vÆid_°dö
 && 
öput_mode
 =
ask_sûít
) {

60 
	`¥ötf
(
	`_
("aborted!\n\n"));

61 
	`¥ötf
(
	`_
("Console input/output isÑedirected. "));

62 
	`¥ötf
(
	`_
("Run 'make oldconfig'Åo update configuration.\n\n"));

63 
	`exô
(1);

65 
	}
}

67 *
	$fgës_check_°ªam
(*
s
, 
size
, 
FILE
 *
°ªam
)

69 *
ªt
 = 
	`fgës
(
s
, 
size
, 
°ªam
);

71 i‡(
ªt
 =
NULL
 && 
	`„of
(
°ªam
)) {

72 
	`¥ötf
(
	`_
("aborted!\n\n"));

73 
	`¥ötf
(
	`_
("Console input is closed. "));

74 
	`¥ötf
(
	`_
("Run 'make oldconfig'Åo update configuration.\n\n"));

75 
	`exô
(1);

78  
ªt
;

79 
	}
}

81 
	$c⁄f_askvÆue
(
symbﬁ
 *
sym
, c⁄° *
def
)

83 
symbﬁ_ty≥
 
ty≥
 = 
	`sym_gë_ty≥
(
sym
);

84 
åi°©e
 
vÆ
;

86 i‡(!
	`sym_has_vÆue
(
sym
))

87 
	`¥ötf
("(NEW) ");

89 
löe
[0] = '\n';

90 
löe
[1] = 0;

92 i‡(!
	`sym_is_ch™gabÀ
(
sym
)) {

93 
	`¥ötf
("%s\n", 
def
);

94 
löe
[0] = '\n';

95 
löe
[1] = 0;

99 
öput_mode
) {

100 
£t_no
:

101 
£t_mod
:

102 
£t_yes
:

103 
£t_øndom
:

104 i‡(
	`sym_has_vÆue
(
sym
)) {

105 
	`¥ötf
("%s\n", 
def
);

109 
ask_√w
:

110 
ask_sûít
:

111 i‡(
	`sym_has_vÆue
(
sym
)) {

112 
	`¥ötf
("%s\n", 
def
);

115 
	`check_°dö
();

116 
ask_Æl
:

117 
	`fÊush
(
°dout
);

118 
	`fgës_check_°ªam
(
löe
, 128, 
°dö
);

120 
£t_deÁu…
:

121 
	`¥ötf
("%s\n", 
def
);

127 
ty≥
) {

128 
S_INT
:

129 
S_HEX
:

130 
S_STRING
:

131 
	`¥ötf
("%s\n", 
def
);

136 
öput_mode
) {

137 
£t_yes
:

138 i‡(
	`sym_åi°©e_wôhö_ønge
(
sym
, 
yes
)) {

139 
löe
[0] = 'y';

140 
löe
[1] = '\n';

141 
löe
[2] = 0;

144 
£t_mod
:

145 i‡(
ty≥
 =
S_TRISTATE
) {

146 i‡(
	`sym_åi°©e_wôhö_ønge
(
sym
, 
mod
)) {

147 
löe
[0] = 'm';

148 
löe
[1] = '\n';

149 
löe
[2] = 0;

153 i‡(
	`sym_åi°©e_wôhö_ønge
(
sym
, 
yes
)) {

154 
löe
[0] = 'y';

155 
löe
[1] = '\n';

156 
löe
[2] = 0;

160 
£t_no
:

161 i‡(
	`sym_åi°©e_wôhö_ønge
(
sym
, 
no
)) {

162 
löe
[0] = 'n';

163 
löe
[1] = '\n';

164 
löe
[2] = 0;

167 
£t_øndom
:

169 
vÆ
 = (
åi°©e
)(
	`øndom
() % 3);

170 } !
	`sym_åi°©e_wôhö_ønge
(
sym
, 
vÆ
));

171 
vÆ
) {

172 
no
: 
löe
[0] = 'n'; ;

173 
mod
: 
löe
[0] = 'm'; ;

174 
yes
: 
löe
[0] = 'y'; ;

176 
löe
[1] = '\n';

177 
löe
[2] = 0;

182 
	`¥ötf
("%s", 
löe
);

183 
	}
}

185 
	$c⁄f_°rög
(
míu
 *menu)

187 
symbﬁ
 *
sym
 = 
míu
->sym;

188 c⁄° *
def
, *
hñp
;

191 
	`¥ötf
("%*s%†", 
ödít
 - 1, "", 
míu
->
¥om±
->
ãxt
);

192 
	`¥ötf
("(%sË", 
sym
->
«me
);

193 
def
 = 
	`sym_gë_°rög_vÆue
(
sym
);

194 i‡(
	`sym_gë_°rög_vÆue
(
sym
))

195 
	`¥ötf
("[%s] ", 
def
);

196 
	`c⁄f_askvÆue
(
sym
, 
def
);

197 
löe
[0]) {

202 i‡(
löe
[1] == '\n') {

203 
hñp
 = 
nohñp_ãxt
;

204 i‡(
míu
->
sym
->
hñp
)

205 
hñp
 = 
míu
->
sym
->help;

206 
	`¥ötf
("\n%s\n", 
míu
->
sym
->
hñp
);

207 
def
 = 
NULL
;

211 
löe
[
	`°æí
(line)-1] = 0;

212 
def
 = 
löe
;

214 i‡(
def
 && 
	`sym_£t_°rög_vÆue
(
sym
, def))

217 
	}
}

219 
	$c⁄f_sym
(
míu
 *menu)

221 
symbﬁ
 *
sym
 = 
míu
->sym;

222 
ty≥
;

223 
åi°©e
 
ﬁdvÆ
, 
√wvÆ
;

224 c⁄° *
hñp
;

227 
	`¥ötf
("%*s%†", 
ödít
 - 1, "", 
míu
->
¥om±
->
ãxt
);

228 i‡(
sym
->
«me
)

229 
	`¥ötf
("(%sË", 
sym
->
«me
);

230 
ty≥
 = 
	`sym_gë_ty≥
(
sym
);

231 
	`putch¨
('[');

232 
ﬁdvÆ
 = 
	`sym_gë_åi°©e_vÆue
(
sym
);

233 
ﬁdvÆ
) {

234 
no
:

235 
	`putch¨
('N');

237 
mod
:

238 
	`putch¨
('M');

240 
yes
:

241 
	`putch¨
('Y');

244 i‡(
ﬁdvÆ
 !
no
 && 
	`sym_åi°©e_wôhö_ønge
(
sym
,Ço))

245 
	`¥ötf
("/n");

246 i‡(
ﬁdvÆ
 !
mod
 && 
	`sym_åi°©e_wôhö_ønge
(
sym
, mod))

247 
	`¥ötf
("/m");

248 i‡(
ﬁdvÆ
 !
yes
 && 
	`sym_åi°©e_wôhö_ønge
(
sym
, yes))

249 
	`¥ötf
("/y");

250 i‡(
sym
->
hñp
)

251 
	`¥ötf
("/?");

252 
	`¥ötf
("] ");

253 
	`c⁄f_askvÆue
(
sym
, 
	`sym_gë_°rög_vÆue
(sym));

254 
	`°rù
(
löe
);

256 
löe
[0]) {

259 
√wvÆ
 = 
no
;

260 i‡(!
löe
[1] || !
	`°rcmp
(&line[1], "o"))

265 
√wvÆ
 = 
mod
;

266 i‡(!
löe
[1])

271 
√wvÆ
 = 
yes
;

272 i‡(!
löe
[1] || !
	`°rcmp
(&line[1], "es"))

276 
√wvÆ
 = 
ﬁdvÆ
;

279 
hñp
;

283 i‡(
	`sym_£t_åi°©e_vÆue
(
sym
, 
√wvÆ
))

285 
hñp
:

286 
hñp
 = 
nohñp_ãxt
;

287 i‡(
sym
->
hñp
)

288 
hñp
 = 
sym
->help;

289 
	`¥ötf
("\n%s\n", 
hñp
);

291 
	}
}

293 
	$c⁄f_choi˚
(
míu
 *menu)

295 
symbﬁ
 *
sym
, *
def_sym
;

296 
míu
 *
chûd
;

297 
ty≥
;

298 
boﬁ
 
is_√w
;

300 
sym
 = 
míu
->sym;

301 
ty≥
 = 
	`sym_gë_ty≥
(
sym
);

302 
is_√w
 = !
	`sym_has_vÆue
(
sym
);

303 i‡(
	`sym_is_ch™gabÀ
(
sym
)) {

304 
	`c⁄f_sym
(
míu
);

305 
	`sym_ˇlc_vÆue
(
sym
);

306 
	`sym_gë_åi°©e_vÆue
(
sym
)) {

307 
no
:

309 
mod
:

311 
yes
:

315 
	`sym_gë_åi°©e_vÆue
(
sym
)) {

316 
no
:

318 
mod
:

319 
	`¥ötf
("%*s%s\n", 
ödít
 - 1, "", 
	`míu_gë_¥om±
(
míu
));

321 
yes
:

327 
˙t
, 
def
;

329 
	`¥ötf
("%*s%s\n", 
ödít
 - 1, "", 
	`míu_gë_¥om±
(
míu
));

330 
def_sym
 = 
	`sym_gë_choi˚_vÆue
(
sym
);

331 
˙t
 = 
def
 = 0;

332 
löe
[0] = 0;

333 
chûd
 = 
míu
->
li°
; chûd; chûd = chûd->
√xt
) {

334 i‡(!
	`míu_is_visibÀ
(
chûd
))

336 i‡(!
chûd
->
sym
) {

337 
	`¥ötf
("%*¯%s\n", 
ödít
, '*', 
	`míu_gë_¥om±
(
chûd
));

340 
˙t
++;

341 i‡(
chûd
->
sym
 =
def_sym
) {

342 
def
 = 
˙t
;

343 
	`¥ötf
("%*c", 
ödít
, '>');

345 
	`¥ötf
("%*c", 
ödít
, ' ');

346 
	`¥ötf
(" %d. %s", 
˙t
, 
	`míu_gë_¥om±
(
chûd
));

347 i‡(
chûd
->
sym
->
«me
)

348 
	`¥ötf
(" (%s)", 
chûd
->
sym
->
«me
);

349 i‡(!
	`sym_has_vÆue
(
chûd
->
sym
))

350 
	`¥ötf
(" (NEW)");

351 
	`¥ötf
("\n");

353 
	`¥ötf
("%*schoi˚", 
ödít
 - 1, "");

354 i‡(
˙t
 == 1) {

355 
	`¥ötf
("[1]: 1\n");

356 
c⁄f_chûds
;

358 
	`¥ötf
("[1-%d", 
˙t
);

359 i‡(
sym
->
hñp
)

360 
	`¥ötf
("?");

361 
	`¥ötf
("]: ");

362 
öput_mode
) {

363 
ask_√w
:

364 
ask_sûít
:

365 i‡(!
is_√w
) {

366 
˙t
 = 
def
;

367 
	`¥ötf
("%d\n", 
˙t
);

370 
	`check_°dö
();

371 
ask_Æl
:

372 
	`fÊush
(
°dout
);

373 
	`fgës_check_°ªam
(
löe
, 128, 
°dö
);

374 
	`°rù
(
löe
);

375 i‡(
löe
[0] == '?') {

376 
	`¥ötf
("\n%s\n", 
míu
->
sym
->
hñp
 ?

377 
míu
->
sym
->
hñp
 : 
nohñp_ãxt
);

380 i‡(!
löe
[0])

381 
˙t
 = 
def
;

382 i‡(
	`isdigô
(
löe
[0]))

383 
˙t
 = 
	`©oi
(
löe
);

387 
£t_øndom
:

388 
def
 = (
	`øndom
(Ë% 
˙t
) + 1;

389 
£t_deÁu…
:

390 
£t_yes
:

391 
£t_mod
:

392 
£t_no
:

393 
˙t
 = 
def
;

394 
	`¥ötf
("%d\n", 
˙t
);

398 
c⁄f_chûds
:

399 
chûd
 = 
míu
->
li°
; chûd; chûd = chûd->
√xt
) {

400 i‡(!
chûd
->
sym
 || !
	`míu_is_visibÀ
(child))

402 i‡(!--
˙t
)

405 i‡(!
chûd
)

407 i‡(
löe
[
	`°æí
(line) - 1] == '?') {

408 
	`¥ötf
("\n%s\n", 
chûd
->
sym
->
hñp
 ?

409 
chûd
->
sym
->
hñp
 : 
nohñp_ãxt
);

412 
	`sym_£t_choi˚_vÆue
(
sym
, 
chûd
->sym);

413 i‡(
chûd
->
li°
) {

414 
ödít
 += 2;

415 
	`c⁄f
(
chûd
->
li°
);

416 
ödít
 -= 2;

420 
	}
}

422 
	$c⁄f
(
míu
 *menu)

424 
symbﬁ
 *
sym
;

425 
¥›îty
 *
¥›
;

426 
míu
 *
chûd
;

428 i‡(!
	`míu_is_visibÀ
(
míu
))

431 
sym
 = 
míu
->sym;

432 
¥›
 = 
míu
->
¥om±
;

433 i‡(
¥›
) {

434 c⁄° *
¥om±
;

436 
¥›
->
ty≥
) {

437 
P_MENU
:

438 i‡(
öput_mode
 =
ask_sûít
 && 
roŸE¡ry
 !
míu
) {

439 
	`check_c⁄f
(
míu
);

442 
P_COMMENT
:

443 
¥om±
 = 
	`míu_gë_¥om±
(
míu
);

444 i‡(
¥om±
)

445 
	`¥ötf
("%*c\n%*c %s\n%*c\n",

446 
ödít
, '*',

447 
ödít
, '*', 
¥om±
,

448 
ödít
, '*');

454 i‡(!
sym
)

455 
c⁄f_chûds
;

457 i‡(
	`sym_is_choi˚
(
sym
)) {

458 
	`c⁄f_choi˚
(
míu
);

459 i‡(
sym
->
cuº
.
åi
 !
mod
)

461 
c⁄f_chûds
;

464 
sym
->
ty≥
) {

465 
S_INT
:

466 
S_HEX
:

467 
S_STRING
:

468 
	`c⁄f_°rög
(
míu
);

471 
	`c⁄f_sym
(
míu
);

475 
c⁄f_chûds
:

476 i‡(
sym
)

477 
ödít
 += 2;

478 
chûd
 = 
míu
->
li°
; chûd; chûd = chûd->
√xt
)

479 
	`c⁄f
(
chûd
);

480 i‡(
sym
)

481 
ödít
 -= 2;

482 
	}
}

484 
	$check_c⁄f
(
míu
 *menu)

486 
symbﬁ
 *
sym
;

487 
míu
 *
chûd
;

489 i‡(!
	`míu_is_visibÀ
(
míu
))

492 
sym
 = 
míu
->sym;

493 i‡(
sym
 && !
	`sym_has_vÆue
(sym)) {

494 i‡(
	`sym_is_ch™gabÀ
(
sym
) ||

495 (
	`sym_is_choi˚
(
sym
Ë&& 
	`sym_gë_åi°©e_vÆue
(symË=
yes
)) {

496 i‡(!
c⁄f_˙t
++)

497 
	`¥ötf
(
	`_
("*\n* Restart config...\n*\n"));

498 
roŸE¡ry
 = 
	`míu_gë_∑ª¡_míu
(
míu
);

499 
	`c⁄f
(
roŸE¡ry
);

503 
chûd
 = 
míu
->
li°
; chûd; chûd = chûd->
√xt
)

504 
	`check_c⁄f
(
chûd
);

505 
	}
}

507 
	$maö
(
ac
, **
av
)

509 
i
 = 1;

510 c⁄° *
«me
;

511 
°©
 
tmp°©
;

513 i‡(
ac
 > 
i
 && 
av
[i][0] == '-') {

514 
av
[
i
++][1]) {

516 
öput_mode
 = 
ask_√w
;

519 
öput_mode
 = 
ask_sûít
;

520 
vÆid_°dö
 = 
	`ißây
(0) && isatty(1) && isatty(2);

523 
öput_mode
 = 
£t_deÁu…
;

526 
öput_mode
 = 
£t_deÁu…
;

527 
defc⁄fig_fûe
 = 
av
[
i
++];

528 i‡(!
defc⁄fig_fûe
) {

529 
	`¥ötf
(
	`_
("%s: No default config file specified\n"),

530 
av
[0]);

531 
	`exô
(1);

535 
öput_mode
 = 
£t_no
;

538 
öput_mode
 = 
£t_mod
;

541 
öput_mode
 = 
£t_yes
;

544 
öput_mode
 = 
£t_øndom
;

545 
	`§™dom
(
	`time
(
NULL
));

549 
	`Ârötf
(
°dîr
, "See README for usage info\n");

550 
	`exô
(0);

553 
«me
 = 
av
[
i
];

554 i‡(!
«me
) {

555 
	`¥ötf
(
	`_
("%s: Kc⁄fig fûêmissög\n"), 
av
[0]);

557 
	`c⁄f_∑r£
(
«me
);

559 
öput_mode
) {

560 
£t_deÁu…
:

561 i‡(!
defc⁄fig_fûe
)

562 
defc⁄fig_fûe
 = 
	`c⁄f_gë_deÁu…_c⁄‚ame
();

563 i‡(
	`c⁄f_ªad
(
defc⁄fig_fûe
)) {

564 
	`¥ötf
("***\n"

566 "***\n", 
defc⁄fig_fûe
);

567 
	`exô
(1);

570 
ask_sûít
:

571 i‡(
	`°©
(".c⁄fig", &
tmp°©
)) {

572 
	`¥ötf
(
	`_
("***\n"

578 
	`exô
(1);

580 
ask_Æl
:

581 
ask_√w
:

582 
	`c⁄f_ªad
(
NULL
);

584 
£t_no
:

585 
£t_mod
:

586 
£t_yes
:

587 
£t_øndom
:

588 
«me
 = 
	`gëív
("KCONFIG_ALLCONFIG");

589 i‡(
«me
 && !
	`°©
“ame, &
tmp°©
)) {

590 
	`c⁄f_ªad_sim∂e
(
«me
);

593 
öput_mode
) {

594 
£t_no
: 
«me
 = "allno.config"; ;

595 
£t_mod
: 
«me
 = "allmod.config"; ;

596 
£t_yes
: 
«me
 = "allyes.config"; ;

597 
£t_øndom
: 
«me
 = "allrandom.config"; ;

600 i‡(!
	`°©
(
«me
, &
tmp°©
))

601 
	`c⁄f_ªad_sim∂e
(
«me
);

602 i‡(!
	`°©
("Æl.c⁄fig", &
tmp°©
))

603 
	`c⁄f_ªad_sim∂e
("all.config");

609 i‡(
öput_mode
 !
ask_sûít
) {

610 
roŸE¡ry
 = &
roŸmíu
;

611 
	`c⁄f
(&
roŸmíu
);

612 i‡(
öput_mode
 =
ask_Æl
) {

613 
öput_mode
 = 
ask_sûít
;

614 
vÆid_°dö
 = 1;

618 
c⁄f_˙t
 = 0;

619 
	`check_c⁄f
(&
roŸmíu
);

620 } 
c⁄f_˙t
);

621 i‡(
	`c⁄f_wrôe
(
NULL
)) {

622 
	`Ârötf
(
°dîr
, 
	`_
("\n*** Error during writing ofÅhe kernel configuration.\n\n"));

626 
	}
}

	@confdata.c

6 
	~<sys/°©.h
>

7 
	~<˘y≥.h
>

8 
	~<°dio.h
>

9 
	~<°dlib.h
>

10 
	~<°rög.h
>

11 
	~<time.h
>

12 
	~<uni°d.h
>

14 
	#LKC_DIRECT_LINK


	)

15 
	~"lkc.h
"

17 
	$c⁄f_w¨nög
(c⁄° *
fmt
, ...)

18 
	`__©åibuã__
 ((
	`f‹m©
 (
¥ötf
, 1, 2)));

20 c⁄° *
c⁄f_fûíame
;

21 
c⁄f_löío
, 
c⁄f_w¨nögs
, 
c⁄f_unßved
;

23 c⁄° 
c⁄f_def_fûíame
[] = ".config";

25 c⁄° 
c⁄f_de‚ame
[] = "arch/$ARCH/defconfig";

27 c⁄° *
c⁄f_c⁄‚ames
[] = {

32 
c⁄f_de‚ame
,

33 
NULL
,

34 
	}
};

36 
	$c⁄f_w¨nög
(c⁄° *
fmt
, ...)

38 
va_li°
 
≠
;

39 
	`va_°¨t
(
≠
, 
fmt
);

40 
	`Ârötf
(
°dîr
, "%s:%d:w¨nög: ", 
c⁄f_fûíame
, 
c⁄f_löío
);

41 
	`vÂrötf
(
°dîr
, 
fmt
, 
≠
);

42 
	`Ârötf
(
°dîr
, "\n");

43 
	`va_íd
(
≠
);

44 
c⁄f_w¨nögs
++;

45 
	}
}

47 *
	$c⁄f_ex∑nd_vÆue
(c⁄° *
ö
)

49 
symbﬁ
 *
sym
;

50 c⁄° *
§c
;

51 
ªs_vÆue
[
SYMBOL_MAXLENGTH
];

52 *
d°
, 
«me
[
SYMBOL_MAXLENGTH
];

54 
ªs_vÆue
[0] = 0;

55 
d°
 = 
«me
;

56 (
§c
 = 
	`°rchr
(
ö
, '$'))) {

57 
	`°∫ˇt
(
ªs_vÆue
, 
ö
, 
§c
 - in);

58 
§c
++;

59 
d°
 = 
«me
;

60 
	`iß um
(*
§c
) || *src == '_')

61 *
d°
++ = *
§c
++;

62 *
d°
 = 0;

63 
sym
 = 
	`sym_lookup
(
«me
, 0);

64 
	`sym_ˇlc_vÆue
(
sym
);

65 
	`°rˇt
(
ªs_vÆue
, 
	`sym_gë_°rög_vÆue
(
sym
));

66 
ö
 = 
§c
;

68 
	`°rˇt
(
ªs_vÆue
, 
ö
);

70  
ªs_vÆue
;

71 
	}
}

73 *
	$c⁄f_gë_deÁu…_c⁄‚ame
()

75 
°©
 
buf
;

76 
fuŒ«me
[
PATH_MAX
+1];

77 *
ív
, *
«me
;

79 
«me
 = 
	`c⁄f_ex∑nd_vÆue
(
c⁄f_de‚ame
);

80 
ív
 = 
	`gëív
(
SRCTREE
);

81 i‡(
ív
) {

82 
	`•rötf
(
fuŒ«me
, "%s/%s", 
ív
, 
«me
);

83 i‡(!
	`°©
(
fuŒ«me
, &
buf
))

84  
fuŒ«me
;

86  
«me
;

87 
	}
}

89 
	$c⁄f_ªad_sim∂e
(c⁄° *
«me
)

91 
FILE
 *
ö
 = 
NULL
;

92 
löe
[1024];

93 *
p
, *
p2
;

94 
symbﬁ
 *
sym
;

95 
i
;

97 i‡(
«me
) {

98 
ö
 = 
	`zc⁄f_f›í
(
«me
);

100 c⁄° **
«mes
 = 
c⁄f_c⁄‚ames
;

101 (
«me
 = *
«mes
++)) {

102 
«me
 = 
	`c⁄f_ex∑nd_vÆue
(name);

103 
ö
 = 
	`zc⁄f_f›í
(
«me
);

104 i‡(
ö
) {

105 
	`¥ötf
(
	`_
("#\n"

107 "#\n"), 
«me
);

112 i‡(!
ö
)

115 
c⁄f_fûíame
 = 
«me
;

116 
c⁄f_löío
 = 0;

117 
c⁄f_w¨nögs
 = 0;

118 
c⁄f_unßved
 = 0;

120 
	`f‹_Æl_symbﬁs
(
i
, 
sym
) {

121 
sym
->
Êags
 |
SYMBOL_NEW
 | 
SYMBOL_CHANGED
;

122 i‡(
	`sym_is_choi˚
(
sym
))

123 
sym
->
Êags
 &~
SYMBOL_NEW
;

124 
sym
->
Êags
 &~
SYMBOL_VALID
;

125 
sym
->
ty≥
) {

126 
S_INT
:

127 
S_HEX
:

128 
S_STRING
:

129 i‡(
sym
->
u£r
.
vÆ
)

130 
	`‰ì
(
sym
->
u£r
.
vÆ
);

132 
sym
->
u£r
.
vÆ
 = 
NULL
;

133 
sym
->
u£r
.
åi
 = 
no
;

137 
	`fgës
(
löe
, ÷öe), 
ö
)) {

138 
c⁄f_löío
++;

139 
sym
 = 
NULL
;

140 
löe
[0]) {

142 i‡(
	`memcmp
(
löe
 + 2, "CONFIG_", 7))

144 
p
 = 
	`°rchr
(
löe
 + 9, ' ');

145 i‡(!
p
)

147 *
p
++ = 0;

148 i‡(
	`°∫cmp
(
p
, "isÇot set", 10))

150 
sym
 = 
	`sym_föd
(
löe
 + 9);

151 i‡(!
sym
) {

152 
	`c⁄f_w¨nög
("åyögÅÿassig¿n⁄exi°íàsymbﬁ %s", 
löe
 + 9);

154 } i‡(!(
sym
->
Êags
 & 
SYMBOL_NEW
)) {

155 
	`c⁄f_w¨nög
("åyögÅÿªassig¿symbﬁ %s", 
sym
->
«me
);

158 
sym
->
ty≥
) {

159 
S_BOOLEAN
:

160 
S_TRISTATE
:

161 
sym
->
u£r
.
åi
 = 
no
;

162 
sym
->
Êags
 &~
SYMBOL_NEW
;

169 i‡(
	`memcmp
(
löe
, "CONFIG_", 7)) {

170 
	`c⁄f_w¨nög
("unexpected data");

173 
p
 = 
	`°rchr
(
löe
 + 7, '=');

174 i‡(!
p
)

176 *
p
++ = 0;

177 
p2
 = 
	`°rchr
(
p
, '\n');

178 i‡(
p2
)

179 *
p2
 = 0;

180 
sym
 = 
	`sym_föd
(
löe
 + 7);

181 i‡(!
sym
) {

182 
	`c⁄f_w¨nög
("åyögÅÿassig¿n⁄exi°íàsymbﬁ %s", 
löe
 + 7);

184 } i‡(!(
sym
->
Êags
 & 
SYMBOL_NEW
)) {

185 
	`c⁄f_w¨nög
("åyögÅÿªassig¿symbﬁ %s", 
sym
->
«me
);

188 
sym
->
ty≥
) {

189 
S_TRISTATE
:

190 i‡(
p
[0] == 'm') {

191 
sym
->
u£r
.
åi
 = 
mod
;

192 
sym
->
Êags
 &~
SYMBOL_NEW
;

195 
S_BOOLEAN
:

196 i‡(
p
[0] == 'y') {

197 
sym
->
u£r
.
åi
 = 
yes
;

198 
sym
->
Êags
 &~
SYMBOL_NEW
;

201 i‡(
p
[0] == 'n') {

202 
sym
->
u£r
.
åi
 = 
no
;

203 
sym
->
Êags
 &~
SYMBOL_NEW
;

206 
	`c⁄f_w¨nög
("symbﬁ vÆuê'%s' invÆid f‹ %s", 
p
, 
sym
->
«me
);

208 
S_STRING
:

209 i‡(*
p
++ != '"')

211 
p2
 = 
p
; (p2 = 
	`°Ωbrk
(p2, "\"\\"));Ö2++) {

212 i‡(*
p2
 == '"') {

213 *
p2
 = 0;

216 
	`memmove
(
p2
,Ö2 + 1, 
	`°æí
(p2));

218 i‡(!
p2
) {

219 
	`c⁄f_w¨nög
("invalid string found");

222 
S_INT
:

223 
S_HEX
:

224 i‡(
	`sym_°rög_vÆid
(
sym
, 
p
)) {

225 
sym
->
u£r
.
vÆ
 = 
	`°rdup
(
p
);

226 
sym
->
Êags
 &~
SYMBOL_NEW
;

228 
	`c⁄f_w¨nög
("symbﬁ vÆuê'%s' invÆid f‹ %s", 
p
, 
sym
->
«me
);

239 
	`c⁄f_w¨nög
("unexpected data");

242 i‡(
sym
 && 
	`sym_is_choi˚_vÆue
(sym)) {

243 
symbﬁ
 *
cs
 = 
	`¥›_gë_symbﬁ
(
	`sym_gë_choi˚_¥›
(
sym
));

244 
sym
->
u£r
.
åi
) {

245 
no
:

247 
mod
:

248 i‡(
cs
->
u£r
.
åi
 =
yes
) {

249 
	`c⁄f_w¨nög
("%†¸óã†öc⁄si°íàchoi˚ sèã", 
sym
->
«me
);

250 
cs
->
Êags
 |
SYMBOL_NEW
;

253 
yes
:

254 i‡(
cs
->
u£r
.
åi
 !
no
) {

255 
	`c⁄f_w¨nög
("%†¸óã†öc⁄si°íàchoi˚ sèã", 
sym
->
«me
);

256 
cs
->
Êags
 |
SYMBOL_NEW
;

258 
cs
->
u£r
.
vÆ
 = 
sym
;

261 
cs
->
u£r
.
åi
 = 
	`E_OR
(cs->u£r.åi, 
sym
->user.tri);

264 
	`f˛o£
(
ö
);

266 i‡(
moduÀs_sym
)

267 
	`sym_ˇlc_vÆue
(
moduÀs_sym
);

269 
	}
}

271 
	$c⁄f_ªad
(c⁄° *
«me
)

273 
symbﬁ
 *
sym
;

274 
¥›îty
 *
¥›
;

275 
ex¥
 *
e
;

276 
i
;

278 i‡(
	`c⁄f_ªad_sim∂e
(
«me
))

281 
	`f‹_Æl_symbﬁs
(
i
, 
sym
) {

282 
	`sym_ˇlc_vÆue
(
sym
);

283 i‡(
	`sym_is_choi˚
(
sym
Ë|| (sym->
Êags
 & 
SYMBOL_AUTO
))

284 
sym_ok
;

285 i‡(
	`sym_has_vÆue
(
sym
Ë&& (sym->
Êags
 & 
SYMBOL_WRITE
)) {

287 
sym
->
ty≥
) {

288 
S_BOOLEAN
:

289 
S_TRISTATE
:

290 i‡(
sym
->
u£r
.
åi
 !
	`sym_gë_åi°©e_vÆue
(sym))

292 i‡(!
	`sym_is_choi˚
(
sym
))

293 
sym_ok
;

295 i‡(!
	`°rcmp
(
sym
->
cuº
.
vÆ
, sym->
u£r
.val))

296 
sym_ok
;

299 } i‡(!
	`sym_has_vÆue
(
sym
Ë&& !(sym->
Êags
 & 
SYMBOL_WRITE
))

301 
sym_ok
;

302 
c⁄f_unßved
++;

304 
sym_ok
:

305 i‡(
	`sym_has_vÆue
(
sym
Ë&& !
	`sym_is_choi˚_vÆue
(sym)) {

306 i‡(
sym
->
visibÀ
 =
no
)

307 
sym
->
Êags
 |
SYMBOL_NEW
;

308 
sym
->
ty≥
) {

309 
S_STRING
:

310 
S_INT
:

311 
S_HEX
:

312 i‡(!
	`sym_°rög_wôhö_ønge
(
sym
, sym->
u£r
.
vÆ
)) {

313 
sym
->
Êags
 |
SYMBOL_NEW
;

314 
sym
->
Êags
 &~
SYMBOL_VALID
;

320 i‡(!
	`sym_is_choi˚
(
sym
))

322 
¥›
 = 
	`sym_gë_choi˚_¥›
(
sym
);

323 
e
 = 
¥›
->
ex¥
;É;É =É->
À·
.expr)

324 i‡(
e
->
right
.
sym
->
visibÀ
 !
no
)

325 
sym
->
Êags
 |
e
->
right
.sym->Êag†& 
SYMBOL_NEW
;

328 
sym_ch™ge_cou¡
 = 
c⁄f_w¨nögs
 || 
c⁄f_unßved
;

331 
	}
}

333 
	$c⁄f_wrôe
(c⁄° *
«me
)

335 
FILE
 *
out
, *
out_h
;

336 
symbﬁ
 *
sym
;

337 
míu
 *menu;

338 c⁄° *
ba£«me
;

339 
dú«me
[128], 
tm≤ame
[128], 
√w«me
[128];

340 
ty≥
, 
l
;

341 c⁄° *
°r
;

342 
time_t
 
now
;

343 
u£_time°amp
 = 1;

344 *
ív
;

346 
dú«me
[0] = 0;

347 i‡(
«me
 &&Çame[0]) {

348 
°©
 
°
;

349 *
¶ash
;

351 i‡(!
	`°©
(
«me
, &
°
Ë&& 
	`S_ISDIR
(°.
°_mode
)) {

352 
	`°r˝y
(
dú«me
, 
«me
);

353 
	`°rˇt
(
dú«me
, "/");

354 
ba£«me
 = 
c⁄f_def_fûíame
;

355 } i‡((
¶ash
 = 
	`°ºchr
(
«me
, '/'))) {

356 
size
 = 
¶ash
 - 
«me
 + 1;

357 
	`mem˝y
(
dú«me
, 
«me
, 
size
);

358 
dú«me
[
size
] = 0;

359 i‡(
¶ash
[1])

360 
ba£«me
 = 
¶ash
 + 1;

362 
ba£«me
 = 
c⁄f_def_fûíame
;

364 
ba£«me
 = 
«me
;

366 
ba£«me
 = 
c⁄f_def_fûíame
;

368 
	`•rötf
(
√w«me
, "%s.tmpc⁄fig.%d", 
dú«me
, ()
	`gëpid
());

369 
out
 = 
	`f›í
(
√w«me
, "w");

370 i‡(!
out
)

372 
out_h
 = 
NULL
;

373 i‡(!
«me
) {

374 
out_h
 = 
	`f›í
(".tmpconfig.h", "w");

375 i‡(!
out_h
)

377 
	`fûe_wrôe_dï
(
NULL
);

379 
sym
 = 
	`sym_lookup
("KERNELVERSION", 0);

380 
	`sym_ˇlc_vÆue
(
sym
);

381 
	`time
(&
now
);

382 
ív
 = 
	`gëív
("KCONFIG_NOTIMESTAMP");

383 i‡(
ív
 && *env)

384 
u£_time°amp
 = 0;

386 
	`Ârötf
(
out
, 
	`_
("#\n"

391 
	`sym_gë_°rög_vÆue
(
sym
),

392 
u£_time°amp
 ? "# " : "",

393 
u£_time°amp
 ? 
	`˘ime
(&
now
) : "");

394 i‡(
out_h
)

395 
	`Ârötf
(
out_h
, "/*\n"

401 
	`sym_gë_°rög_vÆue
(
sym
),

402 
u£_time°amp
 ? " * " : "",

403 
u£_time°amp
 ? 
	`˘ime
(&
now
) : "");

405 i‡(!
sym_ch™ge_cou¡
)

406 
	`sym_˛ór_Æl_vÆid
();

408 
míu
 = 
roŸmíu
.
li°
;

409 
míu
) {

410 
sym
 = 
míu
->sym;

411 i‡(!
sym
) {

412 i‡(!
	`míu_is_visibÀ
(
míu
))

413 
√xt
;

414 
°r
 = 
	`míu_gë_¥om±
(
míu
);

415 
	`Ârötf
(
out
, "\n"

418 "#\n", 
°r
);

419 i‡(
out_h
)

420 
	`Ârötf
(
out_h
, "\n"

423 " */\n", 
°r
);

424 } i‡(!(
sym
->
Êags
 & 
SYMBOL_CHOICE
)) {

425 
	`sym_ˇlc_vÆue
(
sym
);

426 i‡(!(
sym
->
Êags
 & 
SYMBOL_WRITE
))

427 
√xt
;

428 
sym
->
Êags
 &~
SYMBOL_WRITE
;

429 
ty≥
 = 
sym
->type;

430 i‡(
ty≥
 =
S_TRISTATE
) {

431 
	`sym_ˇlc_vÆue
(
moduÀs_sym
);

432 i‡(
moduÀs_sym
->
cuº
.
åi
 =
no
)

433 
ty≥
 = 
S_BOOLEAN
;

435 
ty≥
) {

436 
S_BOOLEAN
:

437 
S_TRISTATE
:

438 
	`sym_gë_åi°©e_vÆue
(
sym
)) {

439 
no
:

440 
	`Ârötf
(
out
, "# CONFIG_%†i†nŸ së\n", 
sym
->
«me
);

441 i‡(
out_h
)

442 
	`Ârötf
(
out_h
, "#unde‡CONFIG_%s\n", 
sym
->
«me
);

444 
mod
:

445 
	`Ârötf
(
out
, "CONFIG_%s=m\n", 
sym
->
«me
);

446 i‡(
out_h
)

447 
	`Ârötf
(
out_h
, "#deföêCONFIG_%s_MODULE 1\n", 
sym
->
«me
);

449 
yes
:

450 
	`Ârötf
(
out
, "CONFIG_%s=y\n", 
sym
->
«me
);

451 i‡(
out_h
)

452 
	`Ârötf
(
out_h
, "#deföêCONFIG_%†1\n", 
sym
->
«me
);

456 
S_STRING
:

458 
°r
 = 
	`sym_gë_°rög_vÆue
(
sym
);

459 
	`Ârötf
(
out
, "CONFIG_%s=\"", 
sym
->
«me
);

460 i‡(
out_h
)

461 
	`Ârötf
(
out_h
, "#deföêCONFIG_%†\"", 
sym
->
«me
);

463 
l
 = 
	`°rc•n
(
°r
, "\"\\");

464 i‡(
l
) {

465 
	`fwrôe
(
°r
, 
l
, 1, 
out
);

466 i‡(
out_h
)

467 
	`fwrôe
(
°r
, 
l
, 1, 
out_h
);

469 
°r
 +
l
;

470 *
°r
 == '\\' || *str == '"') {

471 
	`Ârötf
(
out
, "\\%c", *
°r
);

472 i‡(
out_h
)

473 
	`Ârötf
(
out_h
, "\\%c", *
°r
);

474 
°r
++;

476 } *
°r
);

477 
	`Âuts
("\"\n", 
out
);

478 i‡(
out_h
)

479 
	`Âuts
("\"\n", 
out_h
);

481 
S_HEX
:

482 
°r
 = 
	`sym_gë_°rög_vÆue
(
sym
);

483 i‡(
°r
[0] != '0' || (str[1] != 'x' && str[1] != 'X')) {

484 
	`Ârötf
(
out
, "CONFIG_%s=%s\n", 
sym
->
«me
, 
°r
);

485 i‡(
out_h
)

486 
	`Ârötf
(
out_h
, "#deföêCONFIG_%†0x%s\n", 
sym
->
«me
, 
°r
);

489 
S_INT
:

490 
°r
 = 
	`sym_gë_°rög_vÆue
(
sym
);

491 
	`Ârötf
(
out
, "CONFIG_%s=%s\n", 
sym
->
«me
, 
°r
);

492 i‡(
out_h
)

493 
	`Ârötf
(
out_h
, "#deföêCONFIG_%†%s\n", 
sym
->
«me
, 
°r
);

498 
√xt
:

499 i‡(
míu
->
li°
) {

500 
míu
 = míu->
li°
;

503 i‡(
míu
->
√xt
)

504 
míu
 = míu->
√xt
;

505 (
míu
 = míu->
∑ª¡
)) {

506 i‡(
míu
->
√xt
) {

507 
míu
 = míu->
√xt
;

512 
	`f˛o£
(
out
);

513 i‡(
out_h
) {

514 
	`f˛o£
(
out_h
);

515 
	`ª«me
(".tmpconfig.h", "include/linux/autoconf.h");

517 i‡(!
«me
 || 
ba£«me
 !
c⁄f_def_fûíame
) {

518 i‡(!
«me
)

519 
«me
 = 
c⁄f_def_fûíame
;

520 
	`•rötf
(
tm≤ame
, "%s.ﬁd", 
«me
);

521 
	`ª«me
(
«me
, 
tm≤ame
);

523 
	`•rötf
(
tm≤ame
, "%s%s", 
dú«me
, 
ba£«me
);

524 i‡(
	`ª«me
(
√w«me
, 
tm≤ame
))

527 
sym_ch™ge_cou¡
 = 0;

530 
	}
}

	@expr.c

6 
	~<°dio.h
>

7 
	~<°dlib.h
>

8 
	~<°rög.h
>

10 
	#LKC_DIRECT_LINK


	)

11 
	~"lkc.h
"

13 
	#DEBUG_EXPR
 0

	)

15 
ex¥
 *
	$ex¥_Æloc_symbﬁ
(
symbﬁ
 *
sym
)

17 
ex¥
 *
e
 = 
	`mÆloc
((*e));

18 
	`mem£t
(
e
, 0, (*e));

19 
e
->
ty≥
 = 
E_SYMBOL
;

20 
e
->
À·
.
sym
 = sym;

21  
e
;

22 
	}
}

24 
ex¥
 *
	$ex¥_Æloc_⁄e
(
ex¥_ty≥
 
ty≥
, 
ex¥
 *
˚
)

26 
ex¥
 *
e
 = 
	`mÆloc
((*e));

27 
	`mem£t
(
e
, 0, (*e));

28 
e
->
ty≥
 =Åype;

29 
e
->
À·
.
ex¥
 = 
˚
;

30  
e
;

31 
	}
}

33 
ex¥
 *
	$ex¥_Æloc_two
(
ex¥_ty≥
 
ty≥
, 
ex¥
 *
e1
, ex¥ *
e2
)

35 
ex¥
 *
e
 = 
	`mÆloc
((*e));

36 
	`mem£t
(
e
, 0, (*e));

37 
e
->
ty≥
 =Åype;

38 
e
->
À·
.
ex¥
 = 
e1
;

39 
e
->
right
.
ex¥
 = 
e2
;

40  
e
;

41 
	}
}

43 
ex¥
 *
	$ex¥_Æloc_comp
(
ex¥_ty≥
 
ty≥
, 
symbﬁ
 *
s1
, symbﬁ *
s2
)

45 
ex¥
 *
e
 = 
	`mÆloc
((*e));

46 
	`mem£t
(
e
, 0, (*e));

47 
e
->
ty≥
 =Åype;

48 
e
->
À·
.
sym
 = 
s1
;

49 
e
->
right
.
sym
 = 
s2
;

50  
e
;

51 
	}
}

53 
ex¥
 *
	$ex¥_Æloc_™d
(
ex¥
 *
e1
, ex¥ *
e2
)

55 i‡(!
e1
)

56  
e2
;

57  
e2
 ? 
	`ex¥_Æloc_two
(
E_AND
, 
e1
,É2) :É1;

58 
	}
}

60 
ex¥
 *
	$ex¥_Æloc_‹
(
ex¥
 *
e1
, ex¥ *
e2
)

62 i‡(!
e1
)

63  
e2
;

64  
e2
 ? 
	`ex¥_Æloc_two
(
E_OR
, 
e1
,É2) :É1;

65 
	}
}

67 
ex¥
 *
	$ex¥_c›y
(
ex¥
 *
‹g
)

69 
ex¥
 *
e
;

71 i‡(!
‹g
)

72  
NULL
;

74 
e
 = 
	`mÆloc
((*
‹g
));

75 
	`mem˝y
(
e
, 
‹g
, (*org));

76 
‹g
->
ty≥
) {

77 
E_SYMBOL
:

78 
e
->
À·
 = 
‹g
->left;

80 
E_NOT
:

81 
e
->
À·
.
ex¥
 = 
	`ex¥_c›y
(
‹g
->left.expr);

83 
E_EQUAL
:

84 
E_UNEQUAL
:

85 
e
->
À·
.
sym
 = 
‹g
->left.sym;

86 
e
->
right
.
sym
 = 
‹g
->right.sym;

88 
E_AND
:

89 
E_OR
:

90 
E_CHOICE
:

91 
e
->
À·
.
ex¥
 = 
	`ex¥_c›y
(
‹g
->left.expr);

92 
e
->
right
.
ex¥
 = 
	`ex¥_c›y
(
‹g
->right.expr);

95 
	`¥ötf
("ˇn'àc›yÅy≥ %d\n", 
e
->
ty≥
);

96 
	`‰ì
(
e
);

97 
e
 = 
NULL
;

101  
e
;

102 
	}
}

104 
	$ex¥_‰ì
(
ex¥
 *
e
)

106 i‡(!
e
)

109 
e
->
ty≥
) {

110 
E_SYMBOL
:

112 
E_NOT
:

113 
	`ex¥_‰ì
(
e
->
À·
.
ex¥
);

115 
E_EQUAL
:

116 
E_UNEQUAL
:

118 
E_OR
:

119 
E_AND
:

120 
	`ex¥_‰ì
(
e
->
À·
.
ex¥
);

121 
	`ex¥_‰ì
(
e
->
right
.
ex¥
);

124 
	`¥ötf
("howÅÿ‰ìÅy≥ %d?\n", 
e
->
ty≥
);

127 
	`‰ì
(
e
);

128 
	}
}

130 
	gå™s_cou¡
;

132 
	#e1
 (*
ï1
)

	)

133 
	#e2
 (*
ï2
)

	)

135 
	$__ex¥_ñimö©e_eq
(
ex¥_ty≥
 
ty≥
, 
ex¥
 **
ï1
, ex¥ **
ï2
)

137 i‡(
e1
->
ty≥
 ==Åype) {

138 
	`__ex¥_ñimö©e_eq
(
ty≥
, &
e1
->
À·
.
ex¥
, &
e2
);

139 
	`__ex¥_ñimö©e_eq
(
ty≥
, &
e1
->
right
.
ex¥
, &
e2
);

142 i‡(
e2
->
ty≥
 ==Åype) {

143 
	`__ex¥_ñimö©e_eq
(
ty≥
, &
e1
, &
e2
->
À·
.
ex¥
);

144 
	`__ex¥_ñimö©e_eq
(
ty≥
, &
e1
, &
e2
->
right
.
ex¥
);

147 i‡(
e1
->
ty≥
 =
E_SYMBOL
 && 
e2
->type == E_SYMBOL &&

148 
e1
->
À·
.
sym
 =
e2
->À·.sym && (e1->À·.sym->
Êags
 & (
SYMBOL_YES
|
SYMBOL_NO
)))

150 i‡(!
	`ex¥_eq
(
e1
, 
e2
))

152 
å™s_cou¡
++;

153 
	`ex¥_‰ì
(
e1
);Éx¥_‰ì(
e2
);

154 
ty≥
) {

155 
E_OR
:

156 
e1
 = 
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_no
);

157 
e2
 = 
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_no
);

159 
E_AND
:

160 
e1
 = 
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_yes
);

161 
e2
 = 
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_yes
);

166 
	}
}

168 
	$ex¥_ñimö©e_eq
(
ex¥
 **
ï1
, ex¥ **
ï2
)

170 i‡(!
e1
 || !
e2
)

172 
e1
->
ty≥
) {

173 
E_OR
:

174 
E_AND
:

175 
	`__ex¥_ñimö©e_eq
(
e1
->
ty≥
, 
ï1
, 
ï2
);

179 i‡(
e1
->
ty≥
 !
e2
->type) e2->type) {

180 
E_OR
:

181 
E_AND
:

182 
	`__ex¥_ñimö©e_eq
(
e2
->
ty≥
, 
ï1
, 
ï2
);

186 
e1
 = 
	`ex¥_ñimö©e_yn
(e1);

187 
e2
 = 
	`ex¥_ñimö©e_yn
(e2);

188 
	}
}

190 #unde‡
e1


191 #unde‡
e2


193 
	$ex¥_eq
(
ex¥
 *
e1
, ex¥ *
e2
)

195 
ªs
, 
ﬁd_cou¡
;

197 i‡(
e1
->
ty≥
 !
e2
->type)

199 
e1
->
ty≥
) {

200 
E_EQUAL
:

201 
E_UNEQUAL
:

202  
e1
->
À·
.
sym
 =
e2
->À·.sym &&É1->
right
.sym ==É2->right.sym;

203 
E_SYMBOL
:

204  
e1
->
À·
.
sym
 =
e2
->left.sym;

205 
E_NOT
:

206  
	`ex¥_eq
(
e1
->
À·
.
ex¥
, 
e2
->left.expr);

207 
E_AND
:

208 
E_OR
:

209 
e1
 = 
	`ex¥_c›y
(e1);

210 
e2
 = 
	`ex¥_c›y
(e2);

211 
ﬁd_cou¡
 = 
å™s_cou¡
;

212 
	`ex¥_ñimö©e_eq
(&
e1
, &
e2
);

213 
ªs
 = (
e1
->
ty≥
 =
E_SYMBOL
 && 
e2
->type == E_SYMBOL &&

214 
e1
->
À·
.
sym
 =
e2
->left.sym);

215 
	`ex¥_‰ì
(
e1
);

216 
	`ex¥_‰ì
(
e2
);

217 
å™s_cou¡
 = 
ﬁd_cou¡
;

218  
ªs
;

219 
E_CHOICE
:

220 
E_RANGE
:

221 
E_NONE
:

225 i‡(
DEBUG_EXPR
) {

226 
	`ex¥_Âröt
(
e1
, 
°dout
);

227 
	`¥ötf
(" = ");

228 
	`ex¥_Âröt
(
e2
, 
°dout
);

229 
	`¥ötf
(" ?\n");

233 
	}
}

235 
ex¥
 *
	$ex¥_ñimö©e_yn
(
ex¥
 *
e
)

237 
ex¥
 *
tmp
;

239 i‡(
e
Ëe->
ty≥
) {

240 
E_AND
:

241 
e
->
À·
.
ex¥
 = 
	`ex¥_ñimö©e_yn
(e->left.expr);

242 
e
->
right
.
ex¥
 = 
	`ex¥_ñimö©e_yn
(e->right.expr);

243 i‡(
e
->
À·
.
ex¥
->
ty≥
 =
E_SYMBOL
) {

244 i‡(
e
->
À·
.
ex¥
->À·.
sym
 =&
symbﬁ_no
) {

245 
	`ex¥_‰ì
(
e
->
À·
.
ex¥
);

246 
	`ex¥_‰ì
(
e
->
right
.
ex¥
);

247 
e
->
ty≥
 = 
E_SYMBOL
;

248 
e
->
À·
.
sym
 = &
symbﬁ_no
;

249 
e
->
right
.
ex¥
 = 
NULL
;

250  
e
;

251 } i‡(
e
->
À·
.
ex¥
->À·.
sym
 =&
symbﬁ_yes
) {

252 
	`‰ì
(
e
->
À·
.
ex¥
);

253 
tmp
 = 
e
->
right
.
ex¥
;

254 *
e
 = *”->
right
.
ex¥
);

255 
	`‰ì
(
tmp
);

256  
e
;

259 i‡(
e
->
right
.
ex¥
->
ty≥
 =
E_SYMBOL
) {

260 i‡(
e
->
right
.
ex¥
->
À·
.
sym
 =&
symbﬁ_no
) {

261 
	`ex¥_‰ì
(
e
->
À·
.
ex¥
);

262 
	`ex¥_‰ì
(
e
->
right
.
ex¥
);

263 
e
->
ty≥
 = 
E_SYMBOL
;

264 
e
->
À·
.
sym
 = &
symbﬁ_no
;

265 
e
->
right
.
ex¥
 = 
NULL
;

266  
e
;

267 } i‡(
e
->
right
.
ex¥
->
À·
.
sym
 =&
symbﬁ_yes
) {

268 
	`‰ì
(
e
->
right
.
ex¥
);

269 
tmp
 = 
e
->
À·
.
ex¥
;

270 *
e
 = *”->
À·
.
ex¥
);

271 
	`‰ì
(
tmp
);

272  
e
;

276 
E_OR
:

277 
e
->
À·
.
ex¥
 = 
	`ex¥_ñimö©e_yn
(e->left.expr);

278 
e
->
right
.
ex¥
 = 
	`ex¥_ñimö©e_yn
(e->right.expr);

279 i‡(
e
->
À·
.
ex¥
->
ty≥
 =
E_SYMBOL
) {

280 i‡(
e
->
À·
.
ex¥
->À·.
sym
 =&
symbﬁ_no
) {

281 
	`‰ì
(
e
->
À·
.
ex¥
);

282 
tmp
 = 
e
->
right
.
ex¥
;

283 *
e
 = *”->
right
.
ex¥
);

284 
	`‰ì
(
tmp
);

285  
e
;

286 } i‡(
e
->
À·
.
ex¥
->À·.
sym
 =&
symbﬁ_yes
) {

287 
	`ex¥_‰ì
(
e
->
À·
.
ex¥
);

288 
	`ex¥_‰ì
(
e
->
right
.
ex¥
);

289 
e
->
ty≥
 = 
E_SYMBOL
;

290 
e
->
À·
.
sym
 = &
symbﬁ_yes
;

291 
e
->
right
.
ex¥
 = 
NULL
;

292  
e
;

295 i‡(
e
->
right
.
ex¥
->
ty≥
 =
E_SYMBOL
) {

296 i‡(
e
->
right
.
ex¥
->
À·
.
sym
 =&
symbﬁ_no
) {

297 
	`‰ì
(
e
->
right
.
ex¥
);

298 
tmp
 = 
e
->
À·
.
ex¥
;

299 *
e
 = *”->
À·
.
ex¥
);

300 
	`‰ì
(
tmp
);

301  
e
;

302 } i‡(
e
->
right
.
ex¥
->
À·
.
sym
 =&
symbﬁ_yes
) {

303 
	`ex¥_‰ì
(
e
->
À·
.
ex¥
);

304 
	`ex¥_‰ì
(
e
->
right
.
ex¥
);

305 
e
->
ty≥
 = 
E_SYMBOL
;

306 
e
->
À·
.
sym
 = &
symbﬁ_yes
;

307 
e
->
right
.
ex¥
 = 
NULL
;

308  
e
;

315  
e
;

316 
	}
}

321 
ex¥
 *
	$ex¥_å™s_boﬁ
(
ex¥
 *
e
)

323 i‡(!
e
)

324  
NULL
;

325 
e
->
ty≥
) {

326 
E_AND
:

327 
E_OR
:

328 
E_NOT
:

329 
e
->
À·
.
ex¥
 = 
	`ex¥_å™s_boﬁ
(e->left.expr);

330 
e
->
right
.
ex¥
 = 
	`ex¥_å™s_boﬁ
(e->right.expr);

332 
E_UNEQUAL
:

334 i‡(
e
->
À·
.
sym
->
ty≥
 =
S_TRISTATE
) {

335 i‡(
e
->
right
.
sym
 =&
symbﬁ_no
) {

336 
e
->
ty≥
 = 
E_SYMBOL
;

337 
e
->
right
.
sym
 = 
NULL
;

344  
e
;

345 
	}
}

350 
ex¥
 *
	$ex¥_joö_‹
(
ex¥
 *
e1
, ex¥ *
e2
)

352 
ex¥
 *
tmp
;

353 
symbﬁ
 *
sym1
, *
sym2
;

355 i‡(
	`ex¥_eq
(
e1
, 
e2
))

356  
	`ex¥_c›y
(
e1
);

357 i‡(
e1
->
ty≥
 !
E_EQUAL
 &&É1->ty≥ !
E_UNEQUAL
 &&É1->ty≥ !
E_SYMBOL
 &&É1->ty≥ !
E_NOT
)

358  
NULL
;

359 i‡(
e2
->
ty≥
 !
E_EQUAL
 &&É2->ty≥ !
E_UNEQUAL
 &&É2->ty≥ !
E_SYMBOL
 &&É2->ty≥ !
E_NOT
)

360  
NULL
;

361 i‡(
e1
->
ty≥
 =
E_NOT
) {

362 
tmp
 = 
e1
->
À·
.
ex¥
;

363 i‡(
tmp
->
ty≥
 !
E_EQUAL
 &&Åmp->ty≥ !
E_UNEQUAL
 &&Åmp->ty≥ !
E_SYMBOL
)

364  
NULL
;

365 
sym1
 = 
tmp
->
À·
.
sym
;

367 
sym1
 = 
e1
->
À·
.
sym
;

368 i‡(
e2
->
ty≥
 =
E_NOT
) {

369 i‡(
e2
->
À·
.
ex¥
->
ty≥
 !
E_SYMBOL
)

370  
NULL
;

371 
sym2
 = 
e2
->
À·
.
ex¥
->À·.
sym
;

373 
sym2
 = 
e2
->
À·
.
sym
;

374 i‡(
sym1
 !
sym2
)

375  
NULL
;

376 i‡(
sym1
->
ty≥
 !
S_BOOLEAN
 && sym1->ty≥ !
S_TRISTATE
)

377  
NULL
;

378 i‡(
sym1
->
ty≥
 =
S_TRISTATE
) {

379 i‡(
e1
->
ty≥
 =
E_EQUAL
 && 
e2
->type == E_EQUAL &&

380 ((
e1
->
right
.
sym
 =&
symbﬁ_yes
 && 
e2
->right.sym =&
symbﬁ_mod
) ||

381 (
e1
->
right
.
sym
 =&
symbﬁ_mod
 && 
e2
->right.sym =&
symbﬁ_yes
))) {

383  
	`ex¥_Æloc_comp
(
E_UNEQUAL
, 
sym1
, &
symbﬁ_no
);

385 i‡(
e1
->
ty≥
 =
E_EQUAL
 && 
e2
->type == E_EQUAL &&

386 ((
e1
->
right
.
sym
 =&
symbﬁ_yes
 && 
e2
->right.sym =&
symbﬁ_no
) ||

387 (
e1
->
right
.
sym
 =&
symbﬁ_no
 && 
e2
->right.sym =&
symbﬁ_yes
))) {

389  
	`ex¥_Æloc_comp
(
E_UNEQUAL
, 
sym1
, &
symbﬁ_mod
);

391 i‡(
e1
->
ty≥
 =
E_EQUAL
 && 
e2
->type == E_EQUAL &&

392 ((
e1
->
right
.
sym
 =&
symbﬁ_mod
 && 
e2
->right.sym =&
symbﬁ_no
) ||

393 (
e1
->
right
.
sym
 =&
symbﬁ_no
 && 
e2
->right.sym =&
symbﬁ_mod
))) {

395  
	`ex¥_Æloc_comp
(
E_UNEQUAL
, 
sym1
, &
symbﬁ_yes
);

398 i‡(
sym1
->
ty≥
 =
S_BOOLEAN
 && sym1 =
sym2
) {

399 i‡((
e1
->
ty≥
 =
E_NOT
 &&É1->
À·
.
ex¥
->ty≥ =
E_SYMBOL
 && 
e2
->type == E_SYMBOL) ||

400 (
e2
->
ty≥
 =
E_NOT
 &&É2->
À·
.
ex¥
->ty≥ =
E_SYMBOL
 && 
e1
->type == E_SYMBOL))

401  
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_yes
);

404 i‡(
DEBUG_EXPR
) {

405 
	`¥ötf
("optimize (");

406 
	`ex¥_Âröt
(
e1
, 
°dout
);

407 
	`¥ötf
(") || (");

408 
	`ex¥_Âröt
(
e2
, 
°dout
);

409 
	`¥ötf
(")?\n");

411  
NULL
;

412 
	}
}

414 
ex¥
 *
	$ex¥_joö_™d
(
ex¥
 *
e1
, ex¥ *
e2
)

416 
ex¥
 *
tmp
;

417 
symbﬁ
 *
sym1
, *
sym2
;

419 i‡(
	`ex¥_eq
(
e1
, 
e2
))

420  
	`ex¥_c›y
(
e1
);

421 i‡(
e1
->
ty≥
 !
E_EQUAL
 &&É1->ty≥ !
E_UNEQUAL
 &&É1->ty≥ !
E_SYMBOL
 &&É1->ty≥ !
E_NOT
)

422  
NULL
;

423 i‡(
e2
->
ty≥
 !
E_EQUAL
 &&É2->ty≥ !
E_UNEQUAL
 &&É2->ty≥ !
E_SYMBOL
 &&É2->ty≥ !
E_NOT
)

424  
NULL
;

425 i‡(
e1
->
ty≥
 =
E_NOT
) {

426 
tmp
 = 
e1
->
À·
.
ex¥
;

427 i‡(
tmp
->
ty≥
 !
E_EQUAL
 &&Åmp->ty≥ !
E_UNEQUAL
 &&Åmp->ty≥ !
E_SYMBOL
)

428  
NULL
;

429 
sym1
 = 
tmp
->
À·
.
sym
;

431 
sym1
 = 
e1
->
À·
.
sym
;

432 i‡(
e2
->
ty≥
 =
E_NOT
) {

433 i‡(
e2
->
À·
.
ex¥
->
ty≥
 !
E_SYMBOL
)

434  
NULL
;

435 
sym2
 = 
e2
->
À·
.
ex¥
->À·.
sym
;

437 
sym2
 = 
e2
->
À·
.
sym
;

438 i‡(
sym1
 !
sym2
)

439  
NULL
;

440 i‡(
sym1
->
ty≥
 !
S_BOOLEAN
 && sym1->ty≥ !
S_TRISTATE
)

441  
NULL
;

443 i‡((
e1
->
ty≥
 =
E_SYMBOL
 && 
e2
->ty≥ =
E_EQUAL
 &&É2->
right
.
sym
 =&
symbﬁ_yes
) ||

444 (
e2
->
ty≥
 =
E_SYMBOL
 && 
e1
->ty≥ =
E_EQUAL
 &&É1->
right
.
sym
 =&
symbﬁ_yes
))

446  
	`ex¥_Æloc_comp
(
E_EQUAL
, 
sym1
, &
symbﬁ_yes
);

448 i‡((
e1
->
ty≥
 =
E_SYMBOL
 && 
e2
->ty≥ =
E_UNEQUAL
 &&É2->
right
.
sym
 =&
symbﬁ_no
) ||

449 (
e2
->
ty≥
 =
E_SYMBOL
 && 
e1
->ty≥ =
E_UNEQUAL
 &&É1->
right
.
sym
 =&
symbﬁ_no
))

451  
	`ex¥_Æloc_symbﬁ
(
sym1
);

453 i‡((
e1
->
ty≥
 =
E_SYMBOL
 && 
e2
->ty≥ =
E_UNEQUAL
 &&É2->
right
.
sym
 =&
symbﬁ_mod
) ||

454 (
e2
->
ty≥
 =
E_SYMBOL
 && 
e1
->ty≥ =
E_UNEQUAL
 &&É1->
right
.
sym
 =&
symbﬁ_mod
))

456  
	`ex¥_Æloc_comp
(
E_EQUAL
, 
sym1
, &
symbﬁ_yes
);

458 i‡(
sym1
->
ty≥
 =
S_TRISTATE
) {

459 i‡(
e1
->
ty≥
 =
E_EQUAL
 && 
e2
->ty≥ =
E_UNEQUAL
) {

461 
sym2
 = 
e1
->
right
.
sym
;

462 i‡((
e2
->
right
.
sym
->
Êags
 & 
SYMBOL_CONST
Ë&& (
sym2
->flags & SYMBOL_CONST))

463  
sym2
 !
e2
->
right
.
sym
 ? 
	`ex¥_Æloc_comp
(
E_EQUAL
, 
sym1
, sym2)

464 : 
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_no
);

466 i‡(
e1
->
ty≥
 =
E_UNEQUAL
 && 
e2
->ty≥ =
E_EQUAL
) {

468 
sym2
 = 
e2
->
right
.
sym
;

469 i‡((
e1
->
right
.
sym
->
Êags
 & 
SYMBOL_CONST
Ë&& (
sym2
->flags & SYMBOL_CONST))

470  
sym2
 !
e1
->
right
.
sym
 ? 
	`ex¥_Æloc_comp
(
E_EQUAL
, 
sym1
, sym2)

471 : 
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_no
);

473 i‡(
e1
->
ty≥
 =
E_UNEQUAL
 && 
e2
->type == E_UNEQUAL &&

474 ((
e1
->
right
.
sym
 =&
symbﬁ_yes
 && 
e2
->right.sym =&
symbﬁ_no
) ||

475 (
e1
->
right
.
sym
 =&
symbﬁ_no
 && 
e2
->right.sym =&
symbﬁ_yes
)))

477  
	`ex¥_Æloc_comp
(
E_EQUAL
, 
sym1
, &
symbﬁ_mod
);

479 i‡(
e1
->
ty≥
 =
E_UNEQUAL
 && 
e2
->type == E_UNEQUAL &&

480 ((
e1
->
right
.
sym
 =&
symbﬁ_yes
 && 
e2
->right.sym =&
symbﬁ_mod
) ||

481 (
e1
->
right
.
sym
 =&
symbﬁ_mod
 && 
e2
->right.sym =&
symbﬁ_yes
)))

483  
	`ex¥_Æloc_comp
(
E_EQUAL
, 
sym1
, &
symbﬁ_no
);

485 i‡(
e1
->
ty≥
 =
E_UNEQUAL
 && 
e2
->type == E_UNEQUAL &&

486 ((
e1
->
right
.
sym
 =&
symbﬁ_mod
 && 
e2
->right.sym =&
symbﬁ_no
) ||

487 (
e1
->
right
.
sym
 =&
symbﬁ_no
 && 
e2
->right.sym =&
symbﬁ_mod
)))

489  
	`ex¥_Æloc_comp
(
E_EQUAL
, 
sym1
, &
symbﬁ_yes
);

491 i‡((
e1
->
ty≥
 =
E_SYMBOL
 && 
e2
->ty≥ =
E_EQUAL
 &&É2->
right
.
sym
 =&
symbﬁ_mod
) ||

492 (
e2
->
ty≥
 =
E_SYMBOL
 && 
e1
->ty≥ =
E_EQUAL
 &&É1->
right
.
sym
 =&
symbﬁ_mod
) ||

493 (
e1
->
ty≥
 =
E_SYMBOL
 && 
e2
->ty≥ =
E_UNEQUAL
 &&É2->
right
.
sym
 =&
symbﬁ_yes
) ||

494 (
e2
->
ty≥
 =
E_SYMBOL
 && 
e1
->ty≥ =
E_UNEQUAL
 &&É1->
right
.
sym
 =&
symbﬁ_yes
))

495  
NULL
;

498 i‡(
DEBUG_EXPR
) {

499 
	`¥ötf
("optimize (");

500 
	`ex¥_Âröt
(
e1
, 
°dout
);

501 
	`¥ötf
(") && (");

502 
	`ex¥_Âröt
(
e2
, 
°dout
);

503 
	`¥ötf
(")?\n");

505  
NULL
;

506 
	}
}

508 
	$ex¥_ñimö©e_dups1
(
ex¥_ty≥
 
ty≥
, 
ex¥
 **
ï1
, ex¥ **
ï2
)

510 
	#e1
 (*
ï1
)

	)

511 
	#e2
 (*
ï2
)

	)

512 
ex¥
 *
tmp
;

514 i‡(
e1
->
ty≥
 ==Åype) {

515 
	`ex¥_ñimö©e_dups1
(
ty≥
, &
e1
->
À·
.
ex¥
, &
e2
);

516 
	`ex¥_ñimö©e_dups1
(
ty≥
, &
e1
->
right
.
ex¥
, &
e2
);

519 i‡(
e2
->
ty≥
 ==Åype) {

520 
	`ex¥_ñimö©e_dups1
(
ty≥
, &
e1
, &
e2
->
À·
.
ex¥
);

521 
	`ex¥_ñimö©e_dups1
(
ty≥
, &
e1
, &
e2
->
right
.
ex¥
);

524 i‡(
e1
 =
e2
)

527 
e1
->
ty≥
) {

528 
E_OR
: 
E_AND
:

529 
	`ex¥_ñimö©e_dups1
(
e1
->
ty≥
, &e1, &e1);

534 
ty≥
) {

535 
E_OR
:

536 
tmp
 = 
	`ex¥_joö_‹
(
e1
, 
e2
);

537 i‡(
tmp
) {

538 
	`ex¥_‰ì
(
e1
);Éx¥_‰ì(
e2
);

539 
e1
 = 
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_no
);

540 
e2
 = 
tmp
;

541 
å™s_cou¡
++;

544 
E_AND
:

545 
tmp
 = 
	`ex¥_joö_™d
(
e1
, 
e2
);

546 i‡(
tmp
) {

547 
	`ex¥_‰ì
(
e1
);Éx¥_‰ì(
e2
);

548 
e1
 = 
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_yes
);

549 
e2
 = 
tmp
;

550 
å™s_cou¡
++;

556 #unde‡
e1


557 #unde‡
e2


558 
	}
}

560 
	$ex¥_ñimö©e_dups2
(
ex¥_ty≥
 
ty≥
, 
ex¥
 **
ï1
, ex¥ **
ï2
)

562 
	#e1
 (*
ï1
)

	)

563 
	#e2
 (*
ï2
)

	)

564 
ex¥
 *
tmp
, *
tmp1
, *
tmp2
;

566 i‡(
e1
->
ty≥
 ==Åype) {

567 
	`ex¥_ñimö©e_dups2
(
ty≥
, &
e1
->
À·
.
ex¥
, &
e2
);

568 
	`ex¥_ñimö©e_dups2
(
ty≥
, &
e1
->
right
.
ex¥
, &
e2
);

571 i‡(
e2
->
ty≥
 ==Åype) {

572 
	`ex¥_ñimö©e_dups2
(
ty≥
, &
e1
, &
e2
->
À·
.
ex¥
);

573 
	`ex¥_ñimö©e_dups2
(
ty≥
, &
e1
, &
e2
->
right
.
ex¥
);

575 i‡(
e1
 =
e2
)

578 
e1
->
ty≥
) {

579 
E_OR
:

580 
	`ex¥_ñimö©e_dups2
(
e1
->
ty≥
, &e1, &e1);

582 
tmp1
 = 
	`ex¥_å™sf‹m
(
	`ex¥_Æloc_⁄e
(
E_NOT
, 
	`ex¥_c›y
(
e1
)));

583 
tmp2
 = 
	`ex¥_c›y
(
e2
);

584 
tmp
 = 
	`ex¥_exåa˘_eq_™d
(&
tmp1
, &
tmp2
);

585 i‡(
	`ex¥_is_yes
(
tmp1
)) {

586 
	`ex¥_‰ì
(
e1
);

587 
e1
 = 
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_no
);

588 
å™s_cou¡
++;

590 
	`ex¥_‰ì
(
tmp2
);

591 
	`ex¥_‰ì
(
tmp1
);

592 
	`ex¥_‰ì
(
tmp
);

594 
E_AND
:

595 
	`ex¥_ñimö©e_dups2
(
e1
->
ty≥
, &e1, &e1);

597 
tmp1
 = 
	`ex¥_å™sf‹m
(
	`ex¥_Æloc_⁄e
(
E_NOT
, 
	`ex¥_c›y
(
e1
)));

598 
tmp2
 = 
	`ex¥_c›y
(
e2
);

599 
tmp
 = 
	`ex¥_exåa˘_eq_‹
(&
tmp1
, &
tmp2
);

600 i‡(
	`ex¥_is_no
(
tmp1
)) {

601 
	`ex¥_‰ì
(
e1
);

602 
e1
 = 
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_yes
);

603 
å™s_cou¡
++;

605 
	`ex¥_‰ì
(
tmp2
);

606 
	`ex¥_‰ì
(
tmp1
);

607 
	`ex¥_‰ì
(
tmp
);

612 #unde‡
e1


613 #unde‡
e2


614 
	}
}

616 
ex¥
 *
	$ex¥_ñimö©e_dups
(
ex¥
 *
e
)

618 
ﬁdcou¡
;

619 i‡(!
e
)

620  
e
;

622 
ﬁdcou¡
 = 
å™s_cou¡
;

624 
å™s_cou¡
 = 0;

625 
e
->
ty≥
) {

626 
E_OR
: 
E_AND
:

627 
	`ex¥_ñimö©e_dups1
(
e
->
ty≥
, &e, &e);

628 
	`ex¥_ñimö©e_dups2
(
e
->
ty≥
, &e, &e);

632 i‡(!
å™s_cou¡
)

634 
e
 = 
	`ex¥_ñimö©e_yn
(e);

636 
å™s_cou¡
 = 
ﬁdcou¡
;

637  
e
;

638 
	}
}

640 
ex¥
 *
	$ex¥_å™sf‹m
(
ex¥
 *
e
)

642 
ex¥
 *
tmp
;

644 i‡(!
e
)

645  
NULL
;

646 
e
->
ty≥
) {

647 
E_EQUAL
:

648 
E_UNEQUAL
:

649 
E_SYMBOL
:

650 
E_CHOICE
:

653 
e
->
À·
.
ex¥
 = 
	`ex¥_å™sf‹m
(e->left.expr);

654 
e
->
right
.
ex¥
 = 
	`ex¥_å™sf‹m
(e->right.expr);

657 
e
->
ty≥
) {

658 
E_EQUAL
:

659 i‡(
e
->
À·
.
sym
->
ty≥
 !
S_BOOLEAN
)

661 i‡(
e
->
right
.
sym
 =&
symbﬁ_no
) {

662 
e
->
ty≥
 = 
E_NOT
;

663 
e
->
À·
.
ex¥
 = 
	`ex¥_Æloc_symbﬁ
”->À·.
sym
);

664 
e
->
right
.
sym
 = 
NULL
;

667 i‡(
e
->
right
.
sym
 =&
symbﬁ_mod
) {

668 
	`¥ötf
("boﬁó¿symbﬁ %†ã°ed f‹ 'm'?Åe° f‹˚dÅÿ'n'\n", 
e
->
À·
.
sym
->
«me
);

669 
e
->
ty≥
 = 
E_SYMBOL
;

670 
e
->
À·
.
sym
 = &
symbﬁ_no
;

671 
e
->
right
.
sym
 = 
NULL
;

674 i‡(
e
->
right
.
sym
 =&
symbﬁ_yes
) {

675 
e
->
ty≥
 = 
E_SYMBOL
;

676 
e
->
right
.
sym
 = 
NULL
;

680 
E_UNEQUAL
:

681 i‡(
e
->
À·
.
sym
->
ty≥
 !
S_BOOLEAN
)

683 i‡(
e
->
right
.
sym
 =&
symbﬁ_no
) {

684 
e
->
ty≥
 = 
E_SYMBOL
;

685 
e
->
right
.
sym
 = 
NULL
;

688 i‡(
e
->
right
.
sym
 =&
symbﬁ_mod
) {

689 
	`¥ötf
("boﬁó¿symbﬁ %†ã°ed f‹ 'm'?Åe° f‹˚dÅÿ'y'\n", 
e
->
À·
.
sym
->
«me
);

690 
e
->
ty≥
 = 
E_SYMBOL
;

691 
e
->
À·
.
sym
 = &
symbﬁ_yes
;

692 
e
->
right
.
sym
 = 
NULL
;

695 i‡(
e
->
right
.
sym
 =&
symbﬁ_yes
) {

696 
e
->
ty≥
 = 
E_NOT
;

697 
e
->
À·
.
ex¥
 = 
	`ex¥_Æloc_symbﬁ
”->À·.
sym
);

698 
e
->
right
.
sym
 = 
NULL
;

702 
E_NOT
:

703 
e
->
À·
.
ex¥
->
ty≥
) {

704 
E_NOT
:

706 
tmp
 = 
e
->
À·
.
ex¥
->left.expr;

707 
	`‰ì
(
e
->
À·
.
ex¥
);

708 
	`‰ì
(
e
);

709 
e
 = 
tmp
;

710 
e
 = 
	`ex¥_å™sf‹m
(e);

712 
E_EQUAL
:

713 
E_UNEQUAL
:

715 
tmp
 = 
e
->
À·
.
ex¥
;

716 
	`‰ì
(
e
);

717 
e
 = 
tmp
;

718 
e
->
ty≥
 =É->ty≥ =
E_EQUAL
 ? 
E_UNEQUAL
 : E_EQUAL;

720 
E_OR
:

722 
tmp
 = 
e
->
À·
.
ex¥
;

723 
e
->
ty≥
 = 
E_AND
;

724 
e
->
right
.
ex¥
 = 
	`ex¥_Æloc_⁄e
(
E_NOT
, 
tmp
->right.expr);

725 
tmp
->
ty≥
 = 
E_NOT
;

726 
tmp
->
right
.
ex¥
 = 
NULL
;

727 
e
 = 
	`ex¥_å™sf‹m
(e);

729 
E_AND
:

731 
tmp
 = 
e
->
À·
.
ex¥
;

732 
e
->
ty≥
 = 
E_OR
;

733 
e
->
right
.
ex¥
 = 
	`ex¥_Æloc_⁄e
(
E_NOT
, 
tmp
->right.expr);

734 
tmp
->
ty≥
 = 
E_NOT
;

735 
tmp
->
right
.
ex¥
 = 
NULL
;

736 
e
 = 
	`ex¥_å™sf‹m
(e);

738 
E_SYMBOL
:

739 i‡(
e
->
À·
.
ex¥
->À·.
sym
 =&
symbﬁ_yes
) {

741 
tmp
 = 
e
->
À·
.
ex¥
;

742 
	`‰ì
(
e
);

743 
e
 = 
tmp
;

744 
e
->
ty≥
 = 
E_SYMBOL
;

745 
e
->
À·
.
sym
 = &
symbﬁ_no
;

748 i‡(
e
->
À·
.
ex¥
->À·.
sym
 =&
symbﬁ_mod
) {

750 
tmp
 = 
e
->
À·
.
ex¥
;

751 
	`‰ì
(
e
);

752 
e
 = 
tmp
;

753 
e
->
ty≥
 = 
E_SYMBOL
;

754 
e
->
À·
.
sym
 = &
symbﬁ_mod
;

757 i‡(
e
->
À·
.
ex¥
->À·.
sym
 =&
symbﬁ_no
) {

759 
tmp
 = 
e
->
À·
.
ex¥
;

760 
	`‰ì
(
e
);

761 
e
 = 
tmp
;

762 
e
->
ty≥
 = 
E_SYMBOL
;

763 
e
->
À·
.
sym
 = &
symbﬁ_yes
;

774  
e
;

775 
	}
}

777 
	$ex¥_c⁄èös_symbﬁ
(
ex¥
 *
dï
, 
symbﬁ
 *
sym
)

779 i‡(!
dï
)

782 
dï
->
ty≥
) {

783 
E_AND
:

784 
E_OR
:

785  
	`ex¥_c⁄èös_symbﬁ
(
dï
->
À·
.
ex¥
, 
sym
) ||

786 
	`ex¥_c⁄èös_symbﬁ
(
dï
->
right
.
ex¥
, 
sym
);

787 
E_SYMBOL
:

788  
dï
->
À·
.
sym
 == sym;

789 
E_EQUAL
:

790 
E_UNEQUAL
:

791  
dï
->
À·
.
sym
 == sym ||

792 
dï
->
right
.
sym
 == sym;

793 
E_NOT
:

794  
	`ex¥_c⁄èös_symbﬁ
(
dï
->
À·
.
ex¥
, 
sym
);

799 
	}
}

801 
boﬁ
 
	$ex¥_dïíds_symbﬁ
(
ex¥
 *
dï
, 
symbﬁ
 *
sym
)

803 i‡(!
dï
)

804  
Ál£
;

806 
dï
->
ty≥
) {

807 
E_AND
:

808  
	`ex¥_dïíds_symbﬁ
(
dï
->
À·
.
ex¥
, 
sym
) ||

809 
	`ex¥_dïíds_symbﬁ
(
dï
->
right
.
ex¥
, 
sym
);

810 
E_SYMBOL
:

811  
dï
->
À·
.
sym
 == sym;

812 
E_EQUAL
:

813 i‡(
dï
->
À·
.
sym
 == sym) {

814 i‡(
dï
->
right
.
sym
 =&
symbﬁ_yes
 || dï->right.sym =&
symbﬁ_mod
)

815  
åue
;

818 
E_UNEQUAL
:

819 i‡(
dï
->
À·
.
sym
 == sym) {

820 i‡(
dï
->
right
.
sym
 =&
symbﬁ_no
)

821  
åue
;

827  
Ál£
;

828 
	}
}

830 
ex¥
 *
	$ex¥_exåa˘_eq_™d
(
ex¥
 **
ï1
, ex¥ **
ï2
)

832 
ex¥
 *
tmp
 = 
NULL
;

833 
	`ex¥_exåa˘_eq
(
E_AND
, &
tmp
, 
ï1
, 
ï2
);

834 i‡(
tmp
) {

835 *
ï1
 = 
	`ex¥_ñimö©e_yn
(*ep1);

836 *
ï2
 = 
	`ex¥_ñimö©e_yn
(*ep2);

838  
tmp
;

839 
	}
}

841 
ex¥
 *
	$ex¥_exåa˘_eq_‹
(
ex¥
 **
ï1
, ex¥ **
ï2
)

843 
ex¥
 *
tmp
 = 
NULL
;

844 
	`ex¥_exåa˘_eq
(
E_OR
, &
tmp
, 
ï1
, 
ï2
);

845 i‡(
tmp
) {

846 *
ï1
 = 
	`ex¥_ñimö©e_yn
(*ep1);

847 *
ï2
 = 
	`ex¥_ñimö©e_yn
(*ep2);

849  
tmp
;

850 
	}
}

852 
	$ex¥_exåa˘_eq
(
ex¥_ty≥
 
ty≥
, 
ex¥
 **
ï
, ex¥ **
ï1
, ex¥ **
ï2
)

854 
	#e1
 (*
ï1
)

	)

855 
	#e2
 (*
ï2
)

	)

856 i‡(
e1
->
ty≥
 ==Åype) {

857 
	`ex¥_exåa˘_eq
(
ty≥
, 
ï
, &
e1
->
À·
.
ex¥
, &
e2
);

858 
	`ex¥_exåa˘_eq
(
ty≥
, 
ï
, &
e1
->
right
.
ex¥
, &
e2
);

861 i‡(
e2
->
ty≥
 ==Åype) {

862 
	`ex¥_exåa˘_eq
(
ty≥
, 
ï
, 
ï1
, &
e2
->
À·
.
ex¥
);

863 
	`ex¥_exåa˘_eq
(
ty≥
, 
ï
, 
ï1
, &
e2
->
right
.
ex¥
);

866 i‡(
	`ex¥_eq
(
e1
, 
e2
)) {

867 *
ï
 = *ï ? 
	`ex¥_Æloc_two
(
ty≥
, *ï, 
e1
) :É1;

868 
	`ex¥_‰ì
(
e2
);

869 i‡(
ty≥
 =
E_AND
) {

870 
e1
 = 
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_yes
);

871 
e2
 = 
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_yes
);

872 } i‡(
ty≥
 =
E_OR
) {

873 
e1
 = 
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_no
);

874 
e2
 = 
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_no
);

877 #unde‡
e1


878 #unde‡
e2


879 
	}
}

881 
ex¥
 *
	$ex¥_å™s_com∑ª
(
ex¥
 *
e
, 
ex¥_ty≥
 
ty≥
, 
symbﬁ
 *
sym
)

883 
ex¥
 *
e1
, *
e2
;

885 i‡(!
e
) {

886 
e
 = 
	`ex¥_Æloc_symbﬁ
(
sym
);

887 i‡(
ty≥
 =
E_UNEQUAL
)

888 
e
 = 
	`ex¥_Æloc_⁄e
(
E_NOT
,É);

889  
e
;

891 
e
->
ty≥
) {

892 
E_AND
:

893 
e1
 = 
	`ex¥_å™s_com∑ª
(
e
->
À·
.
ex¥
, 
E_EQUAL
, 
sym
);

894 
e2
 = 
	`ex¥_å™s_com∑ª
(
e
->
right
.
ex¥
, 
E_EQUAL
, 
sym
);

895 i‡(
sym
 =&
symbﬁ_yes
)

896 
e
 = 
	`ex¥_Æloc_two
(
E_AND
, 
e1
, 
e2
);

897 i‡(
sym
 =&
symbﬁ_no
)

898 
e
 = 
	`ex¥_Æloc_two
(
E_OR
, 
e1
, 
e2
);

899 i‡(
ty≥
 =
E_UNEQUAL
)

900 
e
 = 
	`ex¥_Æloc_⁄e
(
E_NOT
,É);

901  
e
;

902 
E_OR
:

903 
e1
 = 
	`ex¥_å™s_com∑ª
(
e
->
À·
.
ex¥
, 
E_EQUAL
, 
sym
);

904 
e2
 = 
	`ex¥_å™s_com∑ª
(
e
->
right
.
ex¥
, 
E_EQUAL
, 
sym
);

905 i‡(
sym
 =&
symbﬁ_yes
)

906 
e
 = 
	`ex¥_Æloc_two
(
E_OR
, 
e1
, 
e2
);

907 i‡(
sym
 =&
symbﬁ_no
)

908 
e
 = 
	`ex¥_Æloc_two
(
E_AND
, 
e1
, 
e2
);

909 i‡(
ty≥
 =
E_UNEQUAL
)

910 
e
 = 
	`ex¥_Æloc_⁄e
(
E_NOT
,É);

911  
e
;

912 
E_NOT
:

913  
	`ex¥_å™s_com∑ª
(
e
->
À·
.
ex¥
, 
ty≥
 =
E_EQUAL
 ? 
E_UNEQUAL
 : E_EQUAL, 
sym
);

914 
E_UNEQUAL
:

915 
E_EQUAL
:

916 i‡(
ty≥
 =
E_EQUAL
) {

917 i‡(
sym
 =&
symbﬁ_yes
)

918  
	`ex¥_c›y
(
e
);

919 i‡(
sym
 =&
symbﬁ_mod
)

920  
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_no
);

921 i‡(
sym
 =&
symbﬁ_no
)

922  
	`ex¥_Æloc_⁄e
(
E_NOT
, 
	`ex¥_c›y
(
e
));

924 i‡(
sym
 =&
symbﬁ_yes
)

925  
	`ex¥_Æloc_⁄e
(
E_NOT
, 
	`ex¥_c›y
(
e
));

926 i‡(
sym
 =&
symbﬁ_mod
)

927  
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_yes
);

928 i‡(
sym
 =&
symbﬁ_no
)

929  
	`ex¥_c›y
(
e
);

932 
E_SYMBOL
:

933  
	`ex¥_Æloc_comp
(
ty≥
, 
e
->
À·
.
sym
, sym);

934 
E_CHOICE
:

935 
E_RANGE
:

936 
E_NONE
:

939  
NULL
;

940 
	}
}

942 
åi°©e
 
	$ex¥_ˇlc_vÆue
(
ex¥
 *
e
)

944 
åi°©e
 
vÆ1
, 
vÆ2
;

945 c⁄° *
°r1
, *
°r2
;

947 i‡(!
e
)

948  
yes
;

950 
e
->
ty≥
) {

951 
E_SYMBOL
:

952 
	`sym_ˇlc_vÆue
(
e
->
À·
.
sym
);

953  
e
->
À·
.
sym
->
cuº
.
åi
;

954 
E_AND
:

955 
vÆ1
 = 
	`ex¥_ˇlc_vÆue
(
e
->
À·
.
ex¥
);

956 
vÆ2
 = 
	`ex¥_ˇlc_vÆue
(
e
->
right
.
ex¥
);

957  
	`E_AND
(
vÆ1
, 
vÆ2
);

958 
E_OR
:

959 
vÆ1
 = 
	`ex¥_ˇlc_vÆue
(
e
->
À·
.
ex¥
);

960 
vÆ2
 = 
	`ex¥_ˇlc_vÆue
(
e
->
right
.
ex¥
);

961  
	`E_OR
(
vÆ1
, 
vÆ2
);

962 
E_NOT
:

963 
vÆ1
 = 
	`ex¥_ˇlc_vÆue
(
e
->
À·
.
ex¥
);

964  
	`E_NOT
(
vÆ1
);

965 
E_EQUAL
:

966 
	`sym_ˇlc_vÆue
(
e
->
À·
.
sym
);

967 
	`sym_ˇlc_vÆue
(
e
->
right
.
sym
);

968 
°r1
 = 
	`sym_gë_°rög_vÆue
(
e
->
À·
.
sym
);

969 
°r2
 = 
	`sym_gë_°rög_vÆue
(
e
->
right
.
sym
);

970  !
	`°rcmp
(
°r1
, 
°r2
Ë? 
yes
 : 
no
;

971 
E_UNEQUAL
:

972 
	`sym_ˇlc_vÆue
(
e
->
À·
.
sym
);

973 
	`sym_ˇlc_vÆue
(
e
->
right
.
sym
);

974 
°r1
 = 
	`sym_gë_°rög_vÆue
(
e
->
À·
.
sym
);

975 
°r2
 = 
	`sym_gë_°rög_vÆue
(
e
->
right
.
sym
);

976  !
	`°rcmp
(
°r1
, 
°r2
Ë? 
no
 : 
yes
;

978 
	`¥ötf
("ex¥_ˇlc_vÆue: %d?\n", 
e
->
ty≥
);

979  
no
;

981 
	}
}

983 
	$ex¥_com∑ª_ty≥
(
ex¥_ty≥
 
t1
, ex¥_ty≥ 
t2
)

988 i‡(
t1
 =
t2
)

990 
t1
) {

991 
E_EQUAL
:

992 
E_UNEQUAL
:

993 i‡(
t2
 =
E_NOT
)

995 
E_NOT
:

996 i‡(
t2
 =
E_AND
)

998 
E_AND
:

999 i‡(
t2
 =
E_OR
)

1001 
E_OR
:

1002 i‡(
t2
 =
E_CHOICE
)

1004 
E_CHOICE
:

1005 i‡(
t2
 == 0)

1010 
	`¥ötf
("[%dgt%d?]", 
t1
, 
t2
);

1013 
	}
}

1015 
ex¥_¥öt
(
ex¥
 *
e
, (*
‚
)(*, c⁄° *), *
d©a
, 
¥evtokí
)

1017 i‡(!
e
) {

1018 
	`‚
(
d©a
, "y");

1022 i‡(
	`ex¥_com∑ª_ty≥
(
¥evtokí
, 
e
->
ty≥
) > 0)

1023 
	`‚
(
d©a
, "(");

1024 
e
->
ty≥
) {

1025 
E_SYMBOL
:

1026 i‡(
e
->
À·
.
sym
->
«me
)

1027 
	`‚
(
d©a
, 
e
->
À·
.
sym
->
«me
);

1029 
	`‚
(
d©a
, "<choice>");

1031 
E_NOT
:

1032 
	`‚
(
d©a
, "!");

1033 
	`ex¥_¥öt
(
e
->
À·
.
ex¥
, 
‚
, 
d©a
, 
E_NOT
);

1035 
E_EQUAL
:

1036 
	`‚
(
d©a
, 
e
->
À·
.
sym
->
«me
);

1037 
	`‚
(
d©a
, "=");

1038 
	`‚
(
d©a
, 
e
->
right
.
sym
->
«me
);

1040 
E_UNEQUAL
:

1041 
	`‚
(
d©a
, 
e
->
À·
.
sym
->
«me
);

1042 
	`‚
(
d©a
, "!=");

1043 
	`‚
(
d©a
, 
e
->
right
.
sym
->
«me
);

1045 
E_OR
:

1046 
	`ex¥_¥öt
(
e
->
À·
.
ex¥
, 
‚
, 
d©a
, 
E_OR
);

1047 
	`‚
(
d©a
, " || ");

1048 
	`ex¥_¥öt
(
e
->
right
.
ex¥
, 
‚
, 
d©a
, 
E_OR
);

1050 
E_AND
:

1051 
	`ex¥_¥öt
(
e
->
À·
.
ex¥
, 
‚
, 
d©a
, 
E_AND
);

1052 
	`‚
(
d©a
, " && ");

1053 
	`ex¥_¥öt
(
e
->
right
.
ex¥
, 
‚
, 
d©a
, 
E_AND
);

1055 
E_CHOICE
:

1056 
	`‚
(
d©a
, 
e
->
right
.
sym
->
«me
);

1057 i‡(
e
->
À·
.
ex¥
) {

1058 
	`‚
(
d©a
, " ^ ");

1059 
	`ex¥_¥öt
(
e
->
À·
.
ex¥
, 
‚
, 
d©a
, 
E_CHOICE
);

1062 
E_RANGE
:

1063 
	`‚
(
d©a
, "[");

1064 
	`‚
(
d©a
, 
e
->
À·
.
sym
->
«me
);

1065 
	`‚
(
d©a
, " ");

1066 
	`‚
(
d©a
, 
e
->
right
.
sym
->
«me
);

1067 
	`‚
(
d©a
, "]");

1071 
buf
[32];

1072 
	`•rötf
(
buf
, "<unknow¿ty≥ %d>", 
e
->
ty≥
);

1073 
	`‚
(
d©a
, 
buf
);

1077 i‡(
	`ex¥_com∑ª_ty≥
(
¥evtokí
, 
e
->
ty≥
) > 0)

1078 
	`‚
(
d©a
, ")");

1079 
	}
}

1081 
	$ex¥_¥öt_fûe_hñ≥r
(*
d©a
, c⁄° *
°r
)

1083 
	`fwrôe
(
°r
, 
	`°æí
(°r), 1, 
d©a
);

1084 
	}
}

1086 
	$ex¥_Âröt
(
ex¥
 *
e
, 
FILE
 *
out
)

1088 
	`ex¥_¥öt
(
e
, 
ex¥_¥öt_fûe_hñ≥r
, 
out
, 
E_NONE
);

1089 
	}
}

1091 
	$ex¥_¥öt_g°r_hñ≥r
(*
d©a
, c⁄° *
°r
)

1093 
	`°r_≠≥nd
((
g°r
*)
d©a
, 
°r
);

1094 
	}
}

1096 
	$ex¥_g°r_¥öt
(
ex¥
 *
e
, 
g°r
 *
gs
)

1098 
	`ex¥_¥öt
(
e
, 
ex¥_¥öt_g°r_hñ≥r
, 
gs
, 
E_NONE
);

1099 
	}
}

	@expr.h

6 #i‚de‡
EXPR_H


7 
	#EXPR_H


	)

9 #ifde‡
__˝lu•lus


13 
	~<°dio.h
>

14 #i‚de‡
__˝lu•lus


15 
	~<°dboﬁ.h
>

18 
	sfûe
 {

19 
fûe
 *
√xt
;

20 
fûe
 *
∑ª¡
;

21 *
«me
;

22 
löío
;

23 
Êags
;

26 
	#FILE_BUSY
 0x0001

	)

27 
	#FILE_SCANNED
 0x0002

	)

28 
	#FILE_PRINTED
 0x0004

	)

30 
	eåi°©e
 {

31 
no
, 
mod
, 
yes


32 } 
	tåi°©e
;

34 
	eex¥_ty≥
 {

35 
E_NONE
, 
E_OR
, 
E_AND
, 
E_NOT
, 
E_EQUAL
, 
E_UNEQUAL
, 
E_CHOICE
, 
E_SYMBOL
, 
E_RANGE


38 
	uex¥_d©a
 {

39 
ex¥
 *expr;

40 
symbﬁ
 *
sym
;

43 
	sex¥
 {

44 
ex¥_ty≥
 
ty≥
;

45 
ex¥_d©a
 
À·
, 
right
;

48 
	#E_OR
(
dï1
, 
dï2
Ë(((dï1)>(dï2))?(dï1):(dï2))

	)

49 
	#E_AND
(
dï1
, 
dï2
Ë(((dï1)<(dï2))?(dï1):(dï2))

	)

50 
	#E_NOT
(
dï
Ë(2-(dï))

	)

52 
	sex¥_vÆue
 {

53 
ex¥
 *expr;

54 
åi°©e
 
åi
;

57 
	ssymbﬁ_vÆue
 {

58 *
vÆ
;

59 
åi°©e
 
åi
;

62 
	esymbﬁ_ty≥
 {

63 
S_UNKNOWN
, 
S_BOOLEAN
, 
S_TRISTATE
, 
S_INT
, 
S_HEX
, 
S_STRING
, 
S_OTHER


66 
	ssymbﬁ
 {

67 
symbﬁ
 *
√xt
;

68 *
«me
;

69 *
hñp
;

70 
symbﬁ_ty≥
 
ty≥
;

71 
symbﬁ_vÆue
 
cuº
, 
u£r
;

72 
åi°©e
 
visibÀ
;

73 
Êags
;

74 
¥›îty
 *
¥›
;

75 
ex¥
 *
dï
, *
dï2
;

76 
ex¥_vÆue
 
ªv_dï
;

79 
	#f‹_Æl_symbﬁs
(
i
, 
sym
Ëò0; i < 257; i++Ësym = 
symbﬁ_hash
[i]; sym; sym = sym->
√xt
Ëi‡(sym->
ty≥
 !
S_OTHER
)

	)

81 
	#SYMBOL_YES
 0x0001

	)

82 
	#SYMBOL_MOD
 0x0002

	)

83 
	#SYMBOL_NO
 0x0004

	)

84 
	#SYMBOL_CONST
 0x0007

	)

85 
	#SYMBOL_CHECK
 0x0008

	)

86 
	#SYMBOL_CHOICE
 0x0010

	)

87 
	#SYMBOL_CHOICEVAL
 0x0020

	)

88 
	#SYMBOL_PRINTED
 0x0040

	)

89 
	#SYMBOL_VALID
 0x0080

	)

90 
	#SYMBOL_OPTIONAL
 0x0100

	)

91 
	#SYMBOL_WRITE
 0x0200

	)

92 
	#SYMBOL_CHANGED
 0x0400

	)

93 
	#SYMBOL_NEW
 0x0800

	)

94 
	#SYMBOL_AUTO
 0x1000

	)

95 
	#SYMBOL_CHECKED
 0x2000

	)

96 
	#SYMBOL_WARNED
 0x8000

	)

98 
	#SYMBOL_MAXLENGTH
 256

	)

99 
	#SYMBOL_HASHSIZE
 257

	)

100 
	#SYMBOL_HASHMASK
 0xff

	)

102 
	e¥›_ty≥
 {

103 
P_UNKNOWN
, 
P_PROMPT
, 
P_COMMENT
, 
P_MENU
, 
P_DEFAULT
, 
P_CHOICE
, 
P_SELECT
, 
P_RANGE


106 
	s¥›îty
 {

107 
¥›îty
 *
√xt
;

108 
symbﬁ
 *
sym
;

109 
¥›_ty≥
 
ty≥
;

110 c⁄° *
ãxt
;

111 
ex¥_vÆue
 
visibÀ
;

112 
ex¥
 *expr;

113 
míu
 *menu;

114 
fûe
 *file;

115 
löío
;

118 
	#f‹_Æl_¥›îtõs
(
sym
, 
°
, 
tok
) \

119 
°
 = 
sym
->
¥›
; st; sà°->
√xt
) \

120 i‡(
°
->
ty≥
 =(
tok
))

	)

121 
	#f‹_Æl_deÁu…s
(
sym
, 
°
Ë
	`f‹_Æl_¥›îtõs
(sym, st, 
P_DEFAULT
)

	)

122 
	#f‹_Æl_choi˚s
(
sym
, 
°
Ë
	`f‹_Æl_¥›îtõs
(sym, st, 
P_CHOICE
)

	)

123 
	#f‹_Æl_¥om±s
(
sym
, 
°
) \

124 
°
 = 
sym
->
¥›
; st; sà°->
√xt
) \

125 i‡(
°
->
ãxt
)

	)

127 
	smíu
 {

128 
míu
 *
√xt
;

129 
míu
 *
∑ª¡
;

130 
míu
 *
li°
;

131 
symbﬁ
 *
sym
;

132 
¥›îty
 *
¥om±
;

133 
ex¥
 *
dï
;

134 
Êags
;

136 
fûe
 *file;

137 
löío
;

138 *
d©a
;

141 
	#MENU_CHANGED
 0x0001

	)

142 
	#MENU_ROOT
 0x0002

	)

144 #i‚de‡
SWIG


146 
fûe
 *
fûe_li°
;

147 
fûe
 *
cuºít_fûe
;

148 
fûe
 *
lookup_fûe
(c⁄° *
«me
);

150 
symbﬁ
 
symbﬁ_yes
, 
symbﬁ_no
, 
symbﬁ_mod
;

151 
symbﬁ
 *
moduÀs_sym
;

152 
cdebug
;

153 
ex¥
 *
ex¥_Æloc_symbﬁ
(
symbﬁ
 *
sym
);

154 
ex¥
 *
ex¥_Æloc_⁄e
(
ex¥_ty≥
 
ty≥
, ex¥ *
˚
);

155 
ex¥
 *
ex¥_Æloc_two
(
ex¥_ty≥
 
ty≥
, ex¥ *
e1
, ex¥ *
e2
);

156 
ex¥
 *
ex¥_Æloc_comp
(
ex¥_ty≥
 
ty≥
, 
symbﬁ
 *
s1
, symbﬁ *
s2
);

157 
ex¥
 *
ex¥_Æloc_™d
(ex¥ *
e1
, ex¥ *
e2
);

158 
ex¥
 *
ex¥_Æloc_‹
(ex¥ *
e1
, ex¥ *
e2
);

159 
ex¥
 *
ex¥_c›y
(ex¥ *
‹g
);

160 
ex¥_‰ì
(
ex¥
 *
e
);

161 
ex¥_eq
(
ex¥
 *
e1
, ex¥ *
e2
);

162 
ex¥_ñimö©e_eq
(
ex¥
 **
ï1
, ex¥ **
ï2
);

163 
åi°©e
 
ex¥_ˇlc_vÆue
(
ex¥
 *
e
);

164 
ex¥
 *
ex¥_ñimö©e_yn
(ex¥ *
e
);

165 
ex¥
 *
ex¥_å™s_boﬁ
(ex¥ *
e
);

166 
ex¥
 *
ex¥_ñimö©e_dups
(ex¥ *
e
);

167 
ex¥
 *
ex¥_å™sf‹m
(ex¥ *
e
);

168 
ex¥_c⁄èös_symbﬁ
(
ex¥
 *
dï
, 
symbﬁ
 *
sym
);

169 
boﬁ
 
ex¥_dïíds_symbﬁ
(
ex¥
 *
dï
, 
symbﬁ
 *
sym
);

170 
ex¥
 *
ex¥_exåa˘_eq_™d
(ex¥ **
ï1
, ex¥ **
ï2
);

171 
ex¥
 *
ex¥_exåa˘_eq_‹
(ex¥ **
ï1
, ex¥ **
ï2
);

172 
ex¥_exåa˘_eq
(
ex¥_ty≥
 
ty≥
, 
ex¥
 **
ï
, ex¥ **
ï1
, ex¥ **
ï2
);

173 
ex¥
 *
ex¥_å™s_com∑ª
(ex¥ *
e
, 
ex¥_ty≥
 
ty≥
, 
symbﬁ
 *
sym
);

175 
ex¥_Âröt
(
ex¥
 *
e
, 
FILE
 *
out
);

176 
	gg°r
;

177 
ex¥_g°r_¥öt
(
ex¥
 *
e
, 
g°r
 *
gs
);

179 
ölöe
 
ex¥_is_yes
(
ex¥
 *
e
)

181  !
	ge
 || (e->
	gty≥
 =
E_SYMBOL
 && 
e
->
À·
.
sym
 =&
symbﬁ_yes
);

184 
ölöe
 
ex¥_is_no
(
ex¥
 *
e
)

186  
	ge
 && (e->
	gty≥
 =
E_SYMBOL
 && 
e
->
À·
.
sym
 =&
symbﬁ_no
);

190 #ifde‡
__˝lu•lus


	@gconf.c

9 #ifde‡
HAVE_CONFIG_H


10 
	~<c⁄fig.h
>

13 
	~"lkc.h
"

14 
	~"images.c
"

16 
	~<gœde/gœde.h
>

17 
	~<gtk/gtk.h
>

18 
	~<glib.h
>

19 
	~<gdk/gdkkeysyms.h
>

21 
	~<°dio.h
>

22 
	~<°rög.h
>

23 
	~<uni°d.h
>

24 
	~<time.h
>

25 
	~<°dlib.h
>

30 
	mSINGLE_VIEW
, 
	mSPLIT_VIEW
, 
	mFULL_VIEW


33 
göt
 
	gvõw_mode
 = 
FULL_VIEW
;

34 
gboﬁón
 
	gshow_«me
 = 
TRUE
;

35 
gboﬁón
 
	gshow_ønge
 = 
TRUE
;

36 
gboﬁón
 
	gshow_vÆue
 = 
TRUE
;

37 
gboﬁón
 
	gshow_Æl
 = 
FALSE
;

38 
gboﬁón
 
	gshow_debug
 = 
FALSE
;

39 
gboﬁón
 
	gªsizóbÀ
 = 
FALSE
;

41 
gboﬁón
 
	gc⁄fig_ch™ged
 = 
FALSE
;

43 
	gnohñp_ãxt
[] =

44 
N_
("Sorry,Ço helpávailable forÅhis option yet.\n");

46 
GtkWidgë
 *
	gmaö_wnd
 = 
NULL
;

47 
GtkWidgë
 *
	gåì1_w
 = 
NULL
;

48 
GtkWidgë
 *
	gåì2_w
 = 
NULL
;

49 
GtkWidgë
 *
	gãxt_w
 = 
NULL
;

50 
GtkWidgë
 *
	gh∑√d
 = 
NULL
;

51 
GtkWidgë
 *
	gv∑√d
 = 
NULL
;

52 
GtkWidgë
 *
	gback_bä
 = 
NULL
;

54 
GtkTextTag
 *
	gèg1
, *
	gèg2
;

55 
GdkCﬁ‹
 
	gcﬁ‹
;

57 
GtkTªeSt‹e
 *
	gåì1
, *
	gåì2
, *
	gåì
;

58 
GtkTªeModñ
 *
	gmodñ1
, *
	gmodñ2
;

59 
GtkTªeIãr
 *
	g∑ª¡s
[256];

60 
göt
 
	gödít
;

62 
míu
 *
	gcuºít
;

63 
míu
 *
	gbrow£d
;

66 
	mCOL_OPTION
, 
	mCOL_NAME
, 
	mCOL_NO
, 
	mCOL_MOD
, 
	mCOL_YES
, 
	mCOL_VALUE
,

67 
	mCOL_MENU
, 
	mCOL_COLOR
, 
	mCOL_EDIT
, 
	mCOL_PIXBUF
,

68 
	mCOL_PIXVIS
, 
	mCOL_BTNVIS
, 
	mCOL_BTNACT
, 
	mCOL_BTNINC
, 
	mCOL_BTNRAD
,

69 
	mCOL_NUMBER


72 
di•œy_li°
();

73 
di•œy_åì
(
míu
 *menu);

74 
di•œy_åì_∑π
();

75 
upd©e_åì
(
míu
 *
§c
, 
GtkTªeIãr
 * 
d°
);

76 
£t_node
(
GtkTªeIãr
 * 
node
, 
míu
 *míu, 
gch¨
 ** 
row
);

77 
gch¨
 **
fûl_row
(
míu
 *menu);

83 c⁄° *
	$dbg_¥öt_°y≥
(
vÆ
)

85 
buf
[256];

87 
	`bzîo
(
buf
, 256);

89 i‡(
vÆ
 =
S_UNKNOWN
)

90 
	`°r˝y
(
buf
, "unknown");

91 i‡(
vÆ
 =
S_BOOLEAN
)

92 
	`°r˝y
(
buf
, "boolean");

93 i‡(
vÆ
 =
S_TRISTATE
)

94 
	`°r˝y
(
buf
, "tristate");

95 i‡(
vÆ
 =
S_INT
)

96 
	`°r˝y
(
buf
, "int");

97 i‡(
vÆ
 =
S_HEX
)

98 
	`°r˝y
(
buf
, "hex");

99 i‡(
vÆ
 =
S_STRING
)

100 
	`°r˝y
(
buf
, "string");

101 i‡(
vÆ
 =
S_OTHER
)

102 
	`°r˝y
(
buf
, "other");

104 #ifde‡
DEBUG


105 
	`¥ötf
("%s", 
buf
);

108  
buf
;

109 
	}
}

111 c⁄° *
	$dbg_¥öt_Êags
(
vÆ
)

113 
buf
[256];

115 
	`bzîo
(
buf
, 256);

117 i‡(
vÆ
 & 
SYMBOL_YES
)

118 
	`°rˇt
(
buf
, "yes/");

119 i‡(
vÆ
 & 
SYMBOL_MOD
)

120 
	`°rˇt
(
buf
, "mod/");

121 i‡(
vÆ
 & 
SYMBOL_NO
)

122 
	`°rˇt
(
buf
, "no/");

123 i‡(
vÆ
 & 
SYMBOL_CONST
)

124 
	`°rˇt
(
buf
, "const/");

125 i‡(
vÆ
 & 
SYMBOL_CHECK
)

126 
	`°rˇt
(
buf
, "check/");

127 i‡(
vÆ
 & 
SYMBOL_CHOICE
)

128 
	`°rˇt
(
buf
, "choice/");

129 i‡(
vÆ
 & 
SYMBOL_CHOICEVAL
)

130 
	`°rˇt
(
buf
, "choiceval/");

131 i‡(
vÆ
 & 
SYMBOL_PRINTED
)

132 
	`°rˇt
(
buf
, "printed/");

133 i‡(
vÆ
 & 
SYMBOL_VALID
)

134 
	`°rˇt
(
buf
, "valid/");

135 i‡(
vÆ
 & 
SYMBOL_OPTIONAL
)

136 
	`°rˇt
(
buf
, "optional/");

137 i‡(
vÆ
 & 
SYMBOL_WRITE
)

138 
	`°rˇt
(
buf
, "write/");

139 i‡(
vÆ
 & 
SYMBOL_CHANGED
)

140 
	`°rˇt
(
buf
, "changed/");

141 i‡(
vÆ
 & 
SYMBOL_NEW
)

142 
	`°rˇt
(
buf
, "new/");

143 i‡(
vÆ
 & 
SYMBOL_AUTO
)

144 
	`°rˇt
(
buf
, "auto/");

146 
buf
[
	`°æí
(buf) - 1] = '\0';

147 #ifde‡
DEBUG


148 
	`¥ötf
("%s", 
buf
);

151  
buf
;

152 
	}
}

154 c⁄° *
	$dbg_¥öt_±y≥
(
vÆ
)

156 
buf
[256];

158 
	`bzîo
(
buf
, 256);

160 i‡(
vÆ
 =
P_UNKNOWN
)

161 
	`°r˝y
(
buf
, "unknown");

162 i‡(
vÆ
 =
P_PROMPT
)

163 
	`°r˝y
(
buf
, "prompt");

164 i‡(
vÆ
 =
P_COMMENT
)

165 
	`°r˝y
(
buf
, "comment");

166 i‡(
vÆ
 =
P_MENU
)

167 
	`°r˝y
(
buf
, "menu");

168 i‡(
vÆ
 =
P_DEFAULT
)

169 
	`°r˝y
(
buf
, "default");

170 i‡(
vÆ
 =
P_CHOICE
)

171 
	`°r˝y
(
buf
, "choice");

173 #ifde‡
DEBUG


174 
	`¥ötf
("%s", 
buf
);

177  
buf
;

178 
	}
}

181 
	$ª∂a˚_buâ⁄_ic⁄
(
GœdeXML
 * 
xml
, 
GdkDøwabÀ
 * 
wödow
,

182 
GtkStyÀ
 * 
°yÀ
, 
gch¨
 * 
bä_«me
, gch¨ ** 
xpm
)

184 
GdkPixm≠
 *
pixm≠
;

185 
GdkBôm≠
 *
mask
;

186 
GtkToﬁBuâ⁄
 *
buâ⁄
;

187 
GtkWidgë
 *
image
;

189 
pixm≠
 = 
	`gdk_pixm≠_¸óã_‰om_xpm_d
(
wödow
, &
mask
,

190 &
°yÀ
->
bg
[
GTK_STATE_NORMAL
],

191 
xpm
);

193 
buâ⁄
 = 
	`GTK_TOOL_BUTTON
(
	`gœde_xml_gë_widgë
(
xml
, 
bä_«me
));

194 
image
 = 
	`gtk_image_√w_‰om_pixm≠
(
pixm≠
, 
mask
);

195 
	`gtk_widgë_show
(
image
);

196 
	`gtk_toﬁ_buâ⁄_£t_ic⁄_widgë
(
buâ⁄
, 
image
);

197 
	}
}

200 
	$öô_maö_wödow
(c⁄° 
gch¨
 * 
gœde_fûe
)

202 
GœdeXML
 *
xml
;

203 
GtkWidgë
 *
widgë
;

204 
GtkTextBuf„r
 *
txtbuf
;

205 
tôÀ
[256];

206 
GtkStyÀ
 *
°yÀ
;

208 
xml
 = 
	`gœde_xml_√w
(
gœde_fûe
, "wödow1", 
NULL
);

209 i‡(!
xml
)

210 
	`g_îr‹
(
	`_
("GUIÜoading failed !\n"));

211 
	`gœde_xml_sig«l_autoc⁄√˘
(
xml
);

213 
maö_wnd
 = 
	`gœde_xml_gë_widgë
(
xml
, "window1");

214 
h∑√d
 = 
	`gœde_xml_gë_widgë
(
xml
, "hpaned1");

215 
v∑√d
 = 
	`gœde_xml_gë_widgë
(
xml
, "vpaned1");

216 
åì1_w
 = 
	`gœde_xml_gë_widgë
(
xml
, "treeview1");

217 
åì2_w
 = 
	`gœde_xml_gë_widgë
(
xml
, "treeview2");

218 
ãxt_w
 = 
	`gœde_xml_gë_widgë
(
xml
, "textview3");

220 
back_bä
 = 
	`gœde_xml_gë_widgë
(
xml
, "button1");

221 
	`gtk_widgë_£t_£nsôive
(
back_bä
, 
FALSE
);

223 
widgë
 = 
	`gœde_xml_gë_widgë
(
xml
, "show_name1");

224 
	`gtk_check_míu_ôem_£t_a˘ive
((
GtkCheckMíuIãm
 *Ë
widgë
,

225 
show_«me
);

227 
widgë
 = 
	`gœde_xml_gë_widgë
(
xml
, "show_range1");

228 
	`gtk_check_míu_ôem_£t_a˘ive
((
GtkCheckMíuIãm
 *Ë
widgë
,

229 
show_ønge
);

231 
widgë
 = 
	`gœde_xml_gë_widgë
(
xml
, "show_data1");

232 
	`gtk_check_míu_ôem_£t_a˘ive
((
GtkCheckMíuIãm
 *Ë
widgë
,

233 
show_vÆue
);

235 
°yÀ
 = 
	`gtk_widgë_gë_°yÀ
(
maö_wnd
);

236 
widgë
 = 
	`gœde_xml_gë_widgë
(
xml
, "toolbar1");

239 
	`ª∂a˚_buâ⁄_ic⁄
(
xml
, 
maö_wnd
->
wödow
, 
°yÀ
,

240 "buâ⁄1", (
gch¨
 **Ë
xpm_back
);

241 
	`ª∂a˚_buâ⁄_ic⁄
(
xml
, 
maö_wnd
->
wödow
, 
°yÀ
,

242 "buâ⁄2", (
gch¨
 **Ë
xpm_lﬂd
);

243 
	`ª∂a˚_buâ⁄_ic⁄
(
xml
, 
maö_wnd
->
wödow
, 
°yÀ
,

244 "buâ⁄3", (
gch¨
 **Ë
xpm_ßve
);

246 
	`ª∂a˚_buâ⁄_ic⁄
(
xml
, 
maö_wnd
->
wödow
, 
°yÀ
,

247 "buâ⁄4", (
gch¨
 **Ë
xpm_sögÀ_võw
);

248 
	`ª∂a˚_buâ⁄_ic⁄
(
xml
, 
maö_wnd
->
wödow
, 
°yÀ
,

249 "buâ⁄5", (
gch¨
 **Ë
xpm_•lô_võw
);

250 
	`ª∂a˚_buâ⁄_ic⁄
(
xml
, 
maö_wnd
->
wödow
, 
°yÀ
,

251 "buâ⁄6", (
gch¨
 **Ë
xpm_åì_võw
);

254 
võw_mode
) {

255 
SINGLE_VIEW
:

256 
widgë
 = 
	`gœde_xml_gë_widgë
(
xml
, "button4");

257 
	`g_sig«l_emô_by_«me
(
widgë
, "clicked");

259 
SPLIT_VIEW
:

260 
widgë
 = 
	`gœde_xml_gë_widgë
(
xml
, "button5");

261 
	`g_sig«l_emô_by_«me
(
widgë
, "clicked");

263 
FULL_VIEW
:

264 
widgë
 = 
	`gœde_xml_gë_widgë
(
xml
, "button6");

265 
	`g_sig«l_emô_by_«me
(
widgë
, "clicked");

269 
txtbuf
 = 
	`gtk_ãxt_võw_gë_buf„r
(
	`GTK_TEXT_VIEW
(
ãxt_w
));

270 
èg1
 = 
	`gtk_ãxt_buf„r_¸óã_èg
(
txtbuf
, "mytag1",

272 "weight", 
PANGO_WEIGHT_BOLD
,

273 
NULL
);

274 
èg2
 = 
	`gtk_ãxt_buf„r_¸óã_èg
(
txtbuf
, "mytag2",

276 
NULL
);

278 
	`•rötf
(
tôÀ
, 
	`_
("Linux Kernel v%s Configuration"),

279 
	`gëív
("KERNELVERSION"));

280 
	`gtk_wödow_£t_tôÀ
(
	`GTK_WINDOW
(
maö_wnd
), 
tôÀ
);

282 
	`gtk_widgë_show
(
maö_wnd
);

283 
	}
}

285 
	$öô_åì_modñ
()

287 
göt
 
i
;

289 
åì
 = 
åì2
 = 
	`gtk_åì_°‹e_√w
(
COL_NUMBER
,

290 
G_TYPE_STRING
, G_TYPE_STRING,

291 
G_TYPE_STRING
, G_TYPE_STRING,

292 
G_TYPE_STRING
, G_TYPE_STRING,

293 
G_TYPE_POINTER
, 
GDK_TYPE_COLOR
,

294 
G_TYPE_BOOLEAN
, 
GDK_TYPE_PIXBUF
,

295 
G_TYPE_BOOLEAN
, G_TYPE_BOOLEAN,

296 
G_TYPE_BOOLEAN
, G_TYPE_BOOLEAN,

297 
G_TYPE_BOOLEAN
);

298 
modñ2
 = 
	`GTK_TREE_MODEL
(
åì2
);

300 
∑ª¡s
[0] = 
NULL
, 
i
 = 1; i < 256; i++)

301 
∑ª¡s
[
i
] = (
GtkTªeIãr
 *Ë
	`g_mÆloc
((GtkTreeIter));

303 
åì1
 = 
	`gtk_åì_°‹e_√w
(
COL_NUMBER
,

304 
G_TYPE_STRING
, G_TYPE_STRING,

305 
G_TYPE_STRING
, G_TYPE_STRING,

306 
G_TYPE_STRING
, G_TYPE_STRING,

307 
G_TYPE_POINTER
, 
GDK_TYPE_COLOR
,

308 
G_TYPE_BOOLEAN
, 
GDK_TYPE_PIXBUF
,

309 
G_TYPE_BOOLEAN
, G_TYPE_BOOLEAN,

310 
G_TYPE_BOOLEAN
, G_TYPE_BOOLEAN,

311 
G_TYPE_BOOLEAN
);

312 
modñ1
 = 
	`GTK_TREE_MODEL
(
åì1
);

313 
	}
}

315 
	$öô_À·_åì
()

317 
GtkTªeVõw
 *
võw
 = 
	`GTK_TREE_VIEW
(
åì1_w
);

318 
GtkCñlRídîî
 *
ªndîî
;

319 
GtkTªeSñe˘i⁄
 *
£l
;

320 
GtkTªeVõwCﬁumn
 *
cﬁumn
;

322 
	`gtk_åì_võw_£t_modñ
(
võw
, 
modñ1
);

323 
	`gtk_åì_võw_£t_hódîs_visibÀ
(
võw
, 
TRUE
);

324 
	`gtk_åì_võw_£t_ruÀs_höt
(
võw
, 
FALSE
);

326 
cﬁumn
 = 
	`gtk_åì_võw_cﬁumn_√w
();

327 
	`gtk_åì_võw_≠≥nd_cﬁumn
(
võw
, 
cﬁumn
);

328 
	`gtk_åì_võw_cﬁumn_£t_tôÀ
(
cﬁumn
, 
	`_
("Options"));

330 
ªndîî
 = 
	`gtk_˚Œ_ªndîî_toggÀ_√w
();

331 
	`gtk_åì_võw_cﬁumn_∑ck_°¨t
(
	`GTK_TREE_VIEW_COLUMN
(
cﬁumn
),

332 
ªndîî
, 
FALSE
);

333 
	`gtk_åì_võw_cﬁumn_£t_©åibuãs
(
	`GTK_TREE_VIEW_COLUMN
(
cﬁumn
),

334 
ªndîî
,

335 "a˘ive", 
COL_BTNACT
,

336 "öc⁄si°ít", 
COL_BTNINC
,

337 "visibÀ", 
COL_BTNVIS
,

338 "ødio", 
COL_BTNRAD
, 
NULL
);

339 
ªndîî
 = 
	`gtk_˚Œ_ªndîî_ãxt_√w
();

340 
	`gtk_åì_võw_cﬁumn_∑ck_°¨t
(
	`GTK_TREE_VIEW_COLUMN
(
cﬁumn
),

341 
ªndîî
, 
FALSE
);

342 
	`gtk_åì_võw_cﬁumn_£t_©åibuãs
(
	`GTK_TREE_VIEW_COLUMN
(
cﬁumn
),

343 
ªndîî
,

344 "ãxt", 
COL_OPTION
,

346 
COL_COLOR
, 
NULL
);

348 
£l
 = 
	`gtk_åì_võw_gë_£À˘i⁄
(
võw
);

349 
	`gtk_åì_£À˘i⁄_£t_mode
(
£l
, 
GTK_SELECTION_SINGLE
);

350 
	`gtk_widgë_ªÆize
(
åì1_w
);

351 
	}
}

353 
ªndîî_edôed
(
GtkCñlRídîîText
 * 
˚Œ
,

354 c⁄° 
gch¨
 * 
∑th_°rög
,

355 c⁄° 
gch¨
 * 
√w_ãxt
, 
gpoöãr
 
u£r_d©a
);

356 
ªndîî_toggÀd
(
GtkCñlRídîîToggÀ
 * 
˚ŒªndîîtoggÀ
,

357 
gch¨
 * 
¨g1
, 
gpoöãr
 
u£r_d©a
);

359 
	$öô_right_åì
()

361 
GtkTªeVõw
 *
võw
 = 
	`GTK_TREE_VIEW
(
åì2_w
);

362 
GtkCñlRídîî
 *
ªndîî
;

363 
GtkTªeSñe˘i⁄
 *
£l
;

364 
GtkTªeVõwCﬁumn
 *
cﬁumn
;

365 
göt
 
i
;

367 
	`gtk_åì_võw_£t_modñ
(
võw
, 
modñ2
);

368 
	`gtk_åì_võw_£t_hódîs_visibÀ
(
võw
, 
TRUE
);

369 
	`gtk_åì_võw_£t_ruÀs_höt
(
võw
, 
FALSE
);

371 
cﬁumn
 = 
	`gtk_åì_võw_cﬁumn_√w
();

372 
	`gtk_åì_võw_≠≥nd_cﬁumn
(
võw
, 
cﬁumn
);

373 
	`gtk_åì_võw_cﬁumn_£t_tôÀ
(
cﬁumn
, 
	`_
("Options"));

375 
ªndîî
 = 
	`gtk_˚Œ_ªndîî_pixbuf_√w
();

376 
	`gtk_åì_võw_cﬁumn_∑ck_°¨t
(
	`GTK_TREE_VIEW_COLUMN
(
cﬁumn
),

377 
ªndîî
, 
FALSE
);

378 
	`gtk_åì_võw_cﬁumn_£t_©åibuãs
(
	`GTK_TREE_VIEW_COLUMN
(
cﬁumn
),

379 
ªndîî
,

380 "pixbuf", 
COL_PIXBUF
,

381 "visibÀ", 
COL_PIXVIS
, 
NULL
);

382 
ªndîî
 = 
	`gtk_˚Œ_ªndîî_toggÀ_√w
();

383 
	`gtk_åì_võw_cﬁumn_∑ck_°¨t
(
	`GTK_TREE_VIEW_COLUMN
(
cﬁumn
),

384 
ªndîî
, 
FALSE
);

385 
	`gtk_åì_võw_cﬁumn_£t_©åibuãs
(
	`GTK_TREE_VIEW_COLUMN
(
cﬁumn
),

386 
ªndîî
,

387 "a˘ive", 
COL_BTNACT
,

388 "öc⁄si°ít", 
COL_BTNINC
,

389 "visibÀ", 
COL_BTNVIS
,

390 "ødio", 
COL_BTNRAD
, 
NULL
);

393 
ªndîî
 = 
	`gtk_˚Œ_ªndîî_ãxt_√w
();

394 
	`gtk_åì_võw_cﬁumn_∑ck_°¨t
(
	`GTK_TREE_VIEW_COLUMN
(
cﬁumn
),

395 
ªndîî
, 
FALSE
);

396 
	`gtk_åì_võw_cﬁumn_£t_©åibuãs
(
	`GTK_TREE_VIEW_COLUMN
(
cﬁumn
),

397 
ªndîî
,

398 "ãxt", 
COL_OPTION
,

400 
COL_COLOR
, 
NULL
);

402 
ªndîî
 = 
	`gtk_˚Œ_ªndîî_ãxt_√w
();

403 
	`gtk_åì_võw_ö£π_cﬁumn_wôh_©åibuãs
(
võw
, -1,

404 
	`_
("Name"), 
ªndîî
,

405 "ãxt", 
COL_NAME
,

407 
COL_COLOR
, 
NULL
);

408 
ªndîî
 = 
	`gtk_˚Œ_ªndîî_ãxt_√w
();

409 
	`gtk_åì_võw_ö£π_cﬁumn_wôh_©åibuãs
(
võw
, -1,

410 "N", 
ªndîî
,

411 "ãxt", 
COL_NO
,

413 
COL_COLOR
, 
NULL
);

414 
ªndîî
 = 
	`gtk_˚Œ_ªndîî_ãxt_√w
();

415 
	`gtk_åì_võw_ö£π_cﬁumn_wôh_©åibuãs
(
võw
, -1,

416 "M", 
ªndîî
,

417 "ãxt", 
COL_MOD
,

419 
COL_COLOR
, 
NULL
);

420 
ªndîî
 = 
	`gtk_˚Œ_ªndîî_ãxt_√w
();

421 
	`gtk_åì_võw_ö£π_cﬁumn_wôh_©åibuãs
(
võw
, -1,

422 "Y", 
ªndîî
,

423 "ãxt", 
COL_YES
,

425 
COL_COLOR
, 
NULL
);

426 
ªndîî
 = 
	`gtk_˚Œ_ªndîî_ãxt_√w
();

427 
	`gtk_åì_võw_ö£π_cﬁumn_wôh_©åibuãs
(
võw
, -1,

428 
	`_
("VÆue"), 
ªndîî
,

429 "ãxt", 
COL_VALUE
,

431 
COL_EDIT
,

433 
COL_COLOR
, 
NULL
);

434 
	`g_sig«l_c⁄√˘
(
	`G_OBJECT
(
ªndîî
), "edited",

435 
	`G_CALLBACK
(
ªndîî_edôed
), 
NULL
);

437 
cﬁumn
 = 
	`gtk_åì_võw_gë_cﬁumn
(
võw
, 
COL_NAME
);

438 
	`gtk_åì_võw_cﬁumn_£t_visibÀ
(
cﬁumn
, 
show_«me
);

439 
cﬁumn
 = 
	`gtk_åì_võw_gë_cﬁumn
(
võw
, 
COL_NO
);

440 
	`gtk_åì_võw_cﬁumn_£t_visibÀ
(
cﬁumn
, 
show_ønge
);

441 
cﬁumn
 = 
	`gtk_åì_võw_gë_cﬁumn
(
võw
, 
COL_MOD
);

442 
	`gtk_åì_võw_cﬁumn_£t_visibÀ
(
cﬁumn
, 
show_ønge
);

443 
cﬁumn
 = 
	`gtk_åì_võw_gë_cﬁumn
(
võw
, 
COL_YES
);

444 
	`gtk_åì_võw_cﬁumn_£t_visibÀ
(
cﬁumn
, 
show_ønge
);

445 
cﬁumn
 = 
	`gtk_åì_võw_gë_cﬁumn
(
võw
, 
COL_VALUE
);

446 
	`gtk_åì_võw_cﬁumn_£t_visibÀ
(
cﬁumn
, 
show_vÆue
);

448 i‡(
ªsizóbÀ
) {

449 
i
 = 0; i < 
COL_VALUE
; i++) {

450 
cﬁumn
 = 
	`gtk_åì_võw_gë_cﬁumn
(
võw
, 
i
);

451 
	`gtk_åì_võw_cﬁumn_£t_ªsizabÀ
(
cﬁumn
, 
TRUE
);

455 
£l
 = 
	`gtk_åì_võw_gë_£À˘i⁄
(
võw
);

456 
	`gtk_åì_£À˘i⁄_£t_mode
(
£l
, 
GTK_SELECTION_SINGLE
);

457 
	}
}

463 
	$ãxt_ö£π_hñp
(
míu
 *menu)

465 
GtkTextBuf„r
 *
buf„r
;

466 
GtkTextIãr
 
°¨t
, 
íd
;

467 c⁄° *
¥om±
 = 
	`míu_gë_¥om±
(
míu
);

468 
gch¨
 *
«me
;

469 c⁄° *
hñp
 = 
	`_
(
nohñp_ãxt
);

471 i‡(!
míu
->
sym
)

472 
hñp
 = "";

473 i‡(
míu
->
sym
->
hñp
)

474 
hñp
 = 
	`_
(
míu
->
sym
->help);

476 i‡(
míu
->
sym
 && míu->sym->
«me
)

477 
«me
 = 
	`g_°rdup_¥ötf
(
	`_
(
míu
->
sym
->name));

479 
«me
 = 
	`g_°rdup
("");

481 
buf„r
 = 
	`gtk_ãxt_võw_gë_buf„r
(
	`GTK_TEXT_VIEW
(
ãxt_w
));

482 
	`gtk_ãxt_buf„r_gë_bounds
(
buf„r
, &
°¨t
, &
íd
);

483 
	`gtk_ãxt_buf„r_dñëe
(
buf„r
, &
°¨t
, &
íd
);

484 
	`gtk_ãxt_võw_£t_À·_m¨gö
(
	`GTK_TEXT_VIEW
(
ãxt_w
), 15);

486 
	`gtk_ãxt_buf„r_gë_íd_ôî
(
buf„r
, &
íd
);

487 
	`gtk_ãxt_buf„r_ö£π_wôh_ègs
(
buf„r
, &
íd
, 
¥om±
, -1, 
èg1
,

488 
NULL
);

489 
	`gtk_ãxt_buf„r_ö£π_©_curs‹
(
buf„r
, " ", 1);

490 
	`gtk_ãxt_buf„r_gë_íd_ôî
(
buf„r
, &
íd
);

491 
	`gtk_ãxt_buf„r_ö£π_wôh_ègs
(
buf„r
, &
íd
, 
«me
, -1, 
èg1
,

492 
NULL
);

493 
	`gtk_ãxt_buf„r_ö£π_©_curs‹
(
buf„r
, "\n\n", 2);

494 
	`gtk_ãxt_buf„r_gë_íd_ôî
(
buf„r
, &
íd
);

495 
	`gtk_ãxt_buf„r_ö£π_wôh_ègs
(
buf„r
, &
íd
, 
hñp
, -1, 
èg2
,

496 
NULL
);

497 
	}
}

500 
	$ãxt_ö£π_msg
(c⁄° *
tôÀ
, c⁄° *
mesßge
)

502 
GtkTextBuf„r
 *
buf„r
;

503 
GtkTextIãr
 
°¨t
, 
íd
;

504 c⁄° *
msg
 = 
mesßge
;

506 
buf„r
 = 
	`gtk_ãxt_võw_gë_buf„r
(
	`GTK_TEXT_VIEW
(
ãxt_w
));

507 
	`gtk_ãxt_buf„r_gë_bounds
(
buf„r
, &
°¨t
, &
íd
);

508 
	`gtk_ãxt_buf„r_dñëe
(
buf„r
, &
°¨t
, &
íd
);

509 
	`gtk_ãxt_võw_£t_À·_m¨gö
(
	`GTK_TEXT_VIEW
(
ãxt_w
), 15);

511 
	`gtk_ãxt_buf„r_gë_íd_ôî
(
buf„r
, &
íd
);

512 
	`gtk_ãxt_buf„r_ö£π_wôh_ègs
(
buf„r
, &
íd
, 
tôÀ
, -1, 
èg1
,

513 
NULL
);

514 
	`gtk_ãxt_buf„r_ö£π_©_curs‹
(
buf„r
, "\n\n", 2);

515 
	`gtk_ãxt_buf„r_gë_íd_ôî
(
buf„r
, &
íd
);

516 
	`gtk_ãxt_buf„r_ö£π_wôh_ègs
(
buf„r
, &
íd
, 
msg
, -1, 
èg2
,

517 
NULL
);

518 
	}
}

523 
⁄_ßve1_a˘iv©e
(
GtkMíuIãm
 * 
míuôem
, 
gpoöãr
 
u£r_d©a
);

524 
gboﬁón
 
	$⁄_wödow1_dñëe_evít
(
GtkWidgë
 * 
widgë
, 
GdkEvít
 * 
evít
,

525 
gpoöãr
 
u£r_d©a
)

527 
GtkWidgë
 *
dülog
, *
œbñ
;

528 
göt
 
ªsu…
;

530 i‡(
c⁄fig_ch™ged
 =
FALSE
)

531  
FALSE
;

533 
dülog
 = 
	`gtk_dülog_√w_wôh_buâ⁄s
(
	`_
("Warning !"),

534 
	`GTK_WINDOW
(
maö_wnd
),

535 (
GtkDülogFœgs
)

536 (
GTK_DIALOG_MODAL
 |

537 
GTK_DIALOG_DESTROY_WITH_PARENT
),

538 
GTK_STOCK_OK
,

539 
GTK_RESPONSE_YES
,

540 
GTK_STOCK_NO
,

541 
GTK_RESPONSE_NO
,

542 
GTK_STOCK_CANCEL
,

543 
GTK_RESPONSE_CANCEL
, 
NULL
);

544 
	`gtk_dülog_£t_deÁu…_ª•⁄£
(
	`GTK_DIALOG
(
dülog
),

545 
GTK_RESPONSE_CANCEL
);

547 
œbñ
 = 
	`gtk_œbñ_√w
(
	`_
("\nSave configuration ?\n"));

548 
	`gtk_c⁄èöî_add
(
	`GTK_CONTAINER
(
	`GTK_DIALOG
(
dülog
)->
vbox
), 
œbñ
);

549 
	`gtk_widgë_show
(
œbñ
);

551 
ªsu…
 = 
	`gtk_dülog_run
(
	`GTK_DIALOG
(
dülog
));

552 
ªsu…
) {

553 
GTK_RESPONSE_YES
:

554 
	`⁄_ßve1_a˘iv©e
(
NULL
, NULL);

555  
FALSE
;

556 
GTK_RESPONSE_NO
:

557  
FALSE
;

558 
GTK_RESPONSE_CANCEL
:

559 
GTK_RESPONSE_DELETE_EVENT
:

561 
	`gtk_widgë_de°roy
(
dülog
);

562  
TRUE
;

565  
FALSE
;

566 
	}
}

569 
	$⁄_wödow1_de°roy
(
GtkObje˘
 * 
obje˘
, 
gpoöãr
 
u£r_d©a
)

571 
	`gtk_maö_quô
();

572 
	}
}

576 
	$⁄_wödow1_size_ªque°
(
GtkWidgë
 * 
widgë
,

577 
GtkRequisôi⁄
 * 
ªquisôi⁄
, 
gpoöãr
 
u£r_d©a
)

579 
göt
 
ﬁd_h
;

580 
göt
 
w
, 
h
;

582 i‡(
widgë
->
wödow
 =
NULL
)

583 
	`gtk_wödow_gë_deÁu…_size
(
	`GTK_WINDOW
(
maö_wnd
), &
w
, &
h
);

585 
	`gdk_wödow_gë_size
(
widgë
->
wödow
, &
w
, &
h
);

587 i‡(
h
 =
ﬁd_h
)

589 
ﬁd_h
 = 
h
;

591 
	`gtk_∑√d_£t_posôi⁄
(
	`GTK_PANED
(
v∑√d
), 2 * 
h
 / 3);

592 
	}
}

599 
	$lﬂd_fûíame
(
GtkFûeSñe˘i⁄
 * 
fûe_£À˘‹
, 
gpoöãr
 
u£r_d©a
)

601 c⁄° 
gch¨
 *
‚
;

603 
‚
 = 
	`gtk_fûe_£À˘i⁄_gë_fûíame
(
GTK_FILE_SELECTION


604 (
u£r_d©a
));

606 i‡(
	`c⁄f_ªad
(
‚
))

607 
	`ãxt_ö£π_msg
(
	`_
("Error"), _("UnableÅoÜoad configuration !"));

609 
	`di•œy_åì
(&
roŸmíu
);

610 
	}
}

612 
	$⁄_lﬂd1_a˘iv©e
(
GtkMíuIãm
 * 
míuôem
, 
gpoöãr
 
u£r_d©a
)

614 
GtkWidgë
 *
fs
;

616 
fs
 = 
	`gtk_fûe_£À˘i⁄_√w
(
	`_
("Load file..."));

617 
	`g_sig«l_c⁄√˘
(
	`GTK_OBJECT
(
	`GTK_FILE_SELECTION
(
fs
)->
ok_buâ⁄
),

619 
	`G_CALLBACK
(
lﬂd_fûíame
), (
gpoöãr
Ë
fs
);

620 
	`g_sig«l_c⁄√˘_sw≠≥d
(
GTK_OBJECT


621 (
	`GTK_FILE_SELECTION
(
fs
)->
ok_buâ⁄
),

622 "˛icked", 
	`G_CALLBACK
(
gtk_widgë_de°roy
),

623 (
gpoöãr
Ë
fs
);

624 
	`g_sig«l_c⁄√˘_sw≠≥d
(
GTK_OBJECT


625 (
	`GTK_FILE_SELECTION
(
fs
)->
ˇn˚l_buâ⁄
),

626 "˛icked", 
	`G_CALLBACK
(
gtk_widgë_de°roy
),

627 (
gpoöãr
Ë
fs
);

628 
	`gtk_widgë_show
(
fs
);

629 
	}
}

632 
	$⁄_ßve1_a˘iv©e
(
GtkMíuIãm
 * 
míuôem
, 
gpoöãr
 
u£r_d©a
)

634 i‡(
	`c⁄f_wrôe
(
NULL
))

635 
	`ãxt_ö£π_msg
(
	`_
("Error"), _("UnableÅo save configuration !"));

637 
c⁄fig_ch™ged
 = 
FALSE
;

638 
	}
}

642 
	$°‹e_fûíame
(
GtkFûeSñe˘i⁄
 * 
fûe_£À˘‹
, 
gpoöãr
 
u£r_d©a
)

644 c⁄° 
gch¨
 *
‚
;

646 
‚
 = 
	`gtk_fûe_£À˘i⁄_gë_fûíame
(
GTK_FILE_SELECTION


647 (
u£r_d©a
));

649 i‡(
	`c⁄f_wrôe
(
‚
))

650 
	`ãxt_ö£π_msg
(
	`_
("Error"), _("UnableÅo save configuration !"));

652 
	`gtk_widgë_de°roy
(
	`GTK_WIDGET
(
u£r_d©a
));

653 
	}
}

655 
	$⁄_ßve_as1_a˘iv©e
(
GtkMíuIãm
 * 
míuôem
, 
gpoöãr
 
u£r_d©a
)

657 
GtkWidgë
 *
fs
;

659 
fs
 = 
	`gtk_fûe_£À˘i⁄_√w
(
	`_
("Save fileás..."));

660 
	`g_sig«l_c⁄√˘
(
	`GTK_OBJECT
(
	`GTK_FILE_SELECTION
(
fs
)->
ok_buâ⁄
),

662 
	`G_CALLBACK
(
°‹e_fûíame
), (
gpoöãr
Ë
fs
);

663 
	`g_sig«l_c⁄√˘_sw≠≥d
(
GTK_OBJECT


664 (
	`GTK_FILE_SELECTION
(
fs
)->
ok_buâ⁄
),

665 "˛icked", 
	`G_CALLBACK
(
gtk_widgë_de°roy
),

666 (
gpoöãr
Ë
fs
);

667 
	`g_sig«l_c⁄√˘_sw≠≥d
(
GTK_OBJECT


668 (
	`GTK_FILE_SELECTION
(
fs
)->
ˇn˚l_buâ⁄
),

669 "˛icked", 
	`G_CALLBACK
(
gtk_widgë_de°roy
),

670 (
gpoöãr
Ë
fs
);

671 
	`gtk_widgë_show
(
fs
);

672 
	}
}

675 
	$⁄_quô1_a˘iv©e
(
GtkMíuIãm
 * 
míuôem
, 
gpoöãr
 
u£r_d©a
)

677 i‡(!
	`⁄_wödow1_dñëe_evít
(
NULL
, NULL, NULL))

678 
	`gtk_widgë_de°roy
(
	`GTK_WIDGET
(
maö_wnd
));

679 
	}
}

682 
	$⁄_show_«me1_a˘iv©e
(
GtkMíuIãm
 * 
míuôem
, 
gpoöãr
 
u£r_d©a
)

684 
GtkTªeVõwCﬁumn
 *
cﬁ
;

686 
show_«me
 = 
	`GTK_CHECK_MENU_ITEM
(
míuôem
)->
a˘ive
;

687 
cﬁ
 = 
	`gtk_åì_võw_gë_cﬁumn
(
	`GTK_TREE_VIEW
(
åì2_w
), 
COL_NAME
);

688 i‡(
cﬁ
)

689 
	`gtk_åì_võw_cﬁumn_£t_visibÀ
(
cﬁ
, 
show_«me
);

690 
	}
}

693 
	$⁄_show_ønge1_a˘iv©e
(
GtkMíuIãm
 * 
míuôem
, 
gpoöãr
 
u£r_d©a
)

695 
GtkTªeVõwCﬁumn
 *
cﬁ
;

697 
show_ønge
 = 
	`GTK_CHECK_MENU_ITEM
(
míuôem
)->
a˘ive
;

698 
cﬁ
 = 
	`gtk_åì_võw_gë_cﬁumn
(
	`GTK_TREE_VIEW
(
åì2_w
), 
COL_NO
);

699 i‡(
cﬁ
)

700 
	`gtk_åì_võw_cﬁumn_£t_visibÀ
(
cﬁ
, 
show_ønge
);

701 
cﬁ
 = 
	`gtk_åì_võw_gë_cﬁumn
(
	`GTK_TREE_VIEW
(
åì2_w
), 
COL_MOD
);

702 i‡(
cﬁ
)

703 
	`gtk_åì_võw_cﬁumn_£t_visibÀ
(
cﬁ
, 
show_ønge
);

704 
cﬁ
 = 
	`gtk_åì_võw_gë_cﬁumn
(
	`GTK_TREE_VIEW
(
åì2_w
), 
COL_YES
);

705 i‡(
cﬁ
)

706 
	`gtk_åì_võw_cﬁumn_£t_visibÀ
(
cﬁ
, 
show_ønge
);

708 
	}
}

711 
	$⁄_show_d©a1_a˘iv©e
(
GtkMíuIãm
 * 
míuôem
, 
gpoöãr
 
u£r_d©a
)

713 
GtkTªeVõwCﬁumn
 *
cﬁ
;

715 
show_vÆue
 = 
	`GTK_CHECK_MENU_ITEM
(
míuôem
)->
a˘ive
;

716 
cﬁ
 = 
	`gtk_åì_võw_gë_cﬁumn
(
	`GTK_TREE_VIEW
(
åì2_w
), 
COL_VALUE
);

717 i‡(
cﬁ
)

718 
	`gtk_åì_võw_cﬁumn_£t_visibÀ
(
cﬁ
, 
show_vÆue
);

719 
	}
}

723 
	$⁄_show_Æl_›ti⁄s1_a˘iv©e
(
GtkMíuIãm
 * 
míuôem
, 
gpoöãr
 
u£r_d©a
)

725 
show_Æl
 = 
	`GTK_CHECK_MENU_ITEM
(
míuôem
)->
a˘ive
;

727 
	`gtk_åì_°‹e_˛ór
(
åì2
);

728 
	`di•œy_åì
(&
roŸmíu
);

729 
	}
}

733 
	$⁄_show_debug_öfo1_a˘iv©e
(
GtkMíuIãm
 * 
míuôem
, 
gpoöãr
 
u£r_d©a
)

735 
show_debug
 = 
	`GTK_CHECK_MENU_ITEM
(
míuôem
)->
a˘ive
;

736 
	`upd©e_åì
(&
roŸmíu
, 
NULL
);

737 
	}
}

740 
	$⁄_öåodu˘i⁄1_a˘iv©e
(
GtkMíuIãm
 * 
míuôem
, 
gpoöãr
 
u£r_d©a
)

742 
GtkWidgë
 *
dülog
;

743 c⁄° 
gch¨
 *
öåo_ãxt
 = 
	`_
(

761 
dülog
 = 
	`gtk_mesßge_dülog_√w
(
	`GTK_WINDOW
(
maö_wnd
),

762 
GTK_DIALOG_DESTROY_WITH_PARENT
,

763 
GTK_MESSAGE_INFO
,

764 
GTK_BUTTONS_CLOSE
, 
öåo_ãxt
);

765 
	`g_sig«l_c⁄√˘_sw≠≥d
(
	`GTK_OBJECT
(
dülog
), "response",

766 
	`G_CALLBACK
(
gtk_widgë_de°roy
),

767 
	`GTK_OBJECT
(
dülog
));

768 
	`gtk_widgë_show_Æl
(
dülog
);

769 
	}
}

772 
	$⁄_about1_a˘iv©e
(
GtkMíuIãm
 * 
míuôem
, 
gpoöãr
 
u£r_d©a
)

774 
GtkWidgë
 *
dülog
;

775 c⁄° 
gch¨
 *
about_ãxt
 =

776 
	`_
("gkc is copyright (c) 2002 Romain Lievin <roms@lpg.ticalc.org>.\n"

779 
dülog
 = 
	`gtk_mesßge_dülog_√w
(
	`GTK_WINDOW
(
maö_wnd
),

780 
GTK_DIALOG_DESTROY_WITH_PARENT
,

781 
GTK_MESSAGE_INFO
,

782 
GTK_BUTTONS_CLOSE
, 
about_ãxt
);

783 
	`g_sig«l_c⁄√˘_sw≠≥d
(
	`GTK_OBJECT
(
dülog
), "response",

784 
	`G_CALLBACK
(
gtk_widgë_de°roy
),

785 
	`GTK_OBJECT
(
dülog
));

786 
	`gtk_widgë_show_Æl
(
dülog
);

787 
	}
}

790 
	$⁄_li˚n£1_a˘iv©e
(
GtkMíuIãm
 * 
míuôem
, 
gpoöãr
 
u£r_d©a
)

792 
GtkWidgë
 *
dülog
;

793 c⁄° 
gch¨
 *
li˚n£_ãxt
 =

794 
	`_
("gkc isÑeleased underÅheÅerms ofÅhe GNU GPL v2.\n"

798 
dülog
 = 
	`gtk_mesßge_dülog_√w
(
	`GTK_WINDOW
(
maö_wnd
),

799 
GTK_DIALOG_DESTROY_WITH_PARENT
,

800 
GTK_MESSAGE_INFO
,

801 
GTK_BUTTONS_CLOSE
, 
li˚n£_ãxt
);

802 
	`g_sig«l_c⁄√˘_sw≠≥d
(
	`GTK_OBJECT
(
dülog
), "response",

803 
	`G_CALLBACK
(
gtk_widgë_de°roy
),

804 
	`GTK_OBJECT
(
dülog
));

805 
	`gtk_widgë_show_Æl
(
dülog
);

806 
	}
}

809 
	$⁄_back_˛icked
(
GtkBuâ⁄
 * 
buâ⁄
, 
gpoöãr
 
u£r_d©a
)

811 
¥›_ty≥
 
±y≥
;

813 
cuºít
 = cuºít->
∑ª¡
;

814 
±y≥
 = 
cuºít
->
¥om±
 ? cuºít->¥om±->
ty≥
 : 
P_UNKNOWN
;

815 i‡(
±y≥
 !
P_MENU
)

816 
cuºít
 = cuºít->
∑ª¡
;

817 
	`di•œy_åì_∑π
();

819 i‡(
cuºít
 =&
roŸmíu
)

820 
	`gtk_widgë_£t_£nsôive
(
back_bä
, 
FALSE
);

821 
	}
}

824 
	$⁄_lﬂd_˛icked
(
GtkBuâ⁄
 * 
buâ⁄
, 
gpoöãr
 
u£r_d©a
)

826 
	`⁄_lﬂd1_a˘iv©e
(
NULL
, 
u£r_d©a
);

827 
	}
}

830 
	$⁄_ßve_˛icked
(
GtkBuâ⁄
 * 
buâ⁄
, 
gpoöãr
 
u£r_d©a
)

832 
	`⁄_ßve1_a˘iv©e
(
NULL
, 
u£r_d©a
);

833 
	}
}

836 
	$⁄_sögÀ_˛icked
(
GtkBuâ⁄
 * 
buâ⁄
, 
gpoöãr
 
u£r_d©a
)

838 
võw_mode
 = 
SINGLE_VIEW
;

839 
	`gtk_∑√d_£t_posôi⁄
(
	`GTK_PANED
(
h∑√d
), 0);

840 
	`gtk_widgë_hide
(
åì1_w
);

841 
cuºít
 = &
roŸmíu
;

842 
	`di•œy_åì_∑π
();

843 
	}
}

846 
	$⁄_•lô_˛icked
(
GtkBuâ⁄
 * 
buâ⁄
, 
gpoöãr
 
u£r_d©a
)

848 
göt
 
w
, 
h
;

849 
võw_mode
 = 
SPLIT_VIEW
;

850 
	`gtk_widgë_show
(
åì1_w
);

851 
	`gtk_wödow_gë_deÁu…_size
(
	`GTK_WINDOW
(
maö_wnd
), &
w
, &
h
);

852 
	`gtk_∑√d_£t_posôi⁄
(
	`GTK_PANED
(
h∑√d
), 
w
 / 2);

853 i‡(
åì2
)

854 
	`gtk_åì_°‹e_˛ór
(
åì2
);

855 
	`di•œy_li°
();

858 
	`gtk_widgë_£t_£nsôive
(
back_bä
, 
FALSE
);

859 
	}
}

862 
	$⁄_fuŒ_˛icked
(
GtkBuâ⁄
 * 
buâ⁄
, 
gpoöãr
 
u£r_d©a
)

864 
võw_mode
 = 
FULL_VIEW
;

865 
	`gtk_∑√d_£t_posôi⁄
(
	`GTK_PANED
(
h∑√d
), 0);

866 
	`gtk_widgë_hide
(
åì1_w
);

867 i‡(
åì2
)

868 
	`gtk_åì_°‹e_˛ór
(
åì2
);

869 
	`di•œy_åì
(&
roŸmíu
);

870 
	`gtk_widgë_£t_£nsôive
(
back_bä
, 
FALSE
);

871 
	}
}

874 
	$⁄_cﬁœp£_˛icked
(
GtkBuâ⁄
 * 
buâ⁄
, 
gpoöãr
 
u£r_d©a
)

876 
	`gtk_åì_võw_cﬁœp£_Æl
(
	`GTK_TREE_VIEW
(
åì2_w
));

877 
	}
}

880 
	$⁄_ex∑nd_˛icked
(
GtkBuâ⁄
 * 
buâ⁄
, 
gpoöãr
 
u£r_d©a
)

882 
	`gtk_åì_võw_ex∑nd_Æl
(
	`GTK_TREE_VIEW
(
åì2_w
));

883 
	}
}

889 
	$ªndîî_edôed
(
GtkCñlRídîîText
 * 
˚Œ
,

890 c⁄° 
gch¨
 * 
∑th_°rög
,

891 c⁄° 
gch¨
 * 
√w_ãxt
, 
gpoöãr
 
u£r_d©a
)

893 
GtkTªeP©h
 *
∑th
 = 
	`gtk_åì_∑th_√w_‰om_°rög
(
∑th_°rög
);

894 
GtkTªeIãr
 
ôî
;

895 c⁄° *
ﬁd_def
, *
√w_def
;

896 
míu
 *menu;

897 
symbﬁ
 *
sym
;

899 i‡(!
	`gtk_åì_modñ_gë_ôî
(
modñ2
, &
ôî
, 
∑th
))

902 
	`gtk_åì_modñ_gë
(
modñ2
, &
ôî
, 
COL_MENU
, &
míu
, -1);

903 
sym
 = 
míu
->sym;

905 
	`gtk_åì_modñ_gë
(
modñ2
, &
ôî
, 
COL_VALUE
, &
ﬁd_def
, -1);

906 
√w_def
 = 
√w_ãxt
;

908 
	`sym_£t_°rög_vÆue
(
sym
, 
√w_def
);

910 
c⁄fig_ch™ged
 = 
TRUE
;

911 
	`upd©e_åì
(&
roŸmíu
, 
NULL
);

913 
	`gtk_åì_∑th_‰ì
(
∑th
);

914 
	}
}

917 
	$ch™ge_sym_vÆue
(
míu
 *míu, 
göt
 
cﬁ
)

919 
symbﬁ
 *
sym
 = 
míu
->sym;

920 
åi°©e
 
ﬁdvÆ
, 
√wvÆ
;

922 i‡(!
sym
)

925 i‡(
cﬁ
 =
COL_NO
)

926 
√wvÆ
 = 
no
;

927 i‡(
cﬁ
 =
COL_MOD
)

928 
√wvÆ
 = 
mod
;

929 i‡(
cﬁ
 =
COL_YES
)

930 
√wvÆ
 = 
yes
;

934 
	`sym_gë_ty≥
(
sym
)) {

935 
S_BOOLEAN
:

936 
S_TRISTATE
:

937 
ﬁdvÆ
 = 
	`sym_gë_åi°©e_vÆue
(
sym
);

938 i‡(!
	`sym_åi°©e_wôhö_ønge
(
sym
, 
√wvÆ
))

939 
√wvÆ
 = 
yes
;

940 
	`sym_£t_åi°©e_vÆue
(
sym
, 
√wvÆ
);

941 
c⁄fig_ch™ged
 = 
TRUE
;

942 i‡(
võw_mode
 =
FULL_VIEW
)

943 
	`upd©e_åì
(&
roŸmíu
, 
NULL
);

944 i‡(
võw_mode
 =
SPLIT_VIEW
) {

945 
	`upd©e_åì
(
brow£d
, 
NULL
);

946 
	`di•œy_li°
();

948 i‡(
võw_mode
 =
SINGLE_VIEW
)

949 
	`di•œy_åì_∑π
();

951 
S_INT
:

952 
S_HEX
:

953 
S_STRING
:

957 
	}
}

959 
	$toggÀ_sym_vÆue
(
míu
 *menu)

961 i‡(!
míu
->
sym
)

964 
	`sym_toggÀ_åi°©e_vÆue
(
míu
->
sym
);

965 i‡(
võw_mode
 =
FULL_VIEW
)

966 
	`upd©e_åì
(&
roŸmíu
, 
NULL
);

967 i‡(
võw_mode
 =
SPLIT_VIEW
) {

968 
	`upd©e_åì
(
brow£d
, 
NULL
);

969 
	`di•œy_li°
();

971 i‡(
võw_mode
 =
SINGLE_VIEW
)

972 
	`di•œy_åì_∑π
();

973 
	}
}

975 
	$ªndîî_toggÀd
(
GtkCñlRídîîToggÀ
 * 
˚Œ
,

976 
gch¨
 * 
∑th_°rög
, 
gpoöãr
 
u£r_d©a
)

978 
GtkTªeP©h
 *
∑th
, *
£l_∑th
 = 
NULL
;

979 
GtkTªeIãr
 
ôî
, 
£l_ôî
;

980 
GtkTªeSñe˘i⁄
 *
£l
;

981 
míu
 *menu;

983 
∑th
 = 
	`gtk_åì_∑th_√w_‰om_°rög
(
∑th_°rög
);

984 i‡(!
	`gtk_åì_modñ_gë_ôî
(
modñ2
, &
ôî
, 
∑th
))

987 
£l
 = 
	`gtk_åì_võw_gë_£À˘i⁄
(
	`GTK_TREE_VIEW
(
åì2_w
));

988 i‡(
	`gtk_åì_£À˘i⁄_gë_£À˘ed
(
£l
, 
NULL
, &
£l_ôî
))

989 
£l_∑th
 = 
	`gtk_åì_modñ_gë_∑th
(
modñ2
, &
£l_ôî
);

990 i‡(!
£l_∑th
)

991 
out1
;

992 i‡(
	`gtk_åì_∑th_com∑ª
(
∑th
, 
£l_∑th
))

993 
out2
;

995 
	`gtk_åì_modñ_gë
(
modñ2
, &
ôî
, 
COL_MENU
, &
míu
, -1);

996 
	`toggÀ_sym_vÆue
(
míu
);

998 
out2
:

999 
	`gtk_åì_∑th_‰ì
(
£l_∑th
);

1000 
out1
:

1001 
	`gtk_åì_∑th_‰ì
(
∑th
);

1002 
	}
}

1004 
göt
 
	$cﬁumn2ödex
(
GtkTªeVõwCﬁumn
 * 
cﬁumn
)

1006 
göt
 
i
;

1008 
i
 = 0; i < 
COL_NUMBER
; i++) {

1009 
GtkTªeVõwCﬁumn
 *
cﬁ
;

1011 
cﬁ
 = 
	`gtk_åì_võw_gë_cﬁumn
(
	`GTK_TREE_VIEW
(
åì2_w
), 
i
);

1012 i‡(
cﬁ
 =
cﬁumn
)

1013  
i
;

1017 
	}
}

1021 
gboﬁón


1022 
	$⁄_åìvõw2_buâ⁄_¥ess_evít
(
GtkWidgë
 * 
widgë
,

1023 
GdkEvítBuâ⁄
 * 
evít
, 
gpoöãr
 
u£r_d©a
)

1025 
GtkTªeVõw
 *
võw
 = 
	`GTK_TREE_VIEW
(
widgë
);

1026 
GtkTªeP©h
 *
∑th
;

1027 
GtkTªeVõwCﬁumn
 *
cﬁumn
;

1028 
GtkTªeIãr
 
ôî
;

1029 
míu
 *menu;

1030 
göt
 
cﬁ
;

1032 #i‡
	`GTK_CHECK_VERSION
(2,1,4)

1033 
göt
 
tx
 = (götË
evít
->
x
;

1034 
göt
 
ty
 = (götË
evít
->
y
;

1035 
göt
 
cx
, 
cy
;

1037 
	`gtk_åì_võw_gë_∑th_©_pos
(
võw
, 
tx
, 
ty
, &
∑th
, &
cﬁumn
, &
cx
,

1038 &
cy
);

1040 
	`gtk_åì_võw_gë_curs‹
(
võw
, &
∑th
, &
cﬁumn
);

1042 i‡(
∑th
 =
NULL
)

1043  
FALSE
;

1045 i‡(!
	`gtk_åì_modñ_gë_ôî
(
modñ2
, &
ôî
, 
∑th
))

1046  
FALSE
;

1047 
	`gtk_åì_modñ_gë
(
modñ2
, &
ôî
, 
COL_MENU
, &
míu
, -1);

1049 
cﬁ
 = 
	`cﬁumn2ödex
(
cﬁumn
);

1050 i‡(
evít
->
ty≥
 =
GDK_2BUTTON_PRESS
) {

1051 
¥›_ty≥
 
±y≥
;

1052 
±y≥
 = 
míu
->
¥om±
 ? míu->¥om±->
ty≥
 : 
P_UNKNOWN
;

1054 i‡(
±y≥
 =
P_MENU
 && 
võw_mode
 !
FULL_VIEW
 && 
cﬁ
 =
COL_OPTION
) {

1056 
cuºít
 = 
míu
;

1057 
	`di•œy_åì_∑π
();

1058 
	`gtk_widgë_£t_£nsôive
(
back_bä
, 
TRUE
);

1059 } i‡((
cﬁ
 =
COL_OPTION
)) {

1060 
	`toggÀ_sym_vÆue
(
míu
);

1061 
	`gtk_åì_võw_ex∑nd_row
(
võw
, 
∑th
, 
TRUE
);

1064 i‡(
cﬁ
 =
COL_VALUE
) {

1065 
	`toggÀ_sym_vÆue
(
míu
);

1066 
	`gtk_åì_võw_ex∑nd_row
(
võw
, 
∑th
, 
TRUE
);

1067 } i‡(
cﬁ
 =
COL_NO
 || cﬁ =
COL_MOD


1068 || 
cﬁ
 =
COL_YES
) {

1069 
	`ch™ge_sym_vÆue
(
míu
, 
cﬁ
);

1070 
	`gtk_åì_võw_ex∑nd_row
(
võw
, 
∑th
, 
TRUE
);

1074  
FALSE
;

1075 
	}
}

1078 
gboﬁón


1079 
	$⁄_åìvõw2_key_¥ess_evít
(
GtkWidgë
 * 
widgë
,

1080 
GdkEvítKey
 * 
evít
, 
gpoöãr
 
u£r_d©a
)

1082 
GtkTªeVõw
 *
võw
 = 
	`GTK_TREE_VIEW
(
widgë
);

1083 
GtkTªeP©h
 *
∑th
;

1084 
GtkTªeVõwCﬁumn
 *
cﬁumn
;

1085 
GtkTªeIãr
 
ôî
;

1086 
míu
 *menu;

1087 
göt
 
cﬁ
;

1089 
	`gtk_åì_võw_gë_curs‹
(
võw
, &
∑th
, &
cﬁumn
);

1090 i‡(
∑th
 =
NULL
)

1091  
FALSE
;

1093 i‡(
evít
->
keyvÆ
 =
GDK_•a˚
) {

1094 i‡(
	`gtk_åì_võw_row_ex∑nded
(
võw
, 
∑th
))

1095 
	`gtk_åì_võw_cﬁœp£_row
(
võw
, 
∑th
);

1097 
	`gtk_åì_võw_ex∑nd_row
(
võw
, 
∑th
, 
FALSE
);

1098  
TRUE
;

1100 i‡(
evít
->
keyvÆ
 =
GDK_KP_E¡î
) {

1102 i‡(
widgë
 =
åì1_w
)

1103  
FALSE
;

1105 
	`gtk_åì_modñ_gë_ôî
(
modñ2
, &
ôî
, 
∑th
);

1106 
	`gtk_åì_modñ_gë
(
modñ2
, &
ôî
, 
COL_MENU
, &
míu
, -1);

1108 i‡(!
	`°rˇ£cmp
(
evít
->
°rög
, "n"))

1109 
cﬁ
 = 
COL_NO
;

1110 i‡(!
	`°rˇ£cmp
(
evít
->
°rög
, "m"))

1111 
cﬁ
 = 
COL_MOD
;

1112 i‡(!
	`°rˇ£cmp
(
evít
->
°rög
, "y"))

1113 
cﬁ
 = 
COL_YES
;

1115 
cﬁ
 = -1;

1116 
	`ch™ge_sym_vÆue
(
míu
, 
cﬁ
);

1118  
FALSE
;

1119 
	}
}

1124 
	$⁄_åìvõw2_curs‹_ch™ged
(
GtkTªeVõw
 * 
åìvõw
, 
gpoöãr
 
u£r_d©a
)

1126 
GtkTªeSñe˘i⁄
 *
£À˘i⁄
;

1127 
GtkTªeIãr
 
ôî
;

1128 
míu
 *menu;

1130 
£À˘i⁄
 = 
	`gtk_åì_võw_gë_£À˘i⁄
(
åìvõw
);

1131 i‡(
	`gtk_åì_£À˘i⁄_gë_£À˘ed
(
£À˘i⁄
, &
modñ2
, &
ôî
)) {

1132 
	`gtk_åì_modñ_gë
(
modñ2
, &
ôî
, 
COL_MENU
, &
míu
, -1);

1133 
	`ãxt_ö£π_hñp
(
míu
);

1135 
	}
}

1139 
gboﬁón


1140 
	$⁄_åìvõw1_buâ⁄_¥ess_evít
(
GtkWidgë
 * 
widgë
,

1141 
GdkEvítBuâ⁄
 * 
evít
, 
gpoöãr
 
u£r_d©a
)

1143 
GtkTªeVõw
 *
võw
 = 
	`GTK_TREE_VIEW
(
widgë
);

1144 
GtkTªeP©h
 *
∑th
;

1145 
GtkTªeVõwCﬁumn
 *
cﬁumn
;

1146 
GtkTªeIãr
 
ôî
;

1147 
míu
 *menu;

1149 
göt
 
tx
 = (götË
evít
->
x
;

1150 
göt
 
ty
 = (götË
evít
->
y
;

1151 
göt
 
cx
, 
cy
;

1153 
	`gtk_åì_võw_gë_∑th_©_pos
(
võw
, 
tx
, 
ty
, &
∑th
, &
cﬁumn
, &
cx
,

1154 &
cy
);

1155 i‡(
∑th
 =
NULL
)

1156  
FALSE
;

1158 
	`gtk_åì_modñ_gë_ôî
(
modñ1
, &
ôî
, 
∑th
);

1159 
	`gtk_åì_modñ_gë
(
modñ1
, &
ôî
, 
COL_MENU
, &
míu
, -1);

1161 i‡(
evít
->
ty≥
 =
GDK_2BUTTON_PRESS
) {

1162 
	`toggÀ_sym_vÆue
(
míu
);

1163 
cuºít
 = 
míu
;

1164 
	`di•œy_åì_∑π
();

1166 
brow£d
 = 
míu
;

1167 
	`di•œy_åì_∑π
();

1170 
	`gtk_widgë_ªÆize
(
åì2_w
);

1171 
	`gtk_åì_võw_£t_curs‹
(
võw
, 
∑th
, 
NULL
, 
FALSE
);

1172 
	`gtk_widgë_gøb_focus
(
åì2_w
);

1174  
FALSE
;

1175 
	}
}

1179 
gch¨
 **
	$fûl_row
(
míu
 *menu)

1181 
gch¨
 *
row
[
COL_NUMBER
];

1182 
symbﬁ
 *
sym
 = 
míu
->sym;

1183 c⁄° *
def
;

1184 
°y≥
;

1185 
åi°©e
 
vÆ
;

1186 
¥›_ty≥
 
±y≥
;

1187 
i
;

1189 
i
 = 
COL_OPTION
; i <
COL_COLOR
; i++)

1190 
	`g_‰ì
(
row
[
i
]);

1191 
	`bzîo
(
row
, (row));

1193 
row
[
COL_OPTION
] =

1194 
	`g_°rdup_¥ötf
("%†%s", 
	`míu_gë_¥om±
(
míu
),

1195 
sym
 ? (sym->

1196 
Êags
 & 
SYMBOL_NEW
 ? "(NEW)" : "") :

1199 i‡(
show_Æl
 && !
	`míu_is_visibÀ
(
míu
))

1200 
row
[
COL_COLOR
] = 
	`g_°rdup
("DarkGray");

1202 
row
[
COL_COLOR
] = 
	`g_°rdup
("Black");

1204 
±y≥
 = 
míu
->
¥om±
 ? míu->¥om±->
ty≥
 : 
P_UNKNOWN
;

1205 
±y≥
) {

1206 
P_MENU
:

1207 
row
[
COL_PIXBUF
] = (
gch¨
 *Ë
xpm_míu
;

1208 i‡(
võw_mode
 =
SINGLE_VIEW
)

1209 
row
[
COL_PIXVIS
] = 
	`GINT_TO_POINTER
(
TRUE
);

1210 
row
[
COL_BTNVIS
] = 
	`GINT_TO_POINTER
(
FALSE
);

1212 
P_COMMENT
:

1213 
row
[
COL_PIXBUF
] = (
gch¨
 *Ë
xpm_void
;

1214 
row
[
COL_PIXVIS
] = 
	`GINT_TO_POINTER
(
FALSE
);

1215 
row
[
COL_BTNVIS
] = 
	`GINT_TO_POINTER
(
FALSE
);

1218 
row
[
COL_PIXBUF
] = (
gch¨
 *Ë
xpm_void
;

1219 
row
[
COL_PIXVIS
] = 
	`GINT_TO_POINTER
(
FALSE
);

1220 
row
[
COL_BTNVIS
] = 
	`GINT_TO_POINTER
(
TRUE
);

1224 i‡(!
sym
)

1225  
row
;

1226 
row
[
COL_NAME
] = 
	`g_°rdup
(
sym
->
«me
);

1228 
	`sym_ˇlc_vÆue
(
sym
);

1229 
sym
->
Êags
 &~
SYMBOL_CHANGED
;

1231 i‡(
	`sym_is_choi˚
(
sym
)) {

1232 
míu
 *
chûd
;

1233 
symbﬁ
 *
def_sym
 = 
	`sym_gë_choi˚_vÆue
(
sym
);

1234 
míu
 *
def_míu
 = 
NULL
;

1236 
row
[
COL_BTNVIS
] = 
	`GINT_TO_POINTER
(
FALSE
);

1238 
chûd
 = 
míu
->
li°
; chûd; chûd = chûd->
√xt
) {

1239 i‡(
	`míu_is_visibÀ
(
chûd
)

1240 && 
chûd
->
sym
 =
def_sym
)

1241 
def_míu
 = 
chûd
;

1244 i‡(
def_míu
)

1245 
row
[
COL_VALUE
] =

1246 
	`g_°rdup
(
	`míu_gë_¥om±
(
def_míu
));

1248 i‡(
sym
->
Êags
 & 
SYMBOL_CHOICEVAL
)

1249 
row
[
COL_BTNRAD
] = 
	`GINT_TO_POINTER
(
TRUE
);

1251 
°y≥
 = 
	`sym_gë_ty≥
(
sym
);

1252 
°y≥
) {

1253 
S_BOOLEAN
:

1254 i‡(
	`GPOINTER_TO_INT
(
row
[
COL_PIXVIS
]Ë=
FALSE
)

1255 
row
[
COL_BTNVIS
] = 
	`GINT_TO_POINTER
(
TRUE
);

1256 i‡(
	`sym_is_choi˚
(
sym
))

1258 
S_TRISTATE
:

1259 
vÆ
 = 
	`sym_gë_åi°©e_vÆue
(
sym
);

1260 
vÆ
) {

1261 
no
:

1262 
row
[
COL_NO
] = 
	`g_°rdup
("N");

1263 
row
[
COL_VALUE
] = 
	`g_°rdup
("N");

1264 
row
[
COL_BTNACT
] = 
	`GINT_TO_POINTER
(
FALSE
);

1265 
row
[
COL_BTNINC
] = 
	`GINT_TO_POINTER
(
FALSE
);

1267 
mod
:

1268 
row
[
COL_MOD
] = 
	`g_°rdup
("M");

1269 
row
[
COL_VALUE
] = 
	`g_°rdup
("M");

1270 
row
[
COL_BTNINC
] = 
	`GINT_TO_POINTER
(
TRUE
);

1272 
yes
:

1273 
row
[
COL_YES
] = 
	`g_°rdup
("Y");

1274 
row
[
COL_VALUE
] = 
	`g_°rdup
("Y");

1275 
row
[
COL_BTNACT
] = 
	`GINT_TO_POINTER
(
TRUE
);

1276 
row
[
COL_BTNINC
] = 
	`GINT_TO_POINTER
(
FALSE
);

1280 i‡(
vÆ
 !
no
 && 
	`sym_åi°©e_wôhö_ønge
(
sym
,Ço))

1281 
row
[
COL_NO
] = 
	`g_°rdup
("_");

1282 i‡(
vÆ
 !
mod
 && 
	`sym_åi°©e_wôhö_ønge
(
sym
, mod))

1283 
row
[
COL_MOD
] = 
	`g_°rdup
("_");

1284 i‡(
vÆ
 !
yes
 && 
	`sym_åi°©e_wôhö_ønge
(
sym
, yes))

1285 
row
[
COL_YES
] = 
	`g_°rdup
("_");

1287 
S_INT
:

1288 
S_HEX
:

1289 
S_STRING
:

1290 
def
 = 
	`sym_gë_°rög_vÆue
(
sym
);

1291 
row
[
COL_VALUE
] = 
	`g_°rdup
(
def
);

1292 
row
[
COL_EDIT
] = 
	`GINT_TO_POINTER
(
TRUE
);

1293 
row
[
COL_BTNVIS
] = 
	`GINT_TO_POINTER
(
FALSE
);

1297  
row
;

1298 
	}
}

1302 
	$£t_node
(
GtkTªeIãr
 * 
node
, 
míu
 *míu, 
gch¨
 ** 
row
)

1304 
GdkCﬁ‹
 
cﬁ‹
;

1305 
gboﬁón
 
suc˚ss
;

1306 
GdkPixbuf
 *
pix
;

1308 
pix
 = 
	`gdk_pixbuf_√w_‰om_xpm_d©a
((const **)

1309 
row
[
COL_PIXBUF
]);

1311 
	`gdk_cﬁ‹_∑r£
(
row
[
COL_COLOR
], &
cﬁ‹
);

1312 
	`gdk_cﬁ‹m≠_Æloc_cﬁ‹s
(
	`gdk_cﬁ‹m≠_gë_sy°em
(), &
cﬁ‹
, 1,

1313 
FALSE
, FALSE, &
suc˚ss
);

1315 
	`gtk_åì_°‹e_£t
(
åì
, 
node
,

1316 
COL_OPTION
, 
row
[COL_OPTION],

1317 
COL_NAME
, 
row
[COL_NAME],

1318 
COL_NO
, 
row
[COL_NO],

1319 
COL_MOD
, 
row
[COL_MOD],

1320 
COL_YES
, 
row
[COL_YES],

1321 
COL_VALUE
, 
row
[COL_VALUE],

1322 
COL_MENU
, (
gpoöãr
Ë
míu
,

1323 
COL_COLOR
, &
cﬁ‹
,

1324 
COL_EDIT
, 
	`GPOINTER_TO_INT
(
row
[COL_EDIT]),

1325 
COL_PIXBUF
, 
pix
,

1326 
COL_PIXVIS
, 
	`GPOINTER_TO_INT
(
row
[COL_PIXVIS]),

1327 
COL_BTNVIS
, 
	`GPOINTER_TO_INT
(
row
[COL_BTNVIS]),

1328 
COL_BTNACT
, 
	`GPOINTER_TO_INT
(
row
[COL_BTNACT]),

1329 
COL_BTNINC
, 
	`GPOINTER_TO_INT
(
row
[COL_BTNINC]),

1330 
COL_BTNRAD
, 
	`GPOINTER_TO_INT
(
row
[COL_BTNRAD]),

1333 
	`g_obje˘_uƒef
(
pix
);

1334 
	}
}

1338 
	$∂a˚_node
(
míu
 *míu, **
row
)

1340 
GtkTªeIãr
 *
∑ª¡
 = 
∑ª¡s
[
ödít
 - 1];

1341 
GtkTªeIãr
 *
node
 = 
∑ª¡s
[
ödít
];

1343 
	`gtk_åì_°‹e_≠≥nd
(
åì
, 
node
, 
∑ª¡
);

1344 
	`£t_node
(
node
, 
míu
, 
row
);

1345 
	}
}

1349 
GtkTªeIãr
 
	gfound
;

1354 
GtkTªeIãr
 *
	$gtkåì_ôî_föd_node
(
GtkTªeIãr
 * 
∑ª¡
,

1355 
míu
 *
toföd
)

1357 
GtkTªeIãr
 
ôî
;

1358 
GtkTªeIãr
 *
chûd
 = &
ôî
;

1359 
gboﬁón
 
vÆid
;

1360 
GtkTªeIãr
 *
ªt
;

1362 
vÆid
 = 
	`gtk_åì_modñ_ôî_chûdªn
(
modñ2
, 
chûd
, 
∑ª¡
);

1363 
vÆid
) {

1364 
míu
 *menu;

1366 
	`gtk_åì_modñ_gë
(
modñ2
, 
chûd
, 6, &
míu
, -1);

1368 i‡(
míu
 =
toföd
) {

1369 
	`mem˝y
(&
found
, 
chûd
, (
GtkTªeIãr
));

1370  &
found
;

1373 
ªt
 = 
	`gtkåì_ôî_föd_node
(
chûd
, 
toföd
);

1374 i‡(
ªt
)

1375  
ªt
;

1377 
vÆid
 = 
	`gtk_åì_modñ_ôî_√xt
(
modñ2
, 
chûd
);

1380  
NULL
;

1381 
	}
}

1388 
	$upd©e_åì
(
míu
 *
§c
, 
GtkTªeIãr
 * 
d°
)

1390 
míu
 *
chûd1
;

1391 
GtkTªeIãr
 
ôî
, 
tmp
;

1392 
GtkTªeIãr
 *
chûd2
 = &
ôî
;

1393 
gboﬁón
 
vÆid
;

1394 
GtkTªeIãr
 *
siblög
;

1395 
symbﬁ
 *
sym
;

1396 
¥›îty
 *
¥›
;

1397 
míu
 *
míu1
, *
míu2
;

1399 i‡(
§c
 =&
roŸmíu
)

1400 
ödít
 = 1;

1402 
vÆid
 = 
	`gtk_åì_modñ_ôî_chûdªn
(
modñ2
, 
chûd2
, 
d°
);

1403 
chûd1
 = 
§c
->
li°
; chûd1; chûd1 = chûd1->
√xt
) {

1405 
¥›
 = 
chûd1
->
¥om±
;

1406 
sym
 = 
chûd1
->sym;

1408 
ª∑r£
:

1409 
míu1
 = 
chûd1
;

1410 i‡(
vÆid
)

1411 
	`gtk_åì_modñ_gë
(
modñ2
, 
chûd2
, 
COL_MENU
,

1412 &
míu2
, -1);

1414 
míu2
 = 
NULL
;

1416 #ifde‡
DEBUG


1417 
	`¥ötf
("%*c%†| %s\n", 
ödít
, ' ',

1418 
míu1
 ? 
	`míu_gë_¥om±
(menu1) : "nil",

1419 
míu2
 ? 
	`míu_gë_¥om±
(menu2) : "nil");

1422 i‡(!
	`míu_is_visibÀ
(
chûd1
Ë&& !
show_Æl
) {

1423 i‡(
	`gtkåì_ôî_föd_node
(
d°
, 
míu1
Ë!
NULL
) {

1424 
	`mem˝y
(&
tmp
, 
chûd2
, (
GtkTªeIãr
));

1425 
vÆid
 = 
	`gtk_åì_modñ_ôî_√xt
(
modñ2
,

1426 
chûd2
);

1427 
	`gtk_åì_°‹e_ªmove
(
åì2
, &
tmp
);

1428 i‡(!
vÆid
)

1431 
ª∑r£
;

1436 i‡(
míu1
 !
míu2
) {

1437 i‡(
	`gtkåì_ôî_föd_node
(
d°
, 
míu1
Ë=
NULL
) {

1438 i‡(!
vÆid
 && !
míu2
)

1439 
siblög
 = 
NULL
;

1441 
siblög
 = 
chûd2
;

1442 
	`gtk_åì_°‹e_ö£π_bef‹e
(
åì2
,

1443 
chûd2
,

1444 
d°
, 
siblög
);

1445 
	`£t_node
(
chûd2
, 
míu1
, 
	`fûl_row
(menu1));

1446 i‡(
míu2
 =
NULL
)

1447 
vÆid
 = 
TRUE
;

1449 
	`mem˝y
(&
tmp
, 
chûd2
, (
GtkTªeIãr
));

1450 
vÆid
 = 
	`gtk_åì_modñ_ôî_√xt
(
modñ2
,

1451 
chûd2
);

1452 
	`gtk_åì_°‹e_ªmove
(
åì2
, &
tmp
);

1453 i‡(!
vÆid
)

1456 
ª∑r£
;

1458 } i‡(
sym
 && (sym->
Êags
 & 
SYMBOL_CHANGED
)) {

1459 
	`£t_node
(
chûd2
, 
míu1
, 
	`fûl_row
(menu1));

1462 
ödít
++;

1463 
	`upd©e_åì
(
chûd1
, 
chûd2
);

1464 
ödít
--;

1466 
vÆid
 = 
	`gtk_åì_modñ_ôî_√xt
(
modñ2
, 
chûd2
);

1468 
	}
}

1472 
	$di•œy_åì
(
míu
 *menu)

1474 
symbﬁ
 *
sym
;

1475 
¥›îty
 *
¥›
;

1476 
míu
 *
chûd
;

1477 
¥›_ty≥
 
±y≥
;

1479 i‡(
míu
 =&
roŸmíu
) {

1480 
ödít
 = 1;

1481 
cuºít
 = &
roŸmíu
;

1484 
chûd
 = 
míu
->
li°
; chûd; chûd = chûd->
√xt
) {

1485 
¥›
 = 
chûd
->
¥om±
;

1486 
sym
 = 
chûd
->sym;

1487 
±y≥
 = 
¥›
 ?Ör›->
ty≥
 : 
P_UNKNOWN
;

1489 i‡(
sym
)

1490 
sym
->
Êags
 &~
SYMBOL_CHANGED
;

1492 i‡((
võw_mode
 =
SPLIT_VIEW
)

1493 && !(
chûd
->
Êags
 & 
MENU_ROOT
Ë&& (
åì
 =
åì1
))

1496 i‡((
võw_mode
 =
SPLIT_VIEW
Ë&& (
chûd
->
Êags
 & 
MENU_ROOT
)

1497 && (
åì
 =
åì2
))

1500 i‡(
	`míu_is_visibÀ
(
chûd
Ë|| 
show_Æl
)

1501 
	`∂a˚_node
(
chûd
, 
	`fûl_row
(child));

1502 #ifde‡
DEBUG


1503 
	`¥ötf
("%*c%s: ", 
ödít
, ' ', 
	`míu_gë_¥om±
(
chûd
));

1504 
	`¥ötf
("%s", 
chûd
->
Êags
 & 
MENU_ROOT
 ? "rootmenu | " : "");

1505 
	`dbg_¥öt_±y≥
(
±y≥
);

1506 
	`¥ötf
(" | ");

1507 i‡(
sym
) {

1508 
	`dbg_¥öt_°y≥
(
sym
->
ty≥
);

1509 
	`¥ötf
(" | ");

1510 
	`dbg_¥öt_Êags
(
sym
->
Êags
);

1511 
	`¥ötf
("\n");

1513 
	`¥ötf
("\n");

1515 i‡((
võw_mode
 !
FULL_VIEW
Ë&& (
±y≥
 =
P_MENU
)

1516 && (
åì
 =
åì2
))

1522 i‡(((
võw_mode
 =
SINGLE_VIEW
Ë&& (
míu
->
Êags
 & 
MENU_ROOT
))

1523 || (
võw_mode
 =
FULL_VIEW
)

1524 || (
võw_mode
 =
SPLIT_VIEW
)) {

1525 
ödít
++;

1526 
	`di•œy_åì
(
chûd
);

1527 
ödít
--;

1530 
	}
}

1533 
	$di•œy_åì_∑π
()

1535 i‡(
åì2
)

1536 
	`gtk_åì_°‹e_˛ór
(
åì2
);

1537 i‡(
võw_mode
 =
SINGLE_VIEW
)

1538 
	`di•œy_åì
(
cuºít
);

1539 i‡(
võw_mode
 =
SPLIT_VIEW
)

1540 
	`di•œy_åì
(
brow£d
);

1541 
	`gtk_åì_võw_ex∑nd_Æl
(
	`GTK_TREE_VIEW
(
åì2_w
));

1542 
	}
}

1545 
	$di•œy_li°
()

1547 i‡(
åì1
)

1548 
	`gtk_åì_°‹e_˛ór
(
åì1
);

1550 
åì
 = 
åì1
;

1551 
	`di•œy_åì
(&
roŸmíu
);

1552 
	`gtk_åì_võw_ex∑nd_Æl
(
	`GTK_TREE_VIEW
(
åì1_w
));

1553 
åì
 = 
åì2
;

1554 
	}
}

1556 
	$fixup_roŸmíu
(
míu
 *menu)

1558 
míu
 *
chûd
;

1559 
míu_˙t
 = 0;

1561 
míu
->
Êags
 |
MENU_ROOT
;

1562 
chûd
 = 
míu
->
li°
; chûd; chûd = chûd->
√xt
) {

1563 i‡(
chûd
->
¥om±
 && chûd->¥om±->
ty≥
 =
P_MENU
) {

1564 
míu_˙t
++;

1565 
	`fixup_roŸmíu
(
chûd
);

1566 
míu_˙t
--;

1567 } i‡(!
míu_˙t
)

1568 
	`fixup_roŸmíu
(
chûd
);

1570 
	}
}

1574 
	$maö
(
ac
, *
av
[])

1576 c⁄° *
«me
;

1577 *
ív
;

1578 
gch¨
 *
gœde_fûe
;

1580 #i‚de‡
LKC_DIRECT_LINK


1581 
	`kc⁄fig_lﬂd
();

1584 
	`bödãxtdomaö
(
PACKAGE
, 
LOCALEDIR
);

1585 
	`böd_ãxtdomaö_code£t
(
PACKAGE
, "UTF-8");

1586 
	`ãxtdomaö
(
PACKAGE
);

1589 
	`gtk_£t_loˇÀ
();

1590 
	`gtk_öô
(&
ac
, &
av
);

1591 
	`gœde_öô
();

1597 
ív
 = 
	`gëív
(
SRCTREE
);

1598 i‡(
ív
)

1599 
gœde_fûe
 = 
	`g_°rc⁄ˇt
(
ív
, "/s¸ùts/kc⁄fig/gc⁄f.gœde", 
NULL
);

1600 i‡(
av
[0][0] == '/')

1601 
gœde_fûe
 = 
	`g_°rc⁄ˇt
(
av
[0], ".gœde", 
NULL
);

1603 
gœde_fûe
 = 
	`g_°rc⁄ˇt
(
	`g_gë_cuºít_dú
(), "/", 
av
[0], ".gœde", 
NULL
);

1606 
	`öô_maö_wödow
(
gœde_fûe
);

1607 
	`öô_åì_modñ
();

1608 
	`öô_À·_åì
();

1609 
	`öô_right_åì
();

1612 i‡(
ac
 > 1 && 
av
[1][0] == '-') {

1613 
av
[1][1]) {

1619 
	`¥ötf
("%†<c⁄fig>\n", 
av
[0]);

1620 
	`exô
(0);

1622 
«me
 = 
av
[2];

1624 
«me
 = 
av
[1];

1626 
	`c⁄f_∑r£
(
«me
);

1627 
	`fixup_roŸmíu
(&
roŸmíu
);

1628 
	`c⁄f_ªad
(
NULL
);

1630 
võw_mode
) {

1631 
SINGLE_VIEW
:

1632 
	`di•œy_åì_∑π
();

1634 
SPLIT_VIEW
:

1635 
	`di•œy_li°
();

1637 
FULL_VIEW
:

1638 
	`di•œy_åì
(&
roŸmíu
);

1642 
	`gtk_maö
();

1645 
	}
}

	@images.c

6 c⁄° *
	gxpm_lﬂd
[] = {

36 c⁄° *
	gxpm_ßve
[] = {

66 c⁄° *
	gxpm_back
[] = {

94 c⁄° *
	gxpm_åì_võw
[] = {

121 c⁄° *
	gxpm_sögÀ_võw
[] = {

148 c⁄° *
	gxpm_•lô_võw
[] = {

175 c⁄° *
	gxpm_symbﬁ_no
[] = {

192 c⁄° *
	gxpm_symbﬁ_mod
[] = {

209 c⁄° *
	gxpm_symbﬁ_yes
[] = {

226 c⁄° *
	gxpm_choi˚_no
[] = {

243 c⁄° *
	gxpm_choi˚_yes
[] = {

260 c⁄° *
	gxpm_míu
[] = {

277 c⁄° *
	gxpm_míu_öv
[] = {

294 c⁄° *
	gxpm_míuback
[] = {

311 c⁄° *
	gxpm_void
[] = {

	@kconfig_load.c

1 
	~<dlf˙.h
>

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

5 
	~"lkc.h
"

7 
	#P
(
«me
,
ty≥
,
¨g
Ë
	`ty≥
 (*«mê## 
_p
Ë
	)
arg

8 
	~"lkc_¥Ÿo.h
"

9 #unde‡
P


11 
	$kc⁄fig_lﬂd
()

13 *
h™dÀ
;

14 *
îr‹
;

16 
h™dÀ
 = 
	`dl›í
("./libkc⁄fig.so", 
RTLD_LAZY
);

17 i‡(!
h™dÀ
) {

18 
h™dÀ
 = 
	`dl›í
("./s¸ùts/kc⁄fig/libkc⁄fig.so", 
RTLD_LAZY
);

19 i‡(!
h™dÀ
) {

20 
	`Ârötf
(
°dîr
, "%s\n", 
	`dÀº‹
());

21 
	`exô
(1);

25 
	#P
(
«me
,
ty≥
,
¨g
) \

27 
«me
 ## 
_p
 = 
	`dlsym
(
h™dÀ
, #name); \

28 i‡((
îr‹
 = 
	`dÀº‹
())) { \

29 
	`Ârötf
(
°dîr
, "%s\n", 
îr‹
); \

30 
	`exô
(1); \

32 }

	)

33 
	~"lkc_¥Ÿo.h
"

34 #unde‡
P


35 
	}
}

	@kxgettext.c

7 
	~<°dlib.h
>

8 
	~<°rög.h
>

10 
	#LKC_DIRECT_LINK


	)

11 
	~"lkc.h
"

13 *
	$esˇ≥
(c⁄° * 
ãxt
, *
bf
, 
Àn
)

15 *
bÂ
 = 
bf
;

16 
mu…ûöe
 = 
	`°rchr
(
ãxt
, '\n'Ë!
NULL
;

17 
eﬁ
 = 0;

18 
ãxéí
 = 
	`°æí
(
ãxt
);

20 i‡((
ãxéí
 > 0Ë&& (
ãxt
[textlen-1] == '\n'))

21 
eﬁ
 = 1;

23 *
bÂ
++ = '"';

24 --
Àn
;

26 i‡(
mu…ûöe
) {

27 *
bÂ
++ = '"';

28 *
bÂ
++ = '\n';

29 *
bÂ
++ = '"';

30 
Àn
 -= 3;

33 *
ãxt
 !'\0' && 
Àn
 > 1) {

34 i‡(*
ãxt
 == '"')

35 *
bÂ
++ = '\\';

36 i‡(*
ãxt
 == '\n') {

37 *
bÂ
++ = '\\';

38 *
bÂ
++ = 'n';

39 *
bÂ
++ = '"';

40 *
bÂ
++ = '\n';

41 *
bÂ
++ = '"';

42 
Àn
 -= 5;

43 ++
ãxt
;

44 
√xt
;

46 *
bÂ
++ = *
ãxt
++;

47 
√xt
:

48 --
Àn
;

51 i‡(
mu…ûöe
 && 
eﬁ
)

52 
bÂ
 -= 3;

54 *
bÂ
++ = '"';

55 *
bÂ
 = '\0';

57  
bf
;

58 
	}
}

60 
	sfûe_löe
 {

61 
fûe_löe
 *
	m√xt
;

62 * 
	mfûe
;

63 
	mlöío
;

66 
fûe_löe
 *
	$fûe_löe__√w
(*
fûe
, 
löío
)

68 
fûe_löe
 *
£lf
 = 
	`mÆloc
((*self));

70 i‡(
£lf
 =
NULL
)

71 
out
;

73 
£lf
->
fûe
 = file;

74 
£lf
->
löío
 =Üineno;

75 
£lf
->
√xt
 = 
NULL
;

76 
out
:

77  
£lf
;

78 
	}
}

80 
	smesßge
 {

81 c⁄° *
	mmsg
;

82 c⁄° *
	m›ti⁄
;

83 
mesßge
 *
	m√xt
;

84 
fûe_löe
 *
	mfûes
;

87 
mesßge
 *
	gmesßge__li°
;

89 
mesßge
 *
	$mesßge__√w
(c⁄° *
msg
, *
›ti⁄
, *
fûe
, 
löío
)

91 
mesßge
 *
£lf
 = 
	`mÆloc
((*self));

93 i‡(
£lf
 =
NULL
)

94 
out
;

96 
£lf
->
fûes
 = 
	`fûe_löe__√w
(
fûe
, 
löío
);

97 i‡(
£lf
->
fûes
 =
NULL
)

98 
out_Áû
;

100 
£lf
->
msg
 = 
	`°rdup
(msg);

101 i‡(
£lf
->
msg
 =
NULL
)

102 
out_Áû_msg
;

104 
£lf
->
›ti⁄
 = option;

105 
£lf
->
√xt
 = 
NULL
;

106 
out
:

107  
£lf
;

108 
out_Áû_msg
:

109 
	`‰ì
(
£lf
->
fûes
);

110 
out_Áû
:

111 
	`‰ì
(
£lf
);

112 
£lf
 = 
NULL
;

113 
out
;

114 
	}
}

116 
mesßge
 *
	$meßge__föd
(c⁄° *
msg
)

118 
mesßge
 *
m
 = 
mesßge__li°
;

120 
m
 !
NULL
) {

121 i‡(
	`°rcmp
(
m
->
msg
, msg) == 0)

123 
m
 = m->
√xt
;

126  
m
;

127 
	}
}

129 
	$mesßge__add_fûe_löe
(
mesßge
 *
£lf
, *
fûe
, 
löío
)

131 
rc
 = -1;

132 
fûe_löe
 *
Ê
 = 
	`fûe_löe__√w
(
fûe
, 
löío
);

134 i‡(
Ê
 =
NULL
)

135 
out
;

137 
Ê
->
√xt
 = 
£lf
->
fûes
;

138 
£lf
->
fûes
 = 
Ê
;

139 
rc
 = 0;

140 
out
:

141  
rc
;

142 
	}
}

144 
	$mesßge__add
(c⁄° *
msg
, *
›ti⁄
, *
fûe
, 
löío
)

146 
rc
 = 0;

147 
bf
[16384];

148 *
esˇ≥d
 = 
	`esˇ≥
(
msg
, 
bf
, (bf));

149 
mesßge
 *
m
 = 
	`meßge__föd
(
esˇ≥d
);

151 i‡(
m
 !
NULL
)

152 
rc
 = 
	`mesßge__add_fûe_löe
(
m
, 
fûe
, 
löío
);

154 
m
 = 
	`mesßge__√w
(
esˇ≥d
, 
›ti⁄
, 
fûe
, 
löío
);

156 i‡(
m
 !
NULL
) {

157 
m
->
√xt
 = 
mesßge__li°
;

158 
mesßge__li°
 = 
m
;

160 
rc
 = -1;

162  
rc
;

163 
	}
}

165 
	$míu_buûd_mesßge_li°
(
míu
 *menu)

167 
míu
 *
chûd
;

169 
	`mesßge__add
(
	`míu_gë_¥om±
(
míu
), 
NULL
,

170 
míu
->
fûe
 =
NULL
 ? "RoŸ Míu" : míu->fûe->
«me
,

171 
míu
->
löío
);

173 i‡(
míu
->
sym
 !
NULL
 && míu->sym->
hñp
 != NULL)

174 
	`mesßge__add
(
míu
->
sym
->
hñp
, míu->sym->
«me
,

175 
míu
->
fûe
 =
NULL
 ? "RoŸ Míu" : míu->fûe->
«me
,

176 
míu
->
löío
);

178 
chûd
 = 
míu
->
li°
; chûd !
NULL
; chûd = chûd->
√xt
)

179 i‡(
chûd
->
¥om±
 !
NULL
)

180 
	`míu_buûd_mesßge_li°
(
chûd
);

181 
	}
}

183 
	$mesßge__¥öt_fûe_löío
(
mesßge
 *
£lf
)

185 
fûe_löe
 *
Ê
 = 
£lf
->
fûes
;

187 
	`putch¨
('\n');

188 i‡(
£lf
->
›ti⁄
 !
NULL
)

189 
	`¥ötf
("# %s:00000\n", 
£lf
->
›ti⁄
);

191 
	`¥ötf
("#: %s:%d", 
Ê
->
fûe
, fl->
löío
);

192 
Ê
 = fl->
√xt
;

194 
Ê
 !
NULL
) {

195 
	`¥ötf
(", %s:%d", 
Ê
->
fûe
, fl->
löío
);

196 
Ê
 = fl->
√xt
;

199 
	`putch¨
('\n');

200 
	}
}

202 
	$mesßge__¥öt_gëãxt_msgid_msg°r
(
mesßge
 *
£lf
)

204 
	`mesßge__¥öt_fûe_löío
(
£lf
);

206 
	`¥ötf
("msgid %s\n"

207 "msg°∏\"\"\n", 
£lf
->
msg
);

208 
	}
}

210 
	$míu__xgëãxt
()

212 
mesßge
 *
m
 = 
mesßge__li°
;

214 
m
 !
NULL
) {

215 
	`mesßge__¥öt_gëãxt_msgid_msg°r
(
m
);

216 
m
 = m->
√xt
;

218 
	}
}

220 
	$maö
(
ac
, **
av
)

222 
	`c⁄f_∑r£
(
av
[1]);

224 
	`míu_buûd_mesßge_li°
(
	`míu_gë_roŸ_míu
(
NULL
));

225 
	`míu__xgëãxt
();

227 
	}
}

	@lex.zconf.c

4 
	#YY_INT_ALIGNED
 

	)

8 
	#FLEX_SCANNER


	)

9 
	#YY_FLEX_MAJOR_VERSION
 2

	)

10 
	#YY_FLEX_MINOR_VERSION
 5

	)

11 
	#YY_FLEX_SUBMINOR_VERSION
 31

	)

12 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

13 
	#FLEX_BETA


	)

19 
	~<°dio.h
>

20 
	~<°rög.h
>

21 
	~<î∫o.h
>

22 
	~<°dlib.h
>

28 #i‚de‡
FLEXINT_H


29 
	#FLEXINT_H


	)

33 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

34 
	~<öây≥s.h
>

35 
öt8_t
 
	tÊex_öt8_t
;

36 
uöt8_t
 
	tÊex_uöt8_t
;

37 
öt16_t
 
	tÊex_öt16_t
;

38 
uöt16_t
 
	tÊex_uöt16_t
;

39 
öt32_t
 
	tÊex_öt32_t
;

40 
uöt32_t
 
	tÊex_uöt32_t
;

42 sig√d 
	tÊex_öt8_t
;

43 
	tÊex_öt16_t
;

44 
	tÊex_öt32_t
;

45 
	tÊex_uöt8_t
;

46 
	tÊex_uöt16_t
;

47 
	tÊex_uöt32_t
;

51 #i‚de‡
INT8_MIN


52 
	#INT8_MIN
 (-128)

	)

54 #i‚de‡
INT16_MIN


55 
	#INT16_MIN
 (-32767-1)

	)

57 #i‚de‡
INT32_MIN


58 
	#INT32_MIN
 (-2147483647-1)

	)

60 #i‚de‡
INT8_MAX


61 
	#INT8_MAX
 (127)

	)

63 #i‚de‡
INT16_MAX


64 
	#INT16_MAX
 (32767)

	)

66 #i‚de‡
INT32_MAX


67 
	#INT32_MAX
 (2147483647)

	)

69 #i‚de‡
UINT8_MAX


70 
	#UINT8_MAX
 (255U)

	)

72 #i‚de‡
UINT16_MAX


73 
	#UINT16_MAX
 (65535U)

	)

75 #i‚de‡
UINT32_MAX


76 
	#UINT32_MAX
 (4294967295U)

	)

81 #ifde‡
__˝lu•lus


84 
	#YY_USE_CONST


	)

88 #i‡
__STDC__


90 
	#YY_USE_CONST


	)

95 #ifde‡
YY_USE_CONST


96 
	#yyc⁄°
 c⁄°

	)

98 
	#yyc⁄°


	)

102 
	#YY_NULL
 0

	)

109 
	#YY_SC_TO_UI
(
c
Ë((Ë(Ëc)

	)

115 
	#BEGIN
 (
yy_°¨t
Ë1 + 2 *

	)

121 
	#YY_START
 (((
yy_°¨t
Ë- 1Ë/ 2)

	)

122 
	#YYSTATE
 
YY_START


	)

125 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

128 
	#YY_NEW_FILE
 
	`zc⁄‰e°¨t
(
zc⁄fö
 )

	)

130 
	#YY_END_OF_BUFFER_CHAR
 0

	)

133 #i‚de‡
YY_BUF_SIZE


134 
	#YY_BUF_SIZE
 16384

	)

137 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


138 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

139 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

142 
zc⁄Êíg
;

144 
FILE
 *
zc⁄fö
, *
zc⁄fout
;

146 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

147 
	#EOB_ACT_END_OF_FILE
 1

	)

148 
	#EOB_ACT_LAST_MATCH
 2

	)

150 
	#YY_LESS_LINENO
(
n
)

	)

153 
	#yyÀss
(
n
) \

157 
yyÀss_ma¸o_¨g
 = (
n
); \

158 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

159 *
yy_˝
 = (
yy_hﬁd_ch¨
); \

160 
YY_RESTORE_YY_MORE_OFFSET
 \

161 (
yy_c_buf_p
Ë
yy_˝
 = 
yy_bp
 + 
yyÀss_ma¸o_¨g
 - 
YY_MORE_ADJ
; \

162 
YY_DO_BEFORE_ACTION
; \

164  0 )

	)

166 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, (
yyãxt_±r
Ë)

	)

173 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


174 
	#YY_TYPEDEF_YY_SIZE_T


	)

175 
	tyy_size_t
;

178 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


179 
	#YY_STRUCT_YY_BUFFER_STATE


	)

180 
	syy_buf„r_°©e


182 
FILE
 *
	myy_öput_fûe
;

184 *
	myy_ch_buf
;

185 *
	myy_buf_pos
;

190 
yy_size_t
 
	myy_buf_size
;

195 
	myy_n_ch¨s
;

201 
	myy_is_our_buf„r
;

208 
	myy_is_öãø˘ive
;

214 
	myy_©_bﬁ
;

216 
	myy_bs_löío
;

217 
	myy_bs_cﬁumn
;

222 
	myy_fûl_buf„r
;

224 
	myy_buf„r_°©us
;

226 
	#YY_BUFFER_NEW
 0

	)

227 
	#YY_BUFFER_NORMAL
 1

	)

238 
	#YY_BUFFER_EOF_PENDING
 2

	)

244 
size_t
 
	gyy_buf„r_°ack_t›
 = 0;

245 
size_t
 
	gyy_buf„r_°ack_max
 = 0;

246 
YY_BUFFER_STATE
 * 
	gyy_buf„r_°ack
 = 0;

254 
	#YY_CURRENT_BUFFER
 ( (
yy_buf„r_°ack
) \

255 ? (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)] \

256 : 
NULL
)

	)

261 
	#YY_CURRENT_BUFFER_LVALUE
 (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)]

	)

264 
	gyy_hﬁd_ch¨
;

265 
	gyy_n_ch¨s
;

266 
	gzc⁄Êíg
;

269 *
	gyy_c_buf_p
 = (*) 0;

270 
	gyy_öô
 = 1;

271 
	gyy_°¨t
 = 0;

276 
	gyy_did_buf„r_swôch_⁄_eof
;

278 
zc⁄‰e°¨t
 (
FILE
 *
öput_fûe
 );

279 
zc⁄f_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

280 
YY_BUFFER_STATE
 
zc⁄f_¸óã_buf„r
 (
FILE
 *
fûe
,
size
 );

281 
zc⁄f_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 );

282 
zc⁄f_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 );

283 
zc⁄Âush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

284 
zc⁄Â›_buf„r_°©e
 ();

286 
zc⁄„nsuª_buf„r_°ack
 ();

287 
zc⁄f_lﬂd_buf„r_°©e
 ();

288 
zc⁄f_öô_buf„r
 (
YY_BUFFER_STATE
 
b
,
FILE
 *
fûe
 );

290 
	#YY_FLUSH_BUFFER
 
	`zc⁄f_Êush_buf„r
(
YY_CURRENT_BUFFER
 )

	)

292 
YY_BUFFER_STATE
 
zc⁄f_sˇn_buf„r
 (*
ba£
,
yy_size_t
 
size
 );

293 
YY_BUFFER_STATE
 
zc⁄f_sˇn_°rög
 (
yyc⁄°
 *
yy_°r
 );

294 
YY_BUFFER_STATE
 
zc⁄f_sˇn_byãs
 (
yyc⁄°
 *
byãs
,
Àn
 );

296 *
zc⁄ÁŒoc
 (
yy_size_t
 );

297 *
zc⁄‰óŒoc
 (*,
yy_size_t
 );

298 
zc⁄f‰ì
 (* );

300 
	#yy_√w_buf„r
 
zc⁄f_¸óã_buf„r


	)

302 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

304 i‡–! 
YY_CURRENT_BUFFER
 ){ \

305 
	`zc⁄„nsuª_buf„r_°ack
 (); \

306 
YY_CURRENT_BUFFER_LVALUE
 = \

307 
	`zc⁄f_¸óã_buf„r
(
zc⁄fö
,
YY_BUF_SIZE
 ); \

309 
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

310 }

	)

312 
	#yy_£t_bﬁ
(
©_bﬁ
) \

314 i‡–! 
YY_CURRENT_BUFFER
 ){\

315 
	`zc⁄„nsuª_buf„r_°ack
 (); \

316 
YY_CURRENT_BUFFER_LVALUE
 = \

317 
	`zc⁄f_¸óã_buf„r
(
zc⁄fö
,
YY_BUF_SIZE
 ); \

319 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = 
©_bﬁ
; \

320 }

	)

322 
	#YY_AT_BOL
(Ë(
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
)

	)

326 
	#zc⁄fwøp
(Ë1

	)

327 
	#YY_SKIP_YYWRAP


	)

329 
	tYY_CHAR
;

331 
FILE
 *
	gzc⁄fö
 = (FILE *Ë0, *
	gzc⁄fout
 = (FILE *) 0;

333 
	tyy_°©e_ty≥
;

335 
zc⁄Êöío
;

337 
	gzc⁄Êöío
 = 1;

339 *
zc⁄·ext
;

340 
	#yyãxt_±r
 
zc⁄·ext


	)

341 
yyc⁄°
 
Êex_öt16_t
 
	gyy_nxt
[][17] =

662 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 ();

663 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 (yy_°©e_ty≥ 
cuºít_°©e
 );

664 
yy_gë_√xt_buf„r
 ();

665 
yy_Áèl_îr‹
 (
yyc⁄°
 
msg
[] );

670 
	#YY_DO_BEFORE_ACTION
 \

671 (
yyãxt_±r
Ë
yy_bp
; \

672 
zc⁄Êíg
 = (
size_t
Ë(
yy_˝
 - 
yy_bp
); \

673 (
yy_hﬁd_ch¨
Ë*
yy_˝
; \

674 *
yy_˝
 = '\0'; \

675 (
yy_c_buf_p
Ë
yy_˝
;

	)

677 
	#YY_NUM_RULES
 33

	)

678 
	#YY_END_OF_BUFFER
 34

	)

681 
	syy_å™s_öfo


683 
Êex_öt32_t
 
	myy_vîify
;

684 
Êex_öt32_t
 
	myy_nxt
;

686 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ac˚±
[61] =

696 
yyc⁄°
 
Êex_öt32_t
 
	gyy_ec
[256] =

728 
zc⁄f_Êex_debug
;

729 
	gzc⁄f_Êex_debug
 = 0;

734 
	#REJECT
 
ªje˘_u£d_but_nŸ_dëe˘ed


	)

735 
	#yym‹e
(Ë
yym‹e_u£d_but_nŸ_dëe˘ed


	)

736 
	#YY_MORE_ADJ
 0

	)

737 
	#YY_RESTORE_YY_MORE_OFFSET


	)

738 *
	gzc⁄·ext
;

745 
	~<limôs.h
>

746 
	~<°dio.h
>

747 
	~<°dlib.h
>

748 
	~<°rög.h
>

749 
	~<uni°d.h
>

751 
	#LKC_DIRECT_LINK


	)

752 
	~"lkc.h
"

754 
	#START_STRSIZE
 16

	)

757 
fûe
 *
	mfûe
;

758 
	mlöío
;

759 } 
	gcuºít_pos
;

761 *
	gãxt
;

762 
	gãxt_size
, 
	gãxt_asize
;

764 
	sbuf„r
 {

765 
buf„r
 *
	m∑ª¡
;

766 
YY_BUFFER_STATE
 
	m°©e
;

769 
buf„r
 *
	gcuºít_buf
;

771 
	gœ°_ts
, 
	gfú°_ts
;

773 
zc⁄f_ídhñp
();

774 
zc⁄f_ídfûe
();

776 
	$√w_°rög
()

778 
ãxt
 = 
	`mÆloc
(
START_STRSIZE
);

779 
ãxt_asize
 = 
START_STRSIZE
;

780 
ãxt_size
 = 0;

781 *
ãxt
 = 0;

782 
	}
}

784 
	$≠≥nd_°rög
(c⁄° *
°r
, 
size
)

786 
√w_size
 = 
ãxt_size
 + 
size
 + 1;

787 i‡(
√w_size
 > 
ãxt_asize
) {

788 
√w_size
 +
START_STRSIZE
 - 1;

789 
√w_size
 &-
START_STRSIZE
;

790 
ãxt
 = 
	`ªÆloc
—ext, 
√w_size
);

791 
ãxt_asize
 = 
√w_size
;

793 
	`mem˝y
(
ãxt
 + 
ãxt_size
, 
°r
, 
size
);

794 
ãxt_size
 +
size
;

795 
ãxt
[
ãxt_size
] = 0;

796 
	}
}

798 
	$Æloc_°rög
(c⁄° *
°r
, 
size
)

800 
ãxt
 = 
	`mÆloc
(
size
 + 1);

801 
	`mem˝y
(
ãxt
, 
°r
, 
size
);

802 
ãxt
[
size
] = 0;

803 
	}
}

805 
	#INITIAL
 0

	)

806 
	#COMMAND
 1

	)

807 
	#HELP
 2

	)

808 
	#STRING
 3

	)

809 
	#PARAM
 4

	)

811 #i‚de‡
YY_NO_UNISTD_H


816 
	~<uni°d.h
>

819 #i‚de‡
YY_EXTRA_TYPE


820 
	#YY_EXTRA_TYPE
 *

	)

827 #i‚de‡
YY_SKIP_YYWRAP


828 #ifde‡
__˝lu•lus


829 "C" 
zc⁄fwøp
 ();

831 
zc⁄fwøp
 ();

835 
yyu≈ut
 (
c
,*
buf_±r
 );

837 #i‚de‡
yyãxt_±r


838 
yy_Êex_°∫˝y
 (*,
yyc⁄°
 *,);

841 #ifde‡
YY_NEED_STRLEN


842 
yy_Êex_°æí
 (
yyc⁄°
 * );

845 #i‚de‡
YY_NO_INPUT


847 #ifde‡
__˝lu•lus


848 
yyöput
 ();

850 
öput
 ();

856 #i‚de‡
YY_READ_BUF_SIZE


857 
	#YY_READ_BUF_SIZE
 8192

	)

861 #i‚de‡
ECHO


865 
	#ECHO
 (Ë
	`fwrôe
–
zc⁄·ext
, 
zc⁄Êíg
, 1, 
zc⁄fout
 )

	)

871 #i‚de‡
YY_INPUT


872 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

873 
î∫o
=0; \

874  (
ªsu…
 = 
	`ªad
–
	`fûío
(
zc⁄fö
), (*Ë
buf
, 
max_size
 )) < 0 ) \

876 if–
î∫o
 !
EINTR
) \

878 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

881 
î∫o
=0; \

882 
	`˛óªº
(
zc⁄fö
); \

885 

	)

892 #i‚de‡
yyãrmö©e


893 
	#yyãrmö©e
(Ë 
YY_NULL


	)

897 #i‚de‡
YY_START_STACK_INCR


898 
	#YY_START_STACK_INCR
 25

	)

902 #i‚de‡
YY_FATAL_ERROR


903 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg )

	)

911 #i‚de‡
YY_DECL


912 
	#YY_DECL_IS_OURS
 1

	)

914 
zc⁄Êex
 ();

916 
	#YY_DECL
 
	`zc⁄Êex
 ()

	)

922 #i‚de‡
YY_USER_ACTION


923 
	#YY_USER_ACTION


	)

927 #i‚de‡
YY_BREAK


928 
	#YY_BREAK
 ;

	)

931 
	#YY_RULE_SETUP
 \

932 
YY_USER_ACTION


	)

936 
	gYY_DECL


938 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

939 *
	gyy_˝
, *
	gyy_bp
;

940 
	gyy_a˘
;

942 
	g°r
 = 0;

943 
	gts
, 
	gi
;

945 i‡–(
	gyy_öô
) )

947 (
	gyy_öô
) = 0;

949 #ifde‡
YY_USER_INIT


950 
	gYY_USER_INIT
;

953 i‡–! (
	gyy_°¨t
) )

954 (
	gyy_°¨t
) = 1;

956 i‡–! 
	gzc⁄fö
 )

957 
	gzc⁄fö
 = 
°dö
;

959 i‡–! 
	gzc⁄fout
 )

960 
	gzc⁄fout
 = 
°dout
;

962 i‡–! 
	gYY_CURRENT_BUFFER
 ) {

963 
zc⁄„nsuª_buf„r_°ack
 ();

964 
	gYY_CURRENT_BUFFER_LVALUE
 =

965 
zc⁄f_¸óã_buf„r
(
zc⁄fö
,
YY_BUF_SIZE
 );

968 
zc⁄f_lﬂd_buf„r_°©e
( );

973 
	gyy_˝
 = (
yy_c_buf_p
);

976 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

981 
	gyy_bp
 = 
yy_˝
;

983 
	gyy_cuºít_°©e
 = (
yy_°¨t
);

984 
	gyy_m©ch
:

985  (
yy_cuºít_°©e
 = 
yy_nxt
[yy_cuºít_°©e][ 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)] ]) > 0 )

986 ++
yy_˝
;

988 
	gyy_cuºít_°©e
 = -
yy_cuºít_°©e
;

990 
	gyy_föd_a˘i⁄
:

991 
yy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

993 
	gYY_DO_BEFORE_ACTION
;

995 
	gdo_a˘i⁄
:

997  
yy_a˘
 )

1003 
YY_RULE_SETUP


1005 
cuºít_fûe
->
löío
++;

1006  
	gT_EOL
;

1008 
YY_BREAK


1010 
YY_RULE_SETUP


1012 
YY_BREAK


1014 
YY_RULE_SETUP


1016 
BEGIN
(
COMMAND
);

1018 
YY_BREAK


1020 
YY_RULE_SETUP


1022 
u≈ut
(
zc⁄·ext
[0]);

1023 
BEGIN
(
COMMAND
);

1025 
YY_BREAK


1028 
YY_RULE_SETUP


1030 
kc⁄f_id
 *
id
 = 
kc⁄f_id_lookup
(
zc⁄·ext
, 
zc⁄Êíg
);

1031 
BEGIN
(
PARAM
);

1032 
	gcuºít_pos
.
	gfûe
 = 
cuºít_fûe
;

1033 
	gcuºít_pos
.
	glöío
 = 
cuºít_fûe
->
löío
;

1034 i‡(
	gid
 && id->
	gÊags
 & 
	gTF_COMMAND
) {

1035 
	gzc⁄ÊvÆ
.
	gid
 = 
id
;

1036  
	gid
->
	gtokí
;

1038 
Æloc_°rög
(
zc⁄·ext
, 
zc⁄Êíg
);

1039 
	gzc⁄ÊvÆ
.
	g°rög
 = 
ãxt
;

1040  
	gT_WORD
;

1042 
YY_BREAK


1044 
YY_RULE_SETUP


1046 
YY_BREAK


1049 
YY_RULE_SETUP


1051 
BEGIN
(
INITIAL
);

1052 
	gcuºít_fûe
->
	glöío
++;

1053  
	gT_EOL
;

1055 
YY_BREAK


1058 
YY_RULE_SETUP


1059  
T_AND
;

1060 
YY_BREAK


1062 
YY_RULE_SETUP


1063  
T_OR
;

1064 
YY_BREAK


1066 
YY_RULE_SETUP


1067  
T_OPEN_PAREN
;

1068 
YY_BREAK


1070 
YY_RULE_SETUP


1071  
T_CLOSE_PAREN
;

1072 
YY_BREAK


1074 
YY_RULE_SETUP


1075  
T_NOT
;

1076 
YY_BREAK


1078 
YY_RULE_SETUP


1079  
T_EQUAL
;

1080 
YY_BREAK


1082 
YY_RULE_SETUP


1083  
T_UNEQUAL
;

1084 
YY_BREAK


1086 
YY_RULE_SETUP


1088 
°r
 = 
zc⁄·ext
[0];

1089 
√w_°rög
();

1090 
BEGIN
(
STRING
);

1092 
YY_BREAK


1095 
YY_RULE_SETUP


1096 
BEGIN
(
INITIAL
); 
	gcuºít_fûe
->
	glöío
++;  
	gT_EOL
;

1097 
YY_BREAK


1099 
YY_RULE_SETUP


1101 
YY_BREAK


1103 
YY_RULE_SETUP


1105 
kc⁄f_id
 *
id
 = 
kc⁄f_id_lookup
(
zc⁄·ext
, 
zc⁄Êíg
);

1106 i‡(
	gid
 && id->
	gÊags
 & 
	gTF_PARAM
) {

1107 
	gzc⁄ÊvÆ
.
	gid
 = 
id
;

1108  
	gid
->
	gtokí
;

1110 
Æloc_°rög
(
zc⁄·ext
, 
zc⁄Êíg
);

1111 
	gzc⁄ÊvÆ
.
	g°rög
 = 
ãxt
;

1112  
	gT_WORD
;

1114 
YY_BREAK


1116 
YY_RULE_SETUP


1118 
YY_BREAK


1121 
YY_RULE_SETUP


1122 
cuºít_fûe
->
löío
++;

1123 
YY_BREAK


1125 
YY_RULE_SETUP


1127 
YY_BREAK


1128 
YY_STATE_EOF
(
PARAM
):

1130 
BEGIN
(
INITIAL
);

1132 
YY_BREAK


1136 *
yy_˝
 = (
yy_hﬁd_ch¨
);

1137 (
	gyy_c_buf_p
Ë
yy_˝
 -= 1;

1138 
	gYY_DO_BEFORE_ACTION
;

1139 
	gYY_RULE_SETUP


1141 
≠≥nd_°rög
(
zc⁄·ext
, 
zc⁄Êíg
);

1142 
	gzc⁄ÊvÆ
.
	g°rög
 = 
ãxt
;

1143  
	gT_WORD_QUOTE
;

1145 
YY_BREAK


1147 
YY_RULE_SETUP


1149 
≠≥nd_°rög
(
zc⁄·ext
, 
zc⁄Êíg
);

1151 
YY_BREAK


1154 *
yy_˝
 = (
yy_hﬁd_ch¨
);

1155 (
	gyy_c_buf_p
Ë
yy_˝
 -= 1;

1156 
	gYY_DO_BEFORE_ACTION
;

1157 
	gYY_RULE_SETUP


1159 
≠≥nd_°rög
(
zc⁄·ext
 + 1, 
zc⁄Êíg
 - 1);

1160 
	gzc⁄ÊvÆ
.
	g°rög
 = 
ãxt
;

1161  
	gT_WORD_QUOTE
;

1163 
YY_BREAK


1165 
YY_RULE_SETUP


1167 
≠≥nd_°rög
(
zc⁄·ext
 + 1, 
zc⁄Êíg
 - 1);

1169 
YY_BREAK


1171 
YY_RULE_SETUP


1173 i‡(
°r
 =
zc⁄·ext
[0]) {

1174 
BEGIN
(
PARAM
);

1175 
	gzc⁄ÊvÆ
.
	g°rög
 = 
ãxt
;

1176  
	gT_WORD_QUOTE
;

1178 
≠≥nd_°rög
(
zc⁄·ext
, 1);

1180 
YY_BREAK


1183 
YY_RULE_SETUP


1185 
¥ötf
("%s:%d:w¨nög: mu…i-löê°rög†nŸ suµ‹ãd\n", 
zc⁄f_cu∫ame
(), 
zc⁄f_löío
());

1186 
	gcuºít_fûe
->
	glöío
++;

1187 
BEGIN
(
INITIAL
);

1188  
	gT_EOL
;

1190 
YY_BREAK


1191 
YY_STATE_EOF
(
STRING
):

1193 
BEGIN
(
INITIAL
);

1195 
YY_BREAK


1198 
YY_RULE_SETUP


1200 
ts
 = 0;

1201 
	gi
 = 0; i < 
	gzc⁄Êíg
; i++) {

1202 i‡(
	gzc⁄·ext
[
i
] == '\t')

1203 
ts
 = (ts & ~7) + 8;

1205 
	gts
++;

1207 
	gœ°_ts
 = 
ts
;

1208 i‡(
	gfú°_ts
) {

1209 i‡(
	gts
 < 
	gfú°_ts
) {

1210 
zc⁄f_ídhñp
();

1211  
	gT_HELPTEXT
;

1213 
	gts
 -
fú°_ts
;

1214 
	gts
 > 8) {

1215 
≠≥nd_°rög
(" ", 8);

1216 
	gts
 -= 8;

1218 
≠≥nd_°rög
(" ", 
ts
);

1221 
YY_BREAK


1224 *
yy_˝
 = (
yy_hﬁd_ch¨
);

1225 (
	gyy_c_buf_p
Ë
yy_˝
 -= 1;

1226 
	gYY_DO_BEFORE_ACTION
;

1227 
	gYY_RULE_SETUP


1229 
	gcuºít_fûe
->
	glöío
++;

1230 
zc⁄f_ídhñp
();

1231  
	gT_HELPTEXT
;

1233 
YY_BREAK


1236 
YY_RULE_SETUP


1238 
cuºít_fûe
->
löío
++;

1239 
≠≥nd_°rög
("\n", 1);

1241 
YY_BREAK


1243 
YY_RULE_SETUP


1245 
≠≥nd_°rög
(
zc⁄·ext
, 
zc⁄Êíg
);

1246 i‡(!
	gfú°_ts
)

1247 
	gfú°_ts
 = 
œ°_ts
;

1249 
YY_BREAK


1250 
YY_STATE_EOF
(
HELP
):

1252 
zc⁄f_ídhñp
();

1253  
	gT_HELPTEXT
;

1255 
YY_BREAK


1257 
YY_STATE_EOF
(
INITIAL
):

1258 
YY_STATE_EOF
(
COMMAND
):

1260 i‡(
cuºít_fûe
) {

1261 
zc⁄f_ídfûe
();

1262  
	gT_EOL
;

1264 
f˛o£
(
zc⁄fö
);

1265 
yyãrmö©e
();

1267 
YY_BREAK


1269 
YY_RULE_SETUP


1270 
YY_FATAL_ERROR
( "flex scanner jammed" );

1271 
YY_BREAK


1273 
	gYY_END_OF_BUFFER
:

1276 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - (
yyãxt_±r
)) - 1;

1279 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

1280 
YY_RESTORE_YY_MORE_OFFSET


1282 i‡–
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

1293 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1294 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_öput_fûe
 = 
zc⁄fö
;

1295 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

1305 i‡–(
	gyy_c_buf_p
Ë<&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1307 
yy_°©e_ty≥
 
yy_√xt_°©e
;

1309 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1311 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1322 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 );

1324 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1326 i‡–
	gyy_√xt_°©e
 )

1329 
	gyy_˝
 = ++(
yy_c_buf_p
);

1330 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

1331 
	gyy_m©ch
;

1336 
	gyy_˝
 = (
yy_c_buf_p
);

1337 
	gyy_föd_a˘i⁄
;

1341  
yy_gë_√xt_buf„r
( ) )

1343 
	gEOB_ACT_END_OF_FILE
:

1345 (
yy_did_buf„r_swôch_⁄_eof
) = 0;

1347 i‡–
zc⁄fwøp
( ) )

1358 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1360 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

1361 
	gdo_a˘i⁄
;

1366 i‡–! (
	gyy_did_buf„r_swôch_⁄_eof
) )

1367 
	gYY_NEW_FILE
;

1372 
	gEOB_ACT_CONTINUE_SCAN
:

1373 (
yy_c_buf_p
) =

1374 (
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1376 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1378 
	gyy_˝
 = (
yy_c_buf_p
);

1379 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1380 
	gyy_m©ch
;

1382 
	gEOB_ACT_LAST_MATCH
:

1383 (
yy_c_buf_p
) =

1384 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)];

1386 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1388 
	gyy_˝
 = (
yy_c_buf_p
);

1389 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1390 
	gyy_föd_a˘i⁄
;

1396 
YY_FATAL_ERROR
(

1409 
	$yy_gë_√xt_buf„r
 ()

1411 *
de°
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
;

1412 *
sour˚
 = (
yyãxt_±r
);

1413 
numbî_to_move
, 
i
;

1414 
ªt_vÆ
;

1416 i‡–(
yy_c_buf_p
Ë> &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
) + 1] )

1417 
	`YY_FATAL_ERROR
(

1420 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_fûl_buf„r
 == 0 )

1422 i‡–(
yy_c_buf_p
Ë- (
yyãxt_±r
Ë- 
YY_MORE_ADJ
 == 1 )

1427  
EOB_ACT_END_OF_FILE
;

1435  
EOB_ACT_LAST_MATCH
;

1442 
numbî_to_move
 = (Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
)) - 1;

1444  
i
 = 0; i < 
numbî_to_move
; ++i )

1445 *(
de°
++Ë*(
sour˚
++);

1447 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

1451 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars) = 0;

1455 
size_t
 
num_to_ªad
 =

1456 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 - 
numbî_to_move
 - 1;

1458  
num_to_ªad
 <= 0 )

1462 
YY_BUFFER_STATE
 
b
 = 
YY_CURRENT_BUFFER
;

1464 
yy_c_buf_p_off£t
 =

1465 (Ë((
yy_c_buf_p
Ë- 
b
->
yy_ch_buf
);

1467 i‡–
b
->
yy_is_our_buf„r
 )

1469 
√w_size
 = 
b
->
yy_buf_size
 * 2;

1471 i‡–
√w_size
 <= 0 )

1472 
b
->
yy_buf_size
 += b->yy_buf_size / 8;

1474 
b
->
yy_buf_size
 *= 2;

1476 
b
->
yy_ch_buf
 = (*)

1478 
	`zc⁄‰óŒoc
((*Ë
b
->
yy_ch_buf
,b->
yy_buf_size
 + 2 );

1482 
b
->
yy_ch_buf
 = 0;

1484 i‡–! 
b
->
yy_ch_buf
 )

1485 
	`YY_FATAL_ERROR
(

1488 (
yy_c_buf_p
Ë&
b
->
yy_ch_buf
[
yy_c_buf_p_off£t
];

1490 
num_to_ªad
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 -

1491 
numbî_to_move
 - 1;

1495 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

1496 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

1499 
	`YY_INPUT
–(&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
]),

1500 (
yy_n_ch¨s
), 
num_to_ªad
 );

1502 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1505 i‡–(
yy_n_ch¨s
) == 0 )

1507 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

1509 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

1510 
	`zc⁄‰e°¨t
(
zc⁄fö
 );

1515 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

1516 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =

1517 
YY_BUFFER_EOF_PENDING
;

1522 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

1524 (
yy_n_ch¨s
Ë+
numbî_to_move
;

1525 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] = 
YY_END_OF_BUFFER_CHAR
;

1526 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
Ë+ 1] = 
YY_END_OF_BUFFER_CHAR
;

1528 (
yyãxt_±r
Ë&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[0];

1530  
ªt_vÆ
;

1531 
	}
}

1535 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
 ()

1537 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

1538 *
yy_˝
;

1540 
yy_cuºít_°©e
 = (
yy_°¨t
);

1542  
yy_˝
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
; yy_˝ < (
yy_c_buf_p
); ++yy_cp )

1544 
yy_cuºít_°©e
 = 
yy_nxt
[yy_cuºít_°©e][(*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1)];

1547  
yy_cuºít_°©e
;

1548 
	}
}

1555 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
 (
yy_°©e_ty≥
 
yy_cuºít_°©e
 )

1557 
yy_is_jam
;

1559 
yy_cuºít_°©e
 = 
yy_nxt
[yy_current_state][1];

1560 
yy_is_jam
 = (
yy_cuºít_°©e
 <= 0);

1562  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

1563 
	}
}

1565 
	$yyu≈ut
 (
c
, * 
yy_bp
 )

1567 *
yy_˝
;

1569 
yy_˝
 = (
yy_c_buf_p
);

1572 *
yy_˝
 = (
yy_hﬁd_ch¨
);

1574 i‡–
yy_˝
 < 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 + 2 )

1577 
numbî_to_move
 = (
yy_n_ch¨s
) + 2;

1578 *
de°
 = &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[

1579 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 + 2];

1580 *
sour˚
 =

1581 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
];

1583  
sour˚
 > 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

1584 *--
de°
 = *--
sour˚
;

1586 
yy_˝
 +(Ë(
de°
 - 
sour˚
);

1587 
yy_bp
 +(Ë(
de°
 - 
sour˚
);

1588 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 =

1589 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
;

1591 i‡–
yy_˝
 < 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 + 2 )

1592 
	`YY_FATAL_ERROR
( "flex scannerÖush-back overflow" );

1595 *--
yy_˝
 = (Ë
c
;

1597 (
yyãxt_±r
Ë
yy_bp
;

1598 (
yy_hﬁd_ch¨
Ë*
yy_˝
;

1599 (
yy_c_buf_p
Ë
yy_˝
;

1600 
	}
}

1602 #i‚de‡
YY_NO_INPUT


1603 #ifde‡
__˝lu•lus


1604 
	$yyöput
 ()

1606 
	$öput
 ()

1610 
c
;

1612 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1614 i‡–*(
yy_c_buf_p
Ë=
YY_END_OF_BUFFER_CHAR
 )

1620 i‡–(
yy_c_buf_p
Ë< &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1622 *(
yy_c_buf_p
) = '\0';

1626 
off£t
 = (
yy_c_buf_p
Ë- (
yyãxt_±r
);

1627 ++(
yy_c_buf_p
);

1629  
	`yy_gë_√xt_buf„r
( ) )

1631 
EOB_ACT_LAST_MATCH
:

1643 
	`zc⁄‰e°¨t
(
zc⁄fö
 );

1647 
EOB_ACT_END_OF_FILE
:

1649 i‡–
	`zc⁄fwøp
( ) )

1650  
EOF
;

1652 i‡–! (
yy_did_buf„r_swôch_⁄_eof
) )

1653 
YY_NEW_FILE
;

1654 #ifde‡
__˝lu•lus


1655  
	`yyöput
();

1657  
	`öput
();

1661 
EOB_ACT_CONTINUE_SCAN
:

1662 (
yy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
off£t
;

1668 
c
 = *(*Ë(
yy_c_buf_p
);

1669 *(
yy_c_buf_p
) = '\0';

1670 (
yy_hﬁd_ch¨
Ë*++(
yy_c_buf_p
);

1672  
c
;

1673 
	}
}

1681 
	$zc⁄‰e°¨t
 (
FILE
 * 
öput_fûe
 )

1684 i‡–! 
YY_CURRENT_BUFFER
 ){

1685 
	`zc⁄„nsuª_buf„r_°ack
 ();

1686 
YY_CURRENT_BUFFER_LVALUE
 =

1687 
	`zc⁄f_¸óã_buf„r
(
zc⁄fö
,
YY_BUF_SIZE
 );

1690 
	`zc⁄f_öô_buf„r
(
YY_CURRENT_BUFFER
,
öput_fûe
 );

1691 
	`zc⁄f_lﬂd_buf„r_°©e
( );

1692 
	}
}

1698 
	$zc⁄f_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1706 
	`zc⁄„nsuª_buf„r_°ack
 ();

1707 i‡–
YY_CURRENT_BUFFER
 =
√w_buf„r
 )

1710 i‡–
YY_CURRENT_BUFFER
 )

1713 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1714 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1715 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1718 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1719 
	`zc⁄f_lﬂd_buf„r_°©e
( );

1726 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1727 
	}
}

1729 
	$zc⁄f_lﬂd_buf„r_°©e
 ()

1731 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1732 (
yyãxt_±r
Ë(
yy_c_buf_p
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
;

1733 
zc⁄fö
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_öput_fûe
;

1734 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
);

1735 
	}
}

1743 
YY_BUFFER_STATE
 
	$zc⁄f_¸óã_buf„r
 (
FILE
 * 
fûe
, 
size
 )

1745 
YY_BUFFER_STATE
 
b
;

1747 
b
 = (
YY_BUFFER_STATE
Ë
	`zc⁄ÁŒoc
(–
yy_buf„r_°©e
 ) );

1748 i‡–! 
b
 )

1749 
	`YY_FATAL_ERROR
( "out of dynamic memory in zconf_create_buffer()" );

1751 
b
->
yy_buf_size
 = 
size
;

1756 
b
->
yy_ch_buf
 = (*Ë
	`zc⁄ÁŒoc
(b->
yy_buf_size
 + 2 );

1757 i‡–! 
b
->
yy_ch_buf
 )

1758 
	`YY_FATAL_ERROR
( "out of dynamic memory in zconf_create_buffer()" );

1760 
b
->
yy_is_our_buf„r
 = 1;

1762 
	`zc⁄f_öô_buf„r
(
b
,
fûe
 );

1764  
b
;

1765 
	}
}

1771 
	$zc⁄f_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1774 i‡–! 
b
 )

1777 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1778 
YY_CURRENT_BUFFER_LVALUE
 = (
YY_BUFFER_STATE
) 0;

1780 i‡–
b
->
yy_is_our_buf„r
 )

1781 
	`zc⁄f‰ì
((*Ë
b
->
yy_ch_buf
 );

1783 
	`zc⁄f‰ì
((*Ë
b
 );

1784 
	}
}

1790 
	$zc⁄f_öô_buf„r
 (
YY_BUFFER_STATE
 
b
, 
FILE
 * 
fûe
 )

1793 
€ºno
 = 
î∫o
;

1795 
	`zc⁄f_Êush_buf„r
(
b
 );

1797 
b
->
yy_öput_fûe
 = 
fûe
;

1798 
b
->
yy_fûl_buf„r
 = 1;

1804 i‡(
b
 !
YY_CURRENT_BUFFER
){

1805 
b
->
yy_bs_löío
 = 1;

1806 
b
->
yy_bs_cﬁumn
 = 0;

1809 
b
->
yy_is_öãø˘ive
 = 0;

1811 
î∫o
 = 
€ºno
;

1812 
	}
}

1818 
	$zc⁄f_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1820 i‡–! 
b
 )

1823 
b
->
yy_n_ch¨s
 = 0;

1829 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

1830 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

1832 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

1834 
b
->
yy_©_bﬁ
 = 1;

1835 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1837 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1838 
	`zc⁄f_lﬂd_buf„r_°©e
( );

1839 
	}
}

1847 
	$zc⁄Âush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1849 i‡(
√w_buf„r
 =
NULL
)

1852 
	`zc⁄„nsuª_buf„r_°ack
();

1855 i‡–
YY_CURRENT_BUFFER
 )

1858 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1859 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1860 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1864 i‡(
YY_CURRENT_BUFFER
)

1865 (
yy_buf„r_°ack_t›
)++;

1866 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1869 
	`zc⁄f_lﬂd_buf„r_°©e
( );

1870 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1871 
	}
}

1877 
	$zc⁄Â›_buf„r_°©e
 ()

1879 i‡(!
YY_CURRENT_BUFFER
)

1882 
	`zc⁄f_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

1883 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

1884 i‡((
yy_buf„r_°ack_t›
) > 0)

1885 --(
yy_buf„r_°ack_t›
);

1887 i‡(
YY_CURRENT_BUFFER
) {

1888 
	`zc⁄f_lﬂd_buf„r_°©e
( );

1889 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1891 
	}
}

1896 
	$zc⁄„nsuª_buf„r_°ack
 ()

1898 
num_to_Æloc
;

1900 i‡(!(
yy_buf„r_°ack
)) {

1906 
num_to_Æloc
 = 1;

1907 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
zc⁄ÁŒoc


1908 (
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1911 
	`mem£t
((
yy_buf„r_°ack
), 0, 
num_to_Æloc
 * (
yy_buf„r_°©e
*));

1913 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1914 (
yy_buf„r_°ack_t›
) = 0;

1918 i‡((
yy_buf„r_°ack_t›
Ë>((
yy_buf„r_°ack_max
)) - 1){

1921 
grow_size
 = 8 ;

1923 
num_to_Æloc
 = (
yy_buf„r_°ack_max
Ë+ 
grow_size
;

1924 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
zc⁄‰óŒoc


1925 ((
yy_buf„r_°ack
),

1926 
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1930 
	`mem£t
((
yy_buf„r_°ack
Ë+ (
yy_buf„r_°ack_max
), 0, 
grow_size
 * (
yy_buf„r_°©e
*));

1931 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1933 
	}
}

1941 
YY_BUFFER_STATE
 
	$zc⁄f_sˇn_buf„r
 (* 
ba£
, 
yy_size_t
 
size
 )

1943 
YY_BUFFER_STATE
 
b
;

1945 i‡–
size
 < 2 ||

1946 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

1947 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

1951 
b
 = (
YY_BUFFER_STATE
Ë
	`zc⁄ÁŒoc
(–
yy_buf„r_°©e
 ) );

1952 i‡–! 
b
 )

1953 
	`YY_FATAL_ERROR
( "out of dynamic memory in zconf_scan_buffer()" );

1955 
b
->
yy_buf_size
 = 
size
 - 2;

1956 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

1957 
b
->
yy_is_our_buf„r
 = 0;

1958 
b
->
yy_öput_fûe
 = 0;

1959 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

1960 
b
->
yy_is_öãø˘ive
 = 0;

1961 
b
->
yy_©_bﬁ
 = 1;

1962 
b
->
yy_fûl_buf„r
 = 0;

1963 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1965 
	`zc⁄f_swôch_to_buf„r
(
b
 );

1967  
b
;

1968 
	}
}

1978 
YY_BUFFER_STATE
 
	$zc⁄f_sˇn_°rög
 (
yyc⁄°
 * 
yy_°r
 )

1981  
	`zc⁄f_sˇn_byãs
(
yy_°r
,
	`°æí
(yy_str) );

1982 
	}
}

1991 
YY_BUFFER_STATE
 
	$zc⁄f_sˇn_byãs
 (
yyc⁄°
 * 
byãs
, 
Àn
 )

1993 
YY_BUFFER_STATE
 
b
;

1994 *
buf
;

1995 
yy_size_t
 
n
;

1996 
i
;

1999 
n
 = 
Àn
 + 2;

2000 
buf
 = (*Ë
	`zc⁄ÁŒoc
(
n
 );

2001 i‡–! 
buf
 )

2002 
	`YY_FATAL_ERROR
( "out of dynamic memory in zconf_scan_bytes()" );

2004  
i
 = 0; i < 
Àn
; ++i )

2005 
buf
[
i
] = 
byãs
[i];

2007 
buf
[
Àn
] = buf[Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

2009 
b
 = 
	`zc⁄f_sˇn_buf„r
(
buf
,
n
 );

2010 i‡–! 
b
 )

2011 
	`YY_FATAL_ERROR
( "bad buffer in zconf_scan_bytes()" );

2016 
b
->
yy_is_our_buf„r
 = 1;

2018  
b
;

2019 
	}
}

2021 #i‚de‡
YY_EXIT_FAILURE


2022 
	#YY_EXIT_FAILURE
 2

	)

2025 
	$yy_Áèl_îr‹
 (
yyc⁄°
 * 
msg
 )

2027 (Ë
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

2028 
	`exô
–
YY_EXIT_FAILURE
 );

2029 
	}
}

2033 #unde‡
yyÀss


2034 
	#yyÀss
(
n
) \

2038 
yyÀss_ma¸o_¨g
 = (
n
); \

2039 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

2040 
zc⁄·ext
[
zc⁄Êíg
] = (
yy_hﬁd_ch¨
); \

2041 (
yy_c_buf_p
Ë
zc⁄·ext
 + 
yyÀss_ma¸o_¨g
; \

2042 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
); \

2043 *(
yy_c_buf_p
) = '\0'; \

2044 
zc⁄Êíg
 = 
yyÀss_ma¸o_¨g
; \

2046  0 )

	)

2053 
	$zc⁄fgë_löío
 ()

2056  
zc⁄Êöío
;

2057 
	}
}

2062 
FILE
 *
	$zc⁄fgë_ö
 ()

2064  
zc⁄fö
;

2065 
	}
}

2070 
FILE
 *
	$zc⁄fgë_out
 ()

2072  
zc⁄fout
;

2073 
	}
}

2078 
	$zc⁄fgë_Àng
 ()

2080  
zc⁄Êíg
;

2081 
	}
}

2087 *
	$zc⁄fgë_ãxt
 ()

2089  
zc⁄·ext
;

2090 
	}
}

2096 
	$zc⁄f£t_löío
 (
löe_numbî
 )

2099 
zc⁄Êöío
 = 
löe_numbî
;

2100 
	}
}

2108 
	$zc⁄f£t_ö
 (
FILE
 * 
ö_°r
 )

2110 
zc⁄fö
 = 
ö_°r
 ;

2111 
	}
}

2113 
	$zc⁄f£t_out
 (
FILE
 * 
out_°r
 )

2115 
zc⁄fout
 = 
out_°r
 ;

2116 
	}
}

2118 
	$zc⁄fgë_debug
 ()

2120  
zc⁄f_Êex_debug
;

2121 
	}
}

2123 
	$zc⁄f£t_debug
 (
bdebug
 )

2125 
zc⁄f_Êex_debug
 = 
bdebug
 ;

2126 
	}
}

2129 
	$zc⁄Êex_de°roy
 ()

2133 
YY_CURRENT_BUFFER
){

2134 
	`zc⁄f_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

2135 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

2136 
	`zc⁄Â›_buf„r_°©e
();

2140 
	`zc⁄f‰ì
((
yy_buf„r_°ack
) );

2141 (
yy_buf„r_°ack
Ë
NULL
;

2144 
	}
}

2150 #i‚de‡
yyãxt_±r


2151 
	$yy_Êex_°∫˝y
 (* 
s1
, 
yyc⁄°
 * 
s2
, 
n
 )

2153 
i
;

2154  
i
 = 0; i < 
n
; ++i )

2155 
s1
[
i
] = 
s2
[i];

2156 
	}
}

2159 #ifde‡
YY_NEED_STRLEN


2160 
	$yy_Êex_°æí
 (
yyc⁄°
 * 
s
 )

2162 
n
;

2163  
n
 = 0; 
s
[n]; ++n )

2166  
n
;

2167 
	}
}

2170 *
	$zc⁄ÁŒoc
 (
yy_size_t
 
size
 )

2172  (*Ë
	`mÆloc
–
size
 );

2173 
	}
}

2175 *
	$zc⁄‰óŒoc
 (* 
±r
, 
yy_size_t
 
size
 )

2184  (*Ë
	`ªÆloc
–(*Ë
±r
, 
size
 );

2185 
	}
}

2187 
	$zc⁄f‰ì
 (* 
±r
 )

2189 
	`‰ì
–(*Ë
±r
 );

2190 
	}
}

2192 
	#YYTABLES_NAME
 "yyèbÀs"

	)

2194 #unde‡
YY_NEW_FILE


2195 #unde‡
YY_FLUSH_BUFFER


2196 #unde‡
yy_£t_bﬁ


2197 #unde‡
yy_√w_buf„r


2198 #unde‡
yy_£t_öãø˘ive


2199 #unde‡
yyãxt_±r


2200 #unde‡
YY_DO_BEFORE_ACTION


2202 #ifde‡
YY_DECL_IS_OURS


2203 #unde‡
YY_DECL_IS_OURS


2204 #unde‡
YY_DECL


2207 
	$zc⁄f_°¨thñp
()

2209 
	`√w_°rög
();

2210 
œ°_ts
 = 
fú°_ts
 = 0;

2211 
	`BEGIN
(
HELP
);

2212 
	}
}

2214 
	$zc⁄f_ídhñp
()

2216 
zc⁄ÊvÆ
.
°rög
 = 
ãxt
;

2217 
	`BEGIN
(
INITIAL
);

2218 
	}
}

2228 
FILE
 *
	$zc⁄f_f›í
(c⁄° *
«me
)

2230 *
ív
, 
fuŒ«me
[
PATH_MAX
+1];

2231 
FILE
 *
f
;

2233 
f
 = 
	`f›í
(
«me
, "r");

2234 i‡(!
f
 && 
«me
[0] != '/') {

2235 
ív
 = 
	`gëív
(
SRCTREE
);

2236 i‡(
ív
) {

2237 
	`•rötf
(
fuŒ«me
, "%s/%s", 
ív
, 
«me
);

2238 
f
 = 
	`f›í
(
fuŒ«me
, "r");

2241  
f
;

2242 
	}
}

2244 
	$zc⁄f_öôsˇn
(c⁄° *
«me
)

2246 
zc⁄fö
 = 
	`zc⁄f_f›í
(
«me
);

2247 i‡(!
zc⁄fö
) {

2248 
	`¥ötf
("ˇn'àföd fûê%s\n", 
«me
);

2249 
	`exô
(1);

2252 
cuºít_buf
 = 
	`mÆloc
((*current_buf));

2253 
	`mem£t
(
cuºít_buf
, 0, (*current_buf));

2255 
cuºít_fûe
 = 
	`fûe_lookup
(
«me
);

2256 
cuºít_fûe
->
löío
 = 1;

2257 
cuºít_fûe
->
Êags
 = 
FILE_BUSY
;

2258 
	}
}

2260 
	$zc⁄f_√xtfûe
(c⁄° *
«me
)

2262 
fûe
 *fûê
	`fûe_lookup
(
«me
);

2263 
buf„r
 *
buf
 = 
	`mÆloc
((*buf));

2264 
	`mem£t
(
buf
, 0, (*buf));

2266 
cuºít_buf
->
°©e
 = 
YY_CURRENT_BUFFER
;

2267 
zc⁄fö
 = 
	`zc⁄f_f›í
(
«me
);

2268 i‡(!
zc⁄fö
) {

2269 
	`¥ötf
("%s:%d: c™'à›í fûê\"%s\"\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
(), 
«me
);

2270 
	`exô
(1);

2272 
	`zc⁄f_swôch_to_buf„r
(
	`zc⁄f_¸óã_buf„r
(
zc⁄fö
,
YY_BUF_SIZE
));

2273 
buf
->
∑ª¡
 = 
cuºít_buf
;

2274 
cuºít_buf
 = 
buf
;

2276 i‡(
fûe
->
Êags
 & 
FILE_BUSY
) {

2277 
	`¥ötf
("ªcursivêsˇ¿(%s)?\n", 
«me
);

2278 
	`exô
(1);

2280 i‡(
fûe
->
Êags
 & 
FILE_SCANNED
) {

2281 
	`¥ötf
("fûê%†Æªady sˇ¬ed?\n", 
«me
);

2282 
	`exô
(1);

2284 
fûe
->
Êags
 |
FILE_BUSY
;

2285 
fûe
->
löío
 = 1;

2286 
fûe
->
∑ª¡
 = 
cuºít_fûe
;

2287 
cuºít_fûe
 = 
fûe
;

2288 
	}
}

2290 
	$zc⁄f_ídfûe
()

2292 
buf„r
 *
∑ª¡
;

2294 
cuºít_fûe
->
Êags
 |
FILE_SCANNED
;

2295 
cuºít_fûe
->
Êags
 &~
FILE_BUSY
;

2296 
cuºít_fûe
 = cuºít_fûe->
∑ª¡
;

2298 
∑ª¡
 = 
cuºít_buf
->parent;

2299 i‡(
∑ª¡
) {

2300 
	`f˛o£
(
zc⁄fö
);

2301 
	`zc⁄f_dñëe_buf„r
(
YY_CURRENT_BUFFER
);

2302 
	`zc⁄f_swôch_to_buf„r
(
∑ª¡
->
°©e
);

2304 
	`‰ì
(
cuºít_buf
);

2305 
cuºít_buf
 = 
∑ª¡
;

2306 
	}
}

2308 
	$zc⁄f_löío
()

2310  
cuºít_pos
.
löío
;

2311 
	}
}

2313 *
	$zc⁄f_cu∫ame
()

2315  
cuºít_pos
.
fûe
 ? cuºít_pos.fûe->
«me
 : "<none>";

2316 
	}
}

	@lkc.h

6 #i‚de‡
LKC_H


7 
	#LKC_H


	)

9 
	~"ex¥.h
"

11 #i‚de‡
KBUILD_NO_NLS


12 
	~<liböé.h
>

14 
	#gëãxt
(
Msgid
Ë((c⁄° *Ë(Msgid))

	)

15 
	#ãxtdomaö
(
Domaö«me
Ë((c⁄° *Ë(Domaö«me))

	)

16 
	#bödãxtdomaö
(
Domaö«me
, 
Dú«me
Ë((c⁄° *Ë(Dú«me))

	)

19 #ifde‡
__˝lu•lus


23 #ifde‡
LKC_DIRECT_LINK


24 
	#P
(
«me
,
ty≥
,
¨g
Ëty≥Çamê
	)
arg

26 
	~"lkc_defs.h
"

27 
	#P
(
«me
,
ty≥
,
¨g
Ë
	`ty≥
 (*«mê## 
_p
Ë
	)
arg

29 
	~"lkc_¥Ÿo.h
"

30 #unde‡
P


32 
	#SRCTREE
 "§˘ªe"

	)

34 
	#PACKAGE
 "löux"

	)

35 
	#LOCALEDIR
 "/u§/sh¨e/loˇÀ"

	)

37 
	#_
(
ãxt
Ë
	`gëãxt
—ext)

	)

38 
	#N_
(
ãxt
Ë—ext)

	)

41 
	#TF_COMMAND
 0x0001

	)

42 
	#TF_PARAM
 0x0002

	)

44 
	skc⁄f_id
 {

45 
«me
;

46 
tokí
;

47 
Êags
;

48 
symbﬁ_ty≥
 
°y≥
;

51 
zc⁄Â¨£
();

52 
zc⁄fdump
(
FILE
 *
out
);

54 
zc⁄fdebug
;

55 
zc⁄f_°¨thñp
();

56 
FILE
 *
zc⁄f_f›í
(c⁄° *
«me
);

57 
zc⁄f_öôsˇn
(c⁄° *
«me
);

58 
zc⁄f_√xtfûe
(c⁄° *
«me
);

59 
zc⁄f_löío
();

60 *
zc⁄f_cu∫ame
();

63 c⁄° 
c⁄f_def_fûíame
[];

65 *
c⁄f_gë_deÁu…_c⁄‚ame
();

68 
kc⁄fig_lﬂd
();

71 
míu_öô
();

72 
míu
 *
míu_add_míu
();

73 
míu_íd_míu
();

74 
míu_add_íåy
(
symbﬁ
 *
sym
);

75 
míu_íd_íåy
();

76 
míu_add_dï
(
ex¥
 *
dï
);

77 
¥›îty
 *
míu_add_¥›
(
¥›_ty≥
 
ty≥
, *
¥om±
, 
ex¥
 *ex¥, ex¥ *
dï
);

78 
¥›îty
 *
míu_add_¥om±
(
¥›_ty≥
 
ty≥
, *
¥om±
, 
ex¥
 *
dï
);

79 
míu_add_ex¥
(
¥›_ty≥
 
ty≥
, 
ex¥
 *ex¥, ex¥ *
dï
);

80 
míu_add_symbﬁ
(
¥›_ty≥
 
ty≥
, 
symbﬁ
 *
sym
, 
ex¥
 *
dï
);

81 
míu_föÆize
(
míu
 *
∑ª¡
);

82 
míu_£t_ty≥
(
ty≥
);

85 
fûe
 *
fûe_lookup
(c⁄° *
«me
);

86 
fûe_wrôe_dï
(c⁄° *
«me
);

88 
	sg°r
 {

89 
size_t
 
	gÀn
;

90 *
	gs
;

92 
g°r
 
°r_√w
();

93 
g°r
 
°r_assign
(c⁄° *
s
);

94 
°r_‰ì
(
g°r
 *
gs
);

95 
°r_≠≥nd
(
g°r
 *
gs
, c⁄° *
s
);

96 
°r_¥ötf
(
g°r
 *
gs
, c⁄° *
fmt
, ...);

97 c⁄° *
°r_gë
(
g°r
 *
gs
);

100 
sym_öô
();

101 
sym_˛ór_Æl_vÆid
();

102 
sym_£t_ch™ged
(
symbﬁ
 *
sym
);

103 
symbﬁ
 *
sym_check_dïs
(symbﬁ *
sym
);

104 
¥›îty
 *
¥›_Æloc
(
¥›_ty≥
 
ty≥
, 
symbﬁ
 *
sym
);

105 
symbﬁ
 *
¥›_gë_symbﬁ
(
¥›îty
 *
¥›
);

107 
ölöe
 
åi°©e
 
sym_gë_åi°©e_vÆue
(
symbﬁ
 *
sym
)

109  
	gsym
->
	gcuº
.
	gåi
;

113 
ölöe
 
symbﬁ
 *
sym_gë_choi˚_vÆue
(symbﬁ *
sym
)

115  (
	gsymbﬁ
 *)
	gsym
->
	gcuº
.
	gvÆ
;

118 
ölöe
 
boﬁ
 
sym_£t_choi˚_vÆue
(
symbﬁ
 *
ch
, symbﬁ *
chvÆ
)

120  
sym_£t_åi°©e_vÆue
(
chvÆ
, 
yes
);

123 
ölöe
 
boﬁ
 
sym_is_choi˚
(
symbﬁ
 *
sym
)

125  
	gsym
->
	gÊags
 & 
	gSYMBOL_CHOICE
 ? 
	gåue
 : 
Ál£
;

128 
ölöe
 
boﬁ
 
sym_is_choi˚_vÆue
(
symbﬁ
 *
sym
)

130  
	gsym
->
	gÊags
 & 
	gSYMBOL_CHOICEVAL
 ? 
	gåue
 : 
Ál£
;

133 
ölöe
 
boﬁ
 
sym_is_›ti⁄Æ
(
symbﬁ
 *
sym
)

135  
	gsym
->
	gÊags
 & 
	gSYMBOL_OPTIONAL
 ? 
	gåue
 : 
Ál£
;

138 
ölöe
 
boﬁ
 
sym_has_vÆue
(
symbﬁ
 *
sym
)

140  
	gsym
->
	gÊags
 & 
	gSYMBOL_NEW
 ? 
	gÁl£
 : 
åue
;

143 #ifde‡
__˝lu•lus


	@lkc_proto.h

3 
P
(
c⁄f_∑r£
,,(c⁄° *
«me
));

4 
P
(
c⁄f_ªad
,,(c⁄° *
«me
));

5 
P
(
c⁄f_ªad_sim∂e
,,(c⁄° *
«me
));

6 
P
(
c⁄f_wrôe
,,(c⁄° *
«me
));

9 
P
(
roŸmíu
,
míu
,);

11 
P
(
míu_is_visibÀ
,
boﬁ
,(
míu
 *menu));

12 
P
(
míu_gë_¥om±
,c⁄° *,(
míu
 *menu));

13 
P
(
míu_gë_roŸ_míu
,
míu
 *,(menu *menu));

14 
P
(
míu_gë_∑ª¡_míu
,
míu
 *,(menu *menu));

17 
P
(
symbﬁ_hash
,
symbﬁ
 *,[
SYMBOL_HASHSIZE
]);

18 
P
(
sym_ch™ge_cou¡
,,);

20 
P
(
sym_lookup
,
symbﬁ
 *,(c⁄° *
«me
, 
isc⁄°
));

21 
P
(
sym_föd
,
symbﬁ
 *,(c⁄° *
«me
));

22 
P
(
sym_ª_£¨ch
,
symbﬁ
 **,(c⁄° *
∑âîn
));

23 
P
(
sym_ty≥_«me
,c⁄° *,(
symbﬁ_ty≥
 
ty≥
));

24 
P
(
sym_ˇlc_vÆue
,,(
symbﬁ
 *
sym
));

25 
P
(
sym_gë_ty≥
,
symbﬁ_ty≥
,(
symbﬁ
 *
sym
));

26 
P
(
sym_åi°©e_wôhö_ønge
,
boﬁ
,(
symbﬁ
 *
sym
,
åi°©e
 
åi
));

27 
P
(
sym_£t_åi°©e_vÆue
,
boﬁ
,(
symbﬁ
 *
sym
,
åi°©e
 
åi
));

28 
P
(
sym_toggÀ_åi°©e_vÆue
,
åi°©e
,(
symbﬁ
 *
sym
));

29 
P
(
sym_°rög_vÆid
,
boﬁ
,(
symbﬁ
 *
sym
, c⁄° *
√wvÆ
));

30 
P
(
sym_°rög_wôhö_ønge
,
boﬁ
,(
symbﬁ
 *
sym
, c⁄° *
°r
));

31 
P
(
sym_£t_°rög_vÆue
,
boﬁ
,(
symbﬁ
 *
sym
, c⁄° *
√wvÆ
));

32 
P
(
sym_is_ch™gabÀ
,
boﬁ
,(
symbﬁ
 *
sym
));

33 
P
(
sym_gë_choi˚_¥›
,
¥›îty
 *,(
symbﬁ
 *
sym
));

34 
P
(
sym_gë_deÁu…_¥›
,
¥›îty
 *,(
symbﬁ
 *
sym
));

35 
P
(
sym_gë_°rög_vÆue
,c⁄° *,(
symbﬁ
 *
sym
));

37 
P
(
¥›_gë_ty≥_«me
,c⁄° *,(
¥›_ty≥
 
ty≥
));

40 
P
(
ex¥_com∑ª_ty≥
,,(
ex¥_ty≥
 
t1
, ex¥_ty≥ 
t2
));

41 
P
(
ex¥_¥öt
,,(
ex¥
 *
e
, (*
‚
)(*, c⁄° *), *
d©a
, 
¥evtokí
));

	@lxdialog/checklist.c

24 
	~"dülog.h
"

26 
	gli°_width
, 
	gcheck_x
, 
	gôem_x
;

31 
	$¥öt_ôem
(
WINDOW
 * 
wö
, c⁄° *
ôem
, 
°©us
, 
choi˚
,

32 
£À˘ed
)

34 
i
;

37 
	`w©å£t
(
wö
, 
míubox_©å
);

38 
	`wmove
(
wö
, 
choi˚
, 0);

39 
i
 = 0; i < 
li°_width
; i++)

40 
	`waddch
(
wö
, ' ');

42 
	`wmove
(
wö
, 
choi˚
, 
check_x
);

43 
	`w©å£t
(
wö
, 
£À˘ed
 ? 
check_£À˘ed_©å
 : 
check_©å
);

44 
	`w¥ötw
(
wö
, "(%c)", 
°©us
 ? 'X' : ' ');

46 
	`w©å£t
(
wö
, 
£À˘ed
 ? 
èg_£À˘ed_©å
 : 
èg_©å
);

47 
	`mvwaddch
(
wö
, 
choi˚
, 
ôem_x
, 
ôem
[0]);

48 
	`w©å£t
(
wö
, 
£À˘ed
 ? 
ôem_£À˘ed_©å
 : 
ôem_©å
);

49 
	`wadd°r
(
wö
, (*)
ôem
 + 1);

50 i‡(
£À˘ed
) {

51 
	`wmove
(
wö
, 
choi˚
, 
check_x
 + 1);

52 
	`wª‰esh
(
wö
);

54 
	}
}

59 
	$¥öt_¨rows
(
WINDOW
 * 
wö
, 
choi˚
, 
ôem_no
, 
s¸ﬁl
,

60 
y
, 
x
, 
height
)

62 
	`wmove
(
wö
, 
y
, 
x
);

64 i‡(
s¸ﬁl
 > 0) {

65 
	`w©å£t
(
wö
, 
u¨row_©å
);

66 
	`waddch
(
wö
, 
ACS_UARROW
);

67 
	`wadd°r
(
wö
, "(-)");

69 
	`w©å£t
(
wö
, 
míubox_©å
);

70 
	`waddch
(
wö
, 
ACS_HLINE
);

71 
	`waddch
(
wö
, 
ACS_HLINE
);

72 
	`waddch
(
wö
, 
ACS_HLINE
);

73 
	`waddch
(
wö
, 
ACS_HLINE
);

76 
y
 = y + 
height
 + 1;

77 
	`wmove
(
wö
, 
y
, 
x
);

79 i‡((
height
 < 
ôem_no
Ë&& (
s¸ﬁl
 + 
choi˚
 < item_no - 1)) {

80 
	`w©å£t
(
wö
, 
d¨row_©å
);

81 
	`waddch
(
wö
, 
ACS_DARROW
);

82 
	`wadd°r
(
wö
, "(+)");

84 
	`w©å£t
(
wö
, 
míubox_b‹dî_©å
);

85 
	`waddch
(
wö
, 
ACS_HLINE
);

86 
	`waddch
(
wö
, 
ACS_HLINE
);

87 
	`waddch
(
wö
, 
ACS_HLINE
);

88 
	`waddch
(
wö
, 
ACS_HLINE
);

90 
	}
}

95 
	$¥öt_buâ⁄s
(
WINDOW
 * 
dülog
, 
height
, 
width
, 
£À˘ed
)

97 
x
 = 
width
 / 2 - 11;

98 
y
 = 
height
 - 2;

100 
	`¥öt_buâ⁄
(
dülog
, "Sñe˘", 
y
, 
x
, 
£À˘ed
 == 0);

101 
	`¥öt_buâ⁄
(
dülog
, " Hñ∞", 
y
, 
x
 + 14, 
£À˘ed
 == 1);

103 
	`wmove
(
dülog
, 
y
, 
x
 + 1 + 14 * 
£À˘ed
);

104 
	`wª‰esh
(
dülog
);

105 
	}
}

111 
	$dülog_checkli°
(c⁄° *
tôÀ
, c⁄° *
¥om±
, 
height
,

112 
width
, 
li°_height
, 
ôem_no
,

113 c⁄° *c⁄° *
ôems
)

115 
i
, 
x
, 
y
, 
box_x
, 
box_y
;

116 
key
 = 0, 
buâ⁄
 = 0, 
choi˚
 = 0, 
s¸ﬁl
 = 0, 
max_choi˚
, *
°©us
;

117 
WINDOW
 *
dülog
, *
li°
;

120 i‡((
°©us
 = 
	`mÆloc
((Ë* 
ôem_no
)Ë=
NULL
) {

121 
	`ídwö
();

122 
	`Ârötf
(
°dîr
,

124 
	`exô
(-1);

128 
i
 = 0; i < 
ôem_no
; i++) {

129 
°©us
[
i
] = !
	`°rˇ£cmp
(
ôems
[i * 3 + 2], "on");

130 i‡((!
choi˚
 && 
°©us
[
i
])

131 || !
	`°rˇ£cmp
(
ôems
[
i
 * 3 + 2], "selected"))

132 
choi˚
 = 
i
 + 1;

134 i‡(
choi˚
)

135 
choi˚
--;

137 
max_choi˚
 = 
	`MIN
(
li°_height
, 
ôem_no
);

140 
x
 = (
COLS
 - 
width
) / 2;

141 
y
 = (
LINES
 - 
height
) / 2;

143 
	`døw_shadow
(
°ds¸
, 
y
, 
x
, 
height
, 
width
);

145 
dülog
 = 
	`√wwö
(
height
, 
width
, 
y
, 
x
);

146 
	`key∑d
(
dülog
, 
TRUE
);

148 
	`døw_box
(
dülog
, 0, 0, 
height
, 
width
, 
dülog_©å
, 
b‹dî_©å
);

149 
	`w©å£t
(
dülog
, 
b‹dî_©å
);

150 
	`mvwaddch
(
dülog
, 
height
 - 3, 0, 
ACS_LTEE
);

151 
i
 = 0; i < 
width
 - 2; i++)

152 
	`waddch
(
dülog
, 
ACS_HLINE
);

153 
	`w©å£t
(
dülog
, 
dülog_©å
);

154 
	`waddch
(
dülog
, 
ACS_RTEE
);

156 
	`¥öt_tôÀ
(
dülog
, 
tôÀ
, 
width
);

158 
	`w©å£t
(
dülog
, 
dülog_©å
);

159 
	`¥öt_autowøp
(
dülog
, 
¥om±
, 
width
 - 2, 1, 3);

161 
li°_width
 = 
width
 - 6;

162 
box_y
 = 
height
 - 
li°_height
 - 5;

163 
box_x
 = (
width
 - 
li°_width
) / 2 - 1;

166 
li°
 = 
	`subwö
(
dülog
, 
li°_height
, 
li°_width
, 
y
 + 
box_y
 + 1,

167 
x
 + 
box_x
 + 1);

169 
	`key∑d
(
li°
, 
TRUE
);

172 
	`døw_box
(
dülog
, 
box_y
, 
box_x
, 
li°_height
 + 2, 
li°_width
 + 2,

173 
míubox_b‹dî_©å
, 
míubox_©å
);

176 
check_x
 = 0;

177 
i
 = 0; i < 
ôem_no
; i++)

178 
check_x
 = 
	`MAX
(check_x, +
	`°æí
(
ôems
[
i
 * 3 + 1]) + 4);

180 
check_x
 = (
li°_width
 - check_x) / 2;

181 
ôem_x
 = 
check_x
 + 4;

183 i‡(
choi˚
 >
li°_height
) {

184 
s¸ﬁl
 = 
choi˚
 - 
li°_height
 + 1;

185 
choi˚
 -
s¸ﬁl
;

189 
i
 = 0; i < 
max_choi˚
; i++) {

190 
	`¥öt_ôem
(
li°
, 
ôems
[(
s¸ﬁl
 + 
i
) * 3 + 1],

191 
°©us
[
i
 + 
s¸ﬁl
], i, i =
choi˚
);

194 
	`¥öt_¨rows
(
dülog
, 
choi˚
, 
ôem_no
, 
s¸ﬁl
,

195 
box_y
, 
box_x
 + 
check_x
 + 5, 
li°_height
);

197 
	`¥öt_buâ⁄s
(
dülog
, 
height
, 
width
, 0);

199 
	`wnouåe‰esh
(
dülog
);

200 
	`wnouåe‰esh
(
li°
);

201 
	`doupd©e
();

203 
key
 !
ESC
) {

204 
key
 = 
	`wgëch
(
dülog
);

206 
i
 = 0; i < 
max_choi˚
; i++)

207 i‡(
	`touµî
(
key
) ==

208 
	`touµî
(
ôems
[(
s¸ﬁl
 + 
i
) * 3 + 1][0]))

211 i‡(
i
 < 
max_choi˚
 || 
key
 =
KEY_UP
 || key =
KEY_DOWN
 ||

212 
key
 == '+' || key == '-') {

213 i‡(
key
 =
KEY_UP
 || key == '-') {

214 i‡(!
choi˚
) {

215 i‡(!
s¸ﬁl
)

218 i‡(
li°_height
 > 1) {

220 
	`¥öt_ôem
(
li°
, 
ôems
[
s¸ﬁl
 * 3 + 1],

221 
°©us
[
s¸ﬁl
], 0, 
FALSE
);

222 
	`s¸ﬁlok
(
li°
, 
TRUE
);

223 
	`ws¸l
(
li°
, -1);

224 
	`s¸ﬁlok
(
li°
, 
FALSE
);

226 
s¸ﬁl
--;

227 
	`¥öt_ôem
(
li°
, 
ôems
[
s¸ﬁl
 * 3 + 1], 
°©us
[s¸ﬁl], 0, 
TRUE
);

228 
	`¥öt_¨rows
(
dülog
, 
choi˚
, 
ôem_no
,

229 
s¸ﬁl
, 
box_y
, 
box_x
 + 
check_x
 + 5, 
li°_height
);

231 
	`wnouåe‰esh
(
dülog
);

232 
	`wª‰esh
(
li°
);

236 
i
 = 
choi˚
 - 1;

237 } i‡(
key
 =
KEY_DOWN
 || key == '+') {

238 i‡(
choi˚
 =
max_choi˚
 - 1) {

239 i‡(
s¸ﬁl
 + 
choi˚
 >
ôem_no
 - 1)

242 i‡(
li°_height
 > 1) {

244 
	`¥öt_ôem
(
li°
, 
ôems
[(
s¸ﬁl
 + 
max_choi˚
 - 1) * 3 + 1],

245 
°©us
[
s¸ﬁl
 + 
max_choi˚
 - 1],

246 
max_choi˚
 - 1, 
FALSE
);

247 
	`s¸ﬁlok
(
li°
, 
TRUE
);

248 
	`ws¸l
(
li°
, 1);

249 
	`s¸ﬁlok
(
li°
, 
FALSE
);

251 
s¸ﬁl
++;

252 
	`¥öt_ôem
(
li°
, 
ôems
[(
s¸ﬁl
 + 
max_choi˚
 - 1) * 3 + 1],

253 
°©us
[
s¸ﬁl
 + 
max_choi˚
 - 1], max_choi˚ - 1, 
TRUE
);

255 
	`¥öt_¨rows
(
dülog
, 
choi˚
, 
ôem_no
,

256 
s¸ﬁl
, 
box_y
, 
box_x
 + 
check_x
 + 5, 
li°_height
);

258 
	`wnouåe‰esh
(
dülog
);

259 
	`wª‰esh
(
li°
);

263 
i
 = 
choi˚
 + 1;

265 i‡(
i
 !
choi˚
) {

267 
	`¥öt_ôem
(
li°
, 
ôems
[(
s¸ﬁl
 + 
choi˚
) * 3 + 1],

268 
°©us
[
s¸ﬁl
 + 
choi˚
], choi˚, 
FALSE
);

270 
choi˚
 = 
i
;

271 
	`¥öt_ôem
(
li°
, 
ôems
[(
s¸ﬁl
 + 
choi˚
) * 3 + 1],

272 
°©us
[
s¸ﬁl
 + 
choi˚
], choi˚, 
TRUE
);

273 
	`wnouåe‰esh
(
dülog
);

274 
	`wª‰esh
(
li°
);

278 
key
) {

282 
	`Ârötf
(
°dîr
, "%s", 
ôems
[(
s¸ﬁl
 + 
choi˚
) * 3]);

283 
	`dñwö
(
dülog
);

284 
	`‰ì
(
°©us
);

286 
TAB
:

287 
KEY_LEFT
:

288 
KEY_RIGHT
:

289 
buâ⁄
 = ((
key
 =
KEY_LEFT
 ? --button : ++button) < 0)

290 ? 1 : (
buâ⁄
 > 1 ? 0 : button);

292 
	`¥öt_buâ⁄s
(
dülog
, 
height
, 
width
, 
buâ⁄
);

293 
	`wª‰esh
(
dülog
);

299 i‡(!
buâ⁄
) {

300 i‡(!
°©us
[
s¸ﬁl
 + 
choi˚
]) {

301 
i
 = 0; i < 
ôem_no
; i++)

302 
°©us
[
i
] = 0;

303 
°©us
[
s¸ﬁl
 + 
choi˚
] = 1;

304 
i
 = 0; i < 
max_choi˚
; i++)

305 
	`¥öt_ôem
(
li°
, 
ôems
[(
s¸ﬁl
 + 
i
) * 3 + 1],

306 
°©us
[
s¸ﬁl
 + 
i
], i, i =
choi˚
);

308 
	`wnouåe‰esh
(
dülog
);

309 
	`wª‰esh
(
li°
);

311 
i
 = 0; i < 
ôem_no
; i++)

312 i‡(
°©us
[
i
])

313 
	`Ârötf
(
°dîr
, "%s", 
ôems
[
i
 * 3]);

315 
	`Ârötf
(
°dîr
, "%s", 
ôems
[(
s¸ﬁl
 + 
choi˚
) * 3]);

316 
	`dñwö
(
dülog
);

317 
	`‰ì
(
°©us
);

318  
buâ⁄
;

321 
key
 = 
ESC
;

322 
ESC
:

327 
	`doupd©e
();

330 
	`dñwö
(
dülog
);

331 
	`‰ì
(
°©us
);

333 
	}
}

	@lxdialog/colors.h

28 
	#SCREEN_FG
 
COLOR_CYAN


	)

29 
	#SCREEN_BG
 
COLOR_BLUE


	)

30 
	#SCREEN_HL
 
TRUE


	)

32 
	#SHADOW_FG
 
COLOR_BLACK


	)

33 
	#SHADOW_BG
 
COLOR_BLACK


	)

34 
	#SHADOW_HL
 
TRUE


	)

36 
	#DIALOG_FG
 
COLOR_BLACK


	)

37 
	#DIALOG_BG
 
COLOR_WHITE


	)

38 
	#DIALOG_HL
 
FALSE


	)

40 
	#TITLE_FG
 
COLOR_YELLOW


	)

41 
	#TITLE_BG
 
COLOR_WHITE


	)

42 
	#TITLE_HL
 
TRUE


	)

44 
	#BORDER_FG
 
COLOR_WHITE


	)

45 
	#BORDER_BG
 
COLOR_WHITE


	)

46 
	#BORDER_HL
 
TRUE


	)

48 
	#BUTTON_ACTIVE_FG
 
COLOR_WHITE


	)

49 
	#BUTTON_ACTIVE_BG
 
COLOR_BLUE


	)

50 
	#BUTTON_ACTIVE_HL
 
TRUE


	)

52 
	#BUTTON_INACTIVE_FG
 
COLOR_BLACK


	)

53 
	#BUTTON_INACTIVE_BG
 
COLOR_WHITE


	)

54 
	#BUTTON_INACTIVE_HL
 
FALSE


	)

56 
	#BUTTON_KEY_ACTIVE_FG
 
COLOR_WHITE


	)

57 
	#BUTTON_KEY_ACTIVE_BG
 
COLOR_BLUE


	)

58 
	#BUTTON_KEY_ACTIVE_HL
 
TRUE


	)

60 
	#BUTTON_KEY_INACTIVE_FG
 
COLOR_RED


	)

61 
	#BUTTON_KEY_INACTIVE_BG
 
COLOR_WHITE


	)

62 
	#BUTTON_KEY_INACTIVE_HL
 
FALSE


	)

64 
	#BUTTON_LABEL_ACTIVE_FG
 
COLOR_YELLOW


	)

65 
	#BUTTON_LABEL_ACTIVE_BG
 
COLOR_BLUE


	)

66 
	#BUTTON_LABEL_ACTIVE_HL
 
TRUE


	)

68 
	#BUTTON_LABEL_INACTIVE_FG
 
COLOR_BLACK


	)

69 
	#BUTTON_LABEL_INACTIVE_BG
 
COLOR_WHITE


	)

70 
	#BUTTON_LABEL_INACTIVE_HL
 
TRUE


	)

72 
	#INPUTBOX_FG
 
COLOR_BLACK


	)

73 
	#INPUTBOX_BG
 
COLOR_WHITE


	)

74 
	#INPUTBOX_HL
 
FALSE


	)

76 
	#INPUTBOX_BORDER_FG
 
COLOR_BLACK


	)

77 
	#INPUTBOX_BORDER_BG
 
COLOR_WHITE


	)

78 
	#INPUTBOX_BORDER_HL
 
FALSE


	)

80 
	#SEARCHBOX_FG
 
COLOR_BLACK


	)

81 
	#SEARCHBOX_BG
 
COLOR_WHITE


	)

82 
	#SEARCHBOX_HL
 
FALSE


	)

84 
	#SEARCHBOX_TITLE_FG
 
COLOR_YELLOW


	)

85 
	#SEARCHBOX_TITLE_BG
 
COLOR_WHITE


	)

86 
	#SEARCHBOX_TITLE_HL
 
TRUE


	)

88 
	#SEARCHBOX_BORDER_FG
 
COLOR_WHITE


	)

89 
	#SEARCHBOX_BORDER_BG
 
COLOR_WHITE


	)

90 
	#SEARCHBOX_BORDER_HL
 
TRUE


	)

92 
	#POSITION_INDICATOR_FG
 
COLOR_YELLOW


	)

93 
	#POSITION_INDICATOR_BG
 
COLOR_WHITE


	)

94 
	#POSITION_INDICATOR_HL
 
TRUE


	)

96 
	#MENUBOX_FG
 
COLOR_BLACK


	)

97 
	#MENUBOX_BG
 
COLOR_WHITE


	)

98 
	#MENUBOX_HL
 
FALSE


	)

100 
	#MENUBOX_BORDER_FG
 
COLOR_WHITE


	)

101 
	#MENUBOX_BORDER_BG
 
COLOR_WHITE


	)

102 
	#MENUBOX_BORDER_HL
 
TRUE


	)

104 
	#ITEM_FG
 
COLOR_BLACK


	)

105 
	#ITEM_BG
 
COLOR_WHITE


	)

106 
	#ITEM_HL
 
FALSE


	)

108 
	#ITEM_SELECTED_FG
 
COLOR_WHITE


	)

109 
	#ITEM_SELECTED_BG
 
COLOR_BLUE


	)

110 
	#ITEM_SELECTED_HL
 
TRUE


	)

112 
	#TAG_FG
 
COLOR_YELLOW


	)

113 
	#TAG_BG
 
COLOR_WHITE


	)

114 
	#TAG_HL
 
TRUE


	)

116 
	#TAG_SELECTED_FG
 
COLOR_YELLOW


	)

117 
	#TAG_SELECTED_BG
 
COLOR_BLUE


	)

118 
	#TAG_SELECTED_HL
 
TRUE


	)

120 
	#TAG_KEY_FG
 
COLOR_YELLOW


	)

121 
	#TAG_KEY_BG
 
COLOR_WHITE


	)

122 
	#TAG_KEY_HL
 
TRUE


	)

124 
	#TAG_KEY_SELECTED_FG
 
COLOR_YELLOW


	)

125 
	#TAG_KEY_SELECTED_BG
 
COLOR_BLUE


	)

126 
	#TAG_KEY_SELECTED_HL
 
TRUE


	)

128 
	#CHECK_FG
 
COLOR_BLACK


	)

129 
	#CHECK_BG
 
COLOR_WHITE


	)

130 
	#CHECK_HL
 
FALSE


	)

132 
	#CHECK_SELECTED_FG
 
COLOR_WHITE


	)

133 
	#CHECK_SELECTED_BG
 
COLOR_BLUE


	)

134 
	#CHECK_SELECTED_HL
 
TRUE


	)

136 
	#UARROW_FG
 
COLOR_GREEN


	)

137 
	#UARROW_BG
 
COLOR_WHITE


	)

138 
	#UARROW_HL
 
TRUE


	)

140 
	#DARROW_FG
 
COLOR_GREEN


	)

141 
	#DARROW_BG
 
COLOR_WHITE


	)

142 
	#DARROW_HL
 
TRUE


	)

146 
	#C_ATTR
(
x
,
y
Ë((x ? 
A_BOLD
 : 0Ë| 
	`COLOR_PAIR
((y)))

	)

147 
	#COLOR_NAME_LEN
 10

	)

148 
	#COLOR_COUNT
 8

	)

154 
cﬁ‹_èbÀ
[][3];

	@lxdialog/dialog.h

21 
	~<sys/ty≥s.h
>

22 
	~<f˙é.h
>

23 
	~<uni°d.h
>

24 
	~<˘y≥.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

28 #ifde‡
__sun__


29 
	#CURS_MACROS


	)

31 #ö˛udê
CURSES_LOC


41 #i‡
deföed
(
NCURSES_VERSION
Ë&& deföed(
_NEED_WRAP
Ë&& !deföed(
GCC_PRINTFLIKE
)

42 
	#OLD_NCURSES
 1

	)

43 #unde‡
wbkgd£t


44 
	#wbkgd£t
(
w
,
p
Ë

	)

46 
	#OLD_NCURSES
 0

	)

49 
	#TR
(
∑øms
Ë
_åa˚f
 
	)
params

51 
	#ESC
 27

	)

52 
	#TAB
 9

	)

53 
	#MAX_LEN
 2048

	)

54 
	#BUF_SIZE
 (10*1024)

	)

55 
	#MIN
(
x
,
y
Ë(x < y ? x : y)

	)

56 
	#MAX
(
x
,
y
Ë(x > y ? x : y)

	)

58 #i‚de‡
ACS_ULCORNER


59 
	#ACS_ULCORNER
 '+'

	)

61 #i‚de‡
ACS_LLCORNER


62 
	#ACS_LLCORNER
 '+'

	)

64 #i‚de‡
ACS_URCORNER


65 
	#ACS_URCORNER
 '+'

	)

67 #i‚de‡
ACS_LRCORNER


68 
	#ACS_LRCORNER
 '+'

	)

70 #i‚de‡
ACS_HLINE


71 
	#ACS_HLINE
 '-'

	)

73 #i‚de‡
ACS_VLINE


74 
	#ACS_VLINE
 '|'

	)

76 #i‚de‡
ACS_LTEE


77 
	#ACS_LTEE
 '+'

	)

79 #i‚de‡
ACS_RTEE


80 
	#ACS_RTEE
 '+'

	)

82 #i‚de‡
ACS_UARROW


83 
	#ACS_UARROW
 '^'

	)

85 #i‚de‡
ACS_DARROW


86 
	#ACS_DARROW
 'v'

	)

92 
	#s¸ìn_©å
 
©åibuãs
[0]

	)

93 
	#shadow_©å
 
©åibuãs
[1]

	)

94 
	#dülog_©å
 
©åibuãs
[2]

	)

95 
	#tôÀ_©å
 
©åibuãs
[3]

	)

96 
	#b‹dî_©å
 
©åibuãs
[4]

	)

97 
	#buâ⁄_a˘ive_©å
 
©åibuãs
[5]

	)

98 
	#buâ⁄_öa˘ive_©å
 
©åibuãs
[6]

	)

99 
	#buâ⁄_key_a˘ive_©å
 
©åibuãs
[7]

	)

100 
	#buâ⁄_key_öa˘ive_©å
 
©åibuãs
[8]

	)

101 
	#buâ⁄_œbñ_a˘ive_©å
 
©åibuãs
[9]

	)

102 
	#buâ⁄_œbñ_öa˘ive_©å
 
©åibuãs
[10]

	)

103 
	#öputbox_©å
 
©åibuãs
[11]

	)

104 
	#öputbox_b‹dî_©å
 
©åibuãs
[12]

	)

105 
	#£¨chbox_©å
 
©åibuãs
[13]

	)

106 
	#£¨chbox_tôÀ_©å
 
©åibuãs
[14]

	)

107 
	#£¨chbox_b‹dî_©å
 
©åibuãs
[15]

	)

108 
	#posôi⁄_ödiˇt‹_©å
 
©åibuãs
[16]

	)

109 
	#míubox_©å
 
©åibuãs
[17]

	)

110 
	#míubox_b‹dî_©å
 
©åibuãs
[18]

	)

111 
	#ôem_©å
 
©åibuãs
[19]

	)

112 
	#ôem_£À˘ed_©å
 
©åibuãs
[20]

	)

113 
	#èg_©å
 
©åibuãs
[21]

	)

114 
	#èg_£À˘ed_©å
 
©åibuãs
[22]

	)

115 
	#èg_key_©å
 
©åibuãs
[23]

	)

116 
	#èg_key_£À˘ed_©å
 
©åibuãs
[24]

	)

117 
	#check_©å
 
©åibuãs
[25]

	)

118 
	#check_£À˘ed_©å
 
©åibuãs
[26]

	)

119 
	#u¨row_©å
 
©åibuãs
[27]

	)

120 
	#d¨row_©å
 
©åibuãs
[28]

	)

123 
	#ATTRIBUTE_COUNT
 29

	)

128 
boﬁ
 
u£_cﬁ‹s
;

129 
boﬁ
 
u£_shadow
;

131 
chty≥
 
©åibuãs
[];

133 c⁄° *
backtôÀ
;

138 
¸óã_rc
(c⁄° *
fûíame
);

139 
∑r£_rc
();

141 
öô_dülog
();

142 
íd_dülog
();

143 
©å_˛ór
(
WINDOW
 * 
wö
, 
height
, 
width
, 
chty≥
 
©å
);

144 
dülog_˛ór
();

145 
cﬁ‹_£tup
();

146 
¥öt_autowøp
(
WINDOW
 * 
wö
, c⁄° *
¥om±
, 
width
, 
y
, 
x
);

147 
¥öt_buâ⁄
(
WINDOW
 * 
wö
, c⁄° *
œbñ
, 
y
, 
x
, 
£À˘ed
);

148 
¥öt_tôÀ
(
WINDOW
 *
dülog
, c⁄° *
tôÀ
, 
width
);

149 
døw_box
(
WINDOW
 * 
wö
, 
y
, 
x
, 
height
, 
width
, 
chty≥
 
box
,

150 
chty≥
 
b‹dî
);

151 
døw_shadow
(
WINDOW
 * 
wö
, 
y
, 
x
, 
height
, 
width
);

153 
fú°_Æpha
(c⁄° *
°rög
, c⁄° *
exem±
);

154 
dülog_ye¢o
(c⁄° *
tôÀ
, c⁄° *
¥om±
, 
height
, 
width
);

155 
dülog_msgbox
(c⁄° *
tôÀ
, c⁄° *
¥om±
, 
height
,

156 
width
, 
∑u£
);

157 
dülog_ãxtbox
(c⁄° *
tôÀ
, c⁄° *
fûe
, 
height
, 
width
);

158 
dülog_míu
(c⁄° *
tôÀ
, c⁄° *
¥om±
, 
height
, 
width
,

159 
míu_height
, c⁄° *
choi˚
, 
ôem_no
,

160 c⁄° *c⁄° *
ôems
);

161 
dülog_checkli°
(c⁄° *
tôÀ
, c⁄° *
¥om±
, 
height
,

162 
width
, 
li°_height
, 
ôem_no
,

163 c⁄° *c⁄° *
ôems
);

164 
dülog_öput_ªsu…
[];

165 
dülog_öputbox
(c⁄° *
tôÀ
, c⁄° *
¥om±
, 
height
,

166 
width
, c⁄° *
öô
);

177 
	#M_EVENT
 (
KEY_MAX
+1)

	)

	@lxdialog/inputbox.c

22 
	~"dülog.h
"

24 
	gdülog_öput_ªsu…
[
MAX_LEN
 + 1];

29 
	$¥öt_buâ⁄s
(
WINDOW
 * 
dülog
, 
height
, 
width
, 
£À˘ed
)

31 
x
 = 
width
 / 2 - 11;

32 
y
 = 
height
 - 2;

34 
	`¥öt_buâ⁄
(
dülog
, " Ok ", 
y
, 
x
, 
£À˘ed
 == 0);

35 
	`¥öt_buâ⁄
(
dülog
, " Hñ∞", 
y
, 
x
 + 14, 
£À˘ed
 == 1);

37 
	`wmove
(
dülog
, 
y
, 
x
 + 1 + 14 * 
£À˘ed
);

38 
	`wª‰esh
(
dülog
);

39 
	}
}

44 
	$dülog_öputbox
(c⁄° *
tôÀ
, c⁄° *
¥om±
, 
height
, 
width
,

45 c⁄° *
öô
)

47 
i
, 
x
, 
y
, 
box_y
, 
box_x
, 
box_width
;

48 
öput_x
 = 0, 
s¸ﬁl
 = 0, 
key
 = 0, 
buâ⁄
 = -1;

49 *
ö°r
 = 
dülog_öput_ªsu…
;

50 
WINDOW
 *
dülog
;

53 
x
 = (
COLS
 - 
width
) / 2;

54 
y
 = (
LINES
 - 
height
) / 2;

56 
	`døw_shadow
(
°ds¸
, 
y
, 
x
, 
height
, 
width
);

58 
dülog
 = 
	`√wwö
(
height
, 
width
, 
y
, 
x
);

59 
	`key∑d
(
dülog
, 
TRUE
);

61 
	`døw_box
(
dülog
, 0, 0, 
height
, 
width
, 
dülog_©å
, 
b‹dî_©å
);

62 
	`w©å£t
(
dülog
, 
b‹dî_©å
);

63 
	`mvwaddch
(
dülog
, 
height
 - 3, 0, 
ACS_LTEE
);

64 
i
 = 0; i < 
width
 - 2; i++)

65 
	`waddch
(
dülog
, 
ACS_HLINE
);

66 
	`w©å£t
(
dülog
, 
dülog_©å
);

67 
	`waddch
(
dülog
, 
ACS_RTEE
);

69 
	`¥öt_tôÀ
(
dülog
, 
tôÀ
, 
width
);

71 
	`w©å£t
(
dülog
, 
dülog_©å
);

72 
	`¥öt_autowøp
(
dülog
, 
¥om±
, 
width
 - 2, 1, 3);

75 
box_width
 = 
width
 - 6;

76 
	`gëyx
(
dülog
, 
y
, 
x
);

77 
box_y
 = 
y
 + 2;

78 
box_x
 = (
width
 - 
box_width
) / 2;

79 
	`døw_box
(
dülog
, 
y
 + 1, 
box_x
 - 1, 3, 
box_width
 + 2, 
b‹dî_©å
, 
dülog_©å
);

81 
	`¥öt_buâ⁄s
(
dülog
, 
height
, 
width
, 0);

84 
	`wmove
(
dülog
, 
box_y
, 
box_x
);

85 
	`w©å£t
(
dülog
, 
öputbox_©å
);

87 i‡(!
öô
)

88 
ö°r
[0] = '\0';

90 
	`°r˝y
(
ö°r
, 
öô
);

92 
öput_x
 = 
	`°æí
(
ö°r
);

94 i‡(
öput_x
 >
box_width
) {

95 
s¸ﬁl
 = 
öput_x
 - 
box_width
 + 1;

96 
öput_x
 = 
box_width
 - 1;

97 
i
 = 0; i < 
box_width
 - 1; i++)

98 
	`waddch
(
dülog
, 
ö°r
[
s¸ﬁl
 + 
i
]);

100 
	`wadd°r
(
dülog
, 
ö°r
);

103 
	`wmove
(
dülog
, 
box_y
, 
box_x
 + 
öput_x
);

105 
	`wª‰esh
(
dülog
);

107 
key
 !
ESC
) {

108 
key
 = 
	`wgëch
(
dülog
);

110 i‡(
buâ⁄
 == -1) {

111 
key
) {

112 
TAB
:

113 
KEY_UP
:

114 
KEY_DOWN
:

116 
KEY_LEFT
:

118 
KEY_RIGHT
:

120 
KEY_BACKSPACE
:

122 i‡(
öput_x
 || 
s¸ﬁl
) {

123 
	`w©å£t
(
dülog
, 
öputbox_©å
);

124 i‡(!
öput_x
) {

125 
s¸ﬁl
 = s¸ﬁ»< 
box_width
 - 1 ? 0 : scroll - (box_width - 1);

126 
	`wmove
(
dülog
, 
box_y
, 
box_x
);

127 
i
 = 0; i < 
box_width
; i++)

128 
	`waddch
(
dülog
,

129 
ö°r
[
s¸ﬁl
 + 
öput_x
 + 
i
] ?

130 
ö°r
[
s¸ﬁl
 + 
öput_x
 + 
i
] : ' ');

131 
öput_x
 = 
	`°æí
(
ö°r
Ë- 
s¸ﬁl
;

133 
öput_x
--;

134 
ö°r
[
s¸ﬁl
 + 
öput_x
] = '\0';

135 
	`mvwaddch
(
dülog
, 
box_y
, 
öput_x
 + 
box_x
, ' ');

136 
	`wmove
(
dülog
, 
box_y
, 
öput_x
 + 
box_x
);

137 
	`wª‰esh
(
dülog
);

141 i‡(
key
 < 0x100 && 
	`i•röt
(key)) {

142 i‡(
s¸ﬁl
 + 
öput_x
 < 
MAX_LEN
) {

143 
	`w©å£t
(
dülog
, 
öputbox_©å
);

144 
ö°r
[
s¸ﬁl
 + 
öput_x
] = 
key
;

145 
ö°r
[
s¸ﬁl
 + 
öput_x
 + 1] = '\0';

146 i‡(
öput_x
 =
box_width
 - 1) {

147 
s¸ﬁl
++;

148 
	`wmove
(
dülog
, 
box_y
, 
box_x
);

149 
i
 = 0; i < 
box_width
 - 1; i++)

150 
	`waddch
(
dülog
, 
ö°r
 [
s¸ﬁl
 + 
i
]);

152 
	`wmove
(
dülog
, 
box_y
, 
öput_x
++ + 
box_x
);

153 
	`waddch
(
dülog
, 
key
);

155 
	`wª‰esh
(
dülog
);

157 
	`Êash
();

162 
key
) {

165 
	`dñwö
(
dülog
);

169 
	`dñwö
(
dülog
);

171 
KEY_UP
:

172 
KEY_LEFT
:

173 
buâ⁄
) {

175 
buâ⁄
 = 1;

176 
	`¥öt_buâ⁄s
(
dülog
, 
height
, 
width
, 1);

179 
buâ⁄
 = -1;

180 
	`¥öt_buâ⁄s
(
dülog
, 
height
, 
width
, 0);

181 
	`wmove
(
dülog
, 
box_y
, 
box_x
 + 
öput_x
);

182 
	`wª‰esh
(
dülog
);

185 
buâ⁄
 = 0;

186 
	`¥öt_buâ⁄s
(
dülog
, 
height
, 
width
, 0);

190 
TAB
:

191 
KEY_DOWN
:

192 
KEY_RIGHT
:

193 
buâ⁄
) {

195 
buâ⁄
 = 0;

196 
	`¥öt_buâ⁄s
(
dülog
, 
height
, 
width
, 0);

199 
buâ⁄
 = 1;

200 
	`¥öt_buâ⁄s
(
dülog
, 
height
, 
width
, 1);

203 
buâ⁄
 = -1;

204 
	`¥öt_buâ⁄s
(
dülog
, 
height
, 
width
, 0);

205 
	`wmove
(
dülog
, 
box_y
, 
box_x
 + 
öput_x
);

206 
	`wª‰esh
(
dülog
);

212 
	`dñwö
(
dülog
);

213  (
buâ⁄
 == -1 ? 0 : button);

216 
key
 = 
ESC
;

217 
ESC
:

222 
	`dñwö
(
dülog
);

224 
	}
}

	@lxdialog/lxdialog.c

22 
	~"dülog.h
"

24 
Ußge
(c⁄° *
«me
);

26 (
	tjum≥rFn
Ë(c⁄° *
	ttôÀ
, 
	t¨gc
, c⁄° *c⁄° *
	t¨gv
);

28 
	sMode
 {

29 *
«me
;

30 
¨gmö
, 
¨gmax
, 
¨gmod
;

31 
jum≥rFn
 *
jum≥r
;

34 
jum≥rFn
 
j_míu
, 
j_ødiﬁi°
, 
j_ye¢o
, 
j_ãxtbox
, 
j_öputbox
;

35 
jum≥rFn
 
j_msgbox
, 
j_öfobox
;

37 
Mode
 
modes
[] = {

38 {"--míu", 9, 0, 3, 
j_míu
},

39 {"--ødiﬁi°", 9, 0, 3, 
j_ødiﬁi°
},

40 {"--ye¢o", 5, 5, 1, 
j_ye¢o
},

41 {"--ãxtbox", 5, 5, 1, 
j_ãxtbox
},

42 {"--öputbox", 5, 6, 1, 
j_öputbox
},

43 {"--msgbox", 5, 5, 1, 
j_msgbox
},

44 {"--öfobox", 5, 5, 1, 
j_öfobox
},

45 {
NULL
, 0, 0, 0, NULL}

46 
	}
};

48 
Mode
 *
	gmodePå
;

50 #ifde‡
LOCALE


51 
	~<loˇÀ.h
>

54 
	$maö
(
¨gc
, c⁄° *c⁄° *
¨gv
)

56 
off£t
 = 0, 
›t_˛ór
 = 0, 
íd_comm⁄_›ts
 = 0, 
ªtvÆ
;

57 c⁄° *
tôÀ
 = 
NULL
;

59 #ifde‡
LOCALE


60 ()
	`£éoˇÀ
(
LC_ALL
, "");

63 #ifde‡
TRACE


64 
	`åa˚
(
TRACE_CALLS
 | 
TRACE_UPDATE
);

66 i‡(
¨gc
 < 2) {

67 
	`Ußge
(
¨gv
[0]);

68 
	`exô
(-1);

71 
off£t
 < 
¨gc
 - 1 && !
íd_comm⁄_›ts
) {

72 i‡(!
	`°rcmp
(
¨gv
[
off£t
 + 1], "--title")) {

73 i‡(
¨gc
 - 
off£t
 < 3 || 
tôÀ
 !
NULL
) {

74 
	`Ußge
(
¨gv
[0]);

75 
	`exô
(-1);

77 
tôÀ
 = 
¨gv
[
off£t
 + 2];

78 
off£t
 += 2;

80 } i‡(!
	`°rcmp
(
¨gv
[
off£t
 + 1], "--backtitle")) {

81 i‡(
backtôÀ
 !
NULL
) {

82 
	`Ußge
(
¨gv
[0]);

83 
	`exô
(-1);

85 
backtôÀ
 = 
¨gv
[
off£t
 + 2];

86 
off£t
 += 2;

88 } i‡(!
	`°rcmp
(
¨gv
[
off£t
 + 1], "--clear")) {

89 i‡(
›t_˛ór
) {

90 
	`Ußge
(
¨gv
[0]);

91 
	`exô
(-1);

92 } i‡(
¨gc
 == 2) {

93 
	`öô_dülog
();

94 
	`ª‰esh
();

95 
	`íd_dülog
();

98 
›t_˛ór
 = 1;

99 
off£t
++;

102 
íd_comm⁄_›ts
 = 1;

105 i‡(
¨gc
 - 1 =
off£t
) {

106 
	`Ußge
(
¨gv
[0]);

107 
	`exô
(-1);

111 
modePå
 = 
modes
; modePå->
«me
; modePtr++)

112 i‡(!
	`°rcmp
(
¨gv
[
off£t
 + 1], 
modePå
->
«me
))

115 i‡(!
modePå
->
«me
)

116 
	`Ußge
(
¨gv
[0]);

117 i‡(
¨gc
 - 
off£t
 < 
modePå
->
¨gmö
)

118 
	`Ußge
(
¨gv
[0]);

119 i‡(
modePå
->
¨gmax
 && 
¨gc
 - 
off£t
 > modePtr->argmax)

120 
	`Ußge
(
¨gv
[0]);

122 
	`öô_dülog
();

123 
ªtvÆ
 = (*(
modePå
->
jum≥r
)Ë(
tôÀ
, 
¨gc
 - 
off£t
, 
¨gv
 + offset);

125 i‡(
›t_˛ór
) {

126 
	`©å_˛ór
(
°ds¸
, 
LINES
, 
COLS
, 
s¸ìn_©å
);

127 
	`ª‰esh
();

129 
	`íd_dülog
();

131 
	`exô
(
ªtvÆ
);

132 
	}
}

137 
	$Ußge
(c⁄° *
«me
)

139 
	`Ârötf
(
°dîr
, "\
\ndülog, by SaviÿLam (œm836@cs.cuhk.hk).\
\¿Ö©ched by Stu¨àHîbîà(S.Hîbît@shef.ac.uk)\
\¿ modifõd/guâed f‹ u£á†®Löux kî√»c⁄figÅoﬁ by \
\¿ Wûlüm Rﬂdˇ∞‘ﬂdˇpw@cfw.com)\
\n\
\n* Di•œy dülog boxe†‰om shñ»s¸ùt†*\
\n\
\nUßge: %†--˛ór\
\¿ %†[--tôÀ <tôÀ>] [--backtôÀ <backtôÀ>] --˛ó∏<Box o±i⁄s>\
\n\
\nBox o±i⁄s:\
\n\
\¿ --míu <ãxt> <height> <width> <míu height> <èg1> <ôem1>...\
\¿ --ødiﬁi° <ãxt> <height> <width> <li° height> <èg1> <ôem1> <°©us1>...\
\¿ --ãxtbox <fûe> <height> <width>\
\¿ --öputbox <ãxt> <height> <width> [<öô>]\
\¿ --ye¢ÿ <ãxt> <height> <width>\
\n", 
«me
,Çame);

158 
	`exô
(-1);

159 
	}
}

165 
	$j_míu
(c⁄° *
t
, 
ac
, c⁄° *c⁄° *
av
)

167  
	`dülog_míu
(
t
, 
av
[2], 
	`©oi
(av[3]),átoi(av[4]),

168 
	`©oi
(
av
[5]),áv[6], (
ac
 - 6) / 2,áv + 7);

169 
	}
}

171 
	$j_ødiﬁi°
(c⁄° *
t
, 
ac
, c⁄° *c⁄° *
av
)

173  
	`dülog_checkli°
(
t
, 
av
[2], 
	`©oi
(av[3]),átoi(av[4]),

174 
	`©oi
(
av
[5]), (
ac
 - 6) / 3,áv + 6);

175 
	}
}

177 
	$j_ãxtbox
(c⁄° *
t
, 
ac
, c⁄° *c⁄° *
av
)

179  
	`dülog_ãxtbox
(
t
, 
av
[2], 
	`©oi
(av[3]),átoi(av[4]));

180 
	}
}

182 
	$j_ye¢o
(c⁄° *
t
, 
ac
, c⁄° *c⁄° *
av
)

184  
	`dülog_ye¢o
(
t
, 
av
[2], 
	`©oi
(av[3]),átoi(av[4]));

185 
	}
}

187 
	$j_öputbox
(c⁄° *
t
, 
ac
, c⁄° *c⁄° *
av
)

189 
ªt
 = 
	`dülog_öputbox
(
t
, 
av
[2], 
	`©oi
(av[3]),átoi(av[4]),

190 
ac
 =6 ? 
av
[5] : (*)
NULL
);

191 i‡(
ªt
 == 0)

192 
	`Ârötf
(
°dîr
, 
dülog_öput_ªsu…
);

193  
ªt
;

194 
	}
}

196 
	$j_msgbox
(c⁄° *
t
, 
ac
, c⁄° *c⁄° *
av
)

198  
	`dülog_msgbox
(
t
, 
av
[2], 
	`©oi
(av[3]),átoi(av[4]), 1);

199 
	}
}

201 
	$j_öfobox
(c⁄° *
t
, 
ac
, c⁄° *c⁄° *
av
)

203  
	`dülog_msgbox
(
t
, 
av
[2], 
	`©oi
(av[3]),átoi(av[4]), 0);

204 
	}
}

	@lxdialog/menubox.c

59 
	~"dülog.h
"

61 
	gmíu_width
, 
	gôem_x
;

66 
	$do_¥öt_ôem
(
WINDOW
 * 
wö
, c⁄° *
ôem
, 
choi˚
,

67 
£À˘ed
, 
hŸkey
)

69 
j
;

70 *
míu_ôem
 = 
	`mÆloc
(
míu_width
 + 1);

72 
	`°∫˝y
(
míu_ôem
, 
ôem
, 
míu_width
 - 
ôem_x
);

73 
míu_ôem
[
míu_width
] = 0;

74 
j
 = 
	`fú°_Æpha
(
míu_ôem
, "YyNnMmHh");

77 
	`w©å£t
(
wö
, 
míubox_©å
);

78 
	`wmove
(
wö
, 
choi˚
, 0);

79 #i‡
OLD_NCURSES


81 
i
;

82 
i
 = 0; i < 
míu_width
; i++)

83 
	`waddch
(
wö
, ' ');

86 
	`w˛π€ﬁ
(
wö
);

88 
	`w©å£t
(
wö
, 
£À˘ed
 ? 
ôem_£À˘ed_©å
 : 
ôem_©å
);

89 
	`mvwadd°r
(
wö
, 
choi˚
, 
ôem_x
, 
míu_ôem
);

90 i‡(
hŸkey
) {

91 
	`w©å£t
(
wö
, 
£À˘ed
 ? 
èg_key_£À˘ed_©å
 : 
èg_key_©å
);

92 
	`mvwaddch
(
wö
, 
choi˚
, 
ôem_x
 + 
j
, 
míu_ôem
[j]);

94 i‡(
£À˘ed
) {

95 
	`wmove
(
wö
, 
choi˚
, 
ôem_x
 + 1);

97 
	`‰ì
(
míu_ôem
);

98 
	`wª‰esh
(
wö
);

99 
	}
}

101 
	#¥öt_ôem
(
ödex
, 
choi˚
, 
£À˘ed
) \

103 
hŸkey
 = (
ôems
[(
ödex
) * 2][0] != ':'); \

104 
	`do_¥öt_ôem
(
míu
, 
ôems
[(
ödex
Ë* 2 + 1], 
choi˚
, 
£À˘ed
, 
hŸkey
); \

105 } 0)

	)

110 
	$¥öt_¨rows
(
WINDOW
 * 
wö
, 
ôem_no
, 
s¸ﬁl
, 
y
, 
x
,

111 
height
)

113 
cur_y
, 
cur_x
;

115 
	`gëyx
(
wö
, 
cur_y
, 
cur_x
);

117 
	`wmove
(
wö
, 
y
, 
x
);

119 i‡(
s¸ﬁl
 > 0) {

120 
	`w©å£t
(
wö
, 
u¨row_©å
);

121 
	`waddch
(
wö
, 
ACS_UARROW
);

122 
	`wadd°r
(
wö
, "(-)");

124 
	`w©å£t
(
wö
, 
míubox_©å
);

125 
	`waddch
(
wö
, 
ACS_HLINE
);

126 
	`waddch
(
wö
, 
ACS_HLINE
);

127 
	`waddch
(
wö
, 
ACS_HLINE
);

128 
	`waddch
(
wö
, 
ACS_HLINE
);

131 
y
 = y + 
height
 + 1;

132 
	`wmove
(
wö
, 
y
, 
x
);

133 
	`wª‰esh
(
wö
);

135 i‡((
height
 < 
ôem_no
Ë&& (
s¸ﬁl
 + height < item_no)) {

136 
	`w©å£t
(
wö
, 
d¨row_©å
);

137 
	`waddch
(
wö
, 
ACS_DARROW
);

138 
	`wadd°r
(
wö
, "(+)");

140 
	`w©å£t
(
wö
, 
míubox_b‹dî_©å
);

141 
	`waddch
(
wö
, 
ACS_HLINE
);

142 
	`waddch
(
wö
, 
ACS_HLINE
);

143 
	`waddch
(
wö
, 
ACS_HLINE
);

144 
	`waddch
(
wö
, 
ACS_HLINE
);

147 
	`wmove
(
wö
, 
cur_y
, 
cur_x
);

148 
	`wª‰esh
(
wö
);

149 
	}
}

154 
	$¥öt_buâ⁄s
(
WINDOW
 * 
wö
, 
height
, 
width
, 
£À˘ed
)

156 
x
 = 
width
 / 2 - 16;

157 
y
 = 
height
 - 2;

159 
	`¥öt_buâ⁄
(
wö
, "Sñe˘", 
y
, 
x
, 
£À˘ed
 == 0);

160 
	`¥öt_buâ⁄
(
wö
, " Exô ", 
y
, 
x
 + 12, 
£À˘ed
 == 1);

161 
	`¥öt_buâ⁄
(
wö
, " Hñ∞", 
y
, 
x
 + 24, 
£À˘ed
 == 2);

163 
	`wmove
(
wö
, 
y
, 
x
 + 1 + 12 * 
£À˘ed
);

164 
	`wª‰esh
(
wö
);

165 
	}
}

168 
	$do_s¸ﬁl
(
WINDOW
 *
wö
, *
s¸ﬁl
, 
n
)

171 
	`s¸ﬁlok
(
wö
, 
TRUE
);

172 
	`ws¸l
(
wö
, 
n
);

173 
	`s¸ﬁlok
(
wö
, 
FALSE
);

174 *
s¸ﬁl
 = *s¸ﬁ»+ 
n
;

175 
	`wª‰esh
(
wö
);

176 
	}
}

181 
	$dülog_míu
(c⁄° *
tôÀ
, c⁄° *
¥om±
, 
height
, 
width
,

182 
míu_height
, c⁄° *
cuºít
, 
ôem_no
,

183 c⁄° *c⁄° *
ôems
)

185 
i
, 
j
, 
x
, 
y
, 
box_x
, 
box_y
;

186 
key
 = 0, 
buâ⁄
 = 0, 
s¸ﬁl
 = 0, 
choi˚
 = 0;

187 
fú°_ôem
 = 0, 
max_choi˚
;

188 
WINDOW
 *
dülog
, *
míu
;

189 
FILE
 *
f
;

191 
max_choi˚
 = 
	`MIN
(
míu_height
, 
ôem_no
);

194 
x
 = (
COLS
 - 
width
) / 2;

195 
y
 = (
LINES
 - 
height
) / 2;

197 
	`døw_shadow
(
°ds¸
, 
y
, 
x
, 
height
, 
width
);

199 
dülog
 = 
	`√wwö
(
height
, 
width
, 
y
, 
x
);

200 
	`key∑d
(
dülog
, 
TRUE
);

202 
	`døw_box
(
dülog
, 0, 0, 
height
, 
width
, 
dülog_©å
, 
b‹dî_©å
);

203 
	`w©å£t
(
dülog
, 
b‹dî_©å
);

204 
	`mvwaddch
(
dülog
, 
height
 - 3, 0, 
ACS_LTEE
);

205 
i
 = 0; i < 
width
 - 2; i++)

206 
	`waddch
(
dülog
, 
ACS_HLINE
);

207 
	`w©å£t
(
dülog
, 
dülog_©å
);

208 
	`wbkgd£t
(
dülog
, 
dülog_©å
 & 
A_COLOR
);

209 
	`waddch
(
dülog
, 
ACS_RTEE
);

211 
	`¥öt_tôÀ
(
dülog
, 
tôÀ
, 
width
);

213 
	`w©å£t
(
dülog
, 
dülog_©å
);

214 
	`¥öt_autowøp
(
dülog
, 
¥om±
, 
width
 - 2, 1, 3);

216 
míu_width
 = 
width
 - 6;

217 
box_y
 = 
height
 - 
míu_height
 - 5;

218 
box_x
 = (
width
 - 
míu_width
) / 2 - 1;

221 
míu
 = 
	`subwö
(
dülog
, 
míu_height
, 
míu_width
,

222 
y
 + 
box_y
 + 1, 
x
 + 
box_x
 + 1);

223 
	`key∑d
(
míu
, 
TRUE
);

226 
	`døw_box
(
dülog
, 
box_y
, 
box_x
, 
míu_height
 + 2, 
míu_width
 + 2,

227 
míubox_b‹dî_©å
, 
míubox_©å
);

229 
ôem_x
 = (
míu_width
 - 70) / 2;

232 
i
 = 0; i < 
ôem_no
; i++)

233 i‡(
	`°rcmp
(
cuºít
, 
ôems
[
i
 * 2]) == 0)

234 
choi˚
 = 
i
;

237 i‡((
f
 = 
	`f›í
("lxdülog.s¸…mp", "r")Ë!
NULL
) {

238 i‡((
	`fsˇnf
(
f
, "%d\n", &
s¸ﬁl
Ë=1Ë&& (s¸ﬁ»<
choi˚
) &&

239 (
s¸ﬁl
 + 
max_choi˚
 > 
choi˚
) && (scroll >= 0) &&

240 (
s¸ﬁl
 + 
max_choi˚
 <
ôem_no
)) {

241 
fú°_ôem
 = 
s¸ﬁl
;

242 
choi˚
 = choi˚ - 
s¸ﬁl
;

243 
	`f˛o£
(
f
);

245 
s¸ﬁl
 = 0;

246 
	`ªmove
("lxdialog.scrltmp");

247 
	`f˛o£
(
f
);

248 
f
 = 
NULL
;

251 i‡((
choi˚
 >
max_choi˚
Ë|| (
f
 =
NULL
 && choice >= max_choice / 2)) {

252 i‡(
choi˚
 >
ôem_no
 - 
max_choi˚
 / 2)

253 
s¸ﬁl
 = 
fú°_ôem
 = 
ôem_no
 - 
max_choi˚
;

255 
s¸ﬁl
 = 
fú°_ôem
 = 
choi˚
 - 
max_choi˚
 / 2;

256 
choi˚
 = choi˚ - 
s¸ﬁl
;

260 
i
 = 0; i < 
max_choi˚
; i++) {

261 
	`¥öt_ôem
(
fú°_ôem
 + 
i
, i, i =
choi˚
);

264 
	`wnouåe‰esh
(
míu
);

266 
	`¥öt_¨rows
(
dülog
, 
ôem_no
, 
s¸ﬁl
,

267 
box_y
, 
box_x
 + 
ôem_x
 + 1, 
míu_height
);

269 
	`¥öt_buâ⁄s
(
dülog
, 
height
, 
width
, 0);

270 
	`wmove
(
míu
, 
choi˚
, 
ôem_x
 + 1);

271 
	`wª‰esh
(
míu
);

273 
key
 !
ESC
) {

274 
key
 = 
	`wgëch
(
míu
);

276 i‡(
key
 < 256 && 
	`ißÕha
(key))

277 
key
 = 
	`tﬁowî
(key);

279 i‡(
	`°rchr
("ynmh", 
key
))

280 
i
 = 
max_choi˚
;

282 
i
 = 
choi˚
 + 1; i < 
max_choi˚
; i++) {

283 
j
 = 
	`fú°_Æpha
(
ôems
[(
s¸ﬁl
 + 
i
) * 2 + 1], "YyNnMmHh");

284 i‡(
key
 =
	`tﬁowî
(
ôems
[(
s¸ﬁl
 + 
i
Ë* 2 + 1][
j
]))

287 i‡(
i
 =
max_choi˚
)

288 
i
 = 0; i < 
max_choi˚
; i++) {

289 
j
 = 
	`fú°_Æpha
(
ôems
 [(
s¸ﬁl
 + 
i
) * 2 + 1], "YyNnMmHh");

290 i‡(
key
 =
	`tﬁowî
(
ôems
[(
s¸ﬁl
 + 
i
Ë* 2 + 1][
j
]))

295 i‡(
i
 < 
max_choi˚
 ||

296 
key
 =
KEY_UP
 || key =
KEY_DOWN
 ||

297 
key
 == '-' || key == '+' ||

298 
key
 =
KEY_PPAGE
 || key =
KEY_NPAGE
) {

300 
	`¥öt_ôem
(
s¸ﬁl
 + 
choi˚
, choi˚, 
FALSE
);

302 i‡(
key
 =
KEY_UP
 || key == '-') {

303 i‡(
choi˚
 < 2 && 
s¸ﬁl
) {

305 
	`do_s¸ﬁl
(
míu
, &
s¸ﬁl
, -1);

307 
	`¥öt_ôem
(
s¸ﬁl
, 0, 
FALSE
);

309 
choi˚
 = 
	`MAX
(choice - 1, 0);

311 } i‡(
key
 =
KEY_DOWN
 || key == '+') {

312 
	`¥öt_ôem
(
s¸ﬁl
+
choi˚
, choi˚, 
FALSE
);

314 i‡((
choi˚
 > 
max_choi˚
 - 3) &&

315 (
s¸ﬁl
 + 
max_choi˚
 < 
ôem_no
)) {

317 
	`do_s¸ﬁl
(
míu
, &
s¸ﬁl
, 1);

319 
	`¥öt_ôem
(
s¸ﬁl
+
max_choi˚
 - 1,

320 
max_choi˚
 - 1, 
FALSE
);

322 
choi˚
 = 
	`MIN
(choi˚ + 1, 
max_choi˚
 - 1);

324 } i‡(
key
 =
KEY_PPAGE
) {

325 
	`s¸ﬁlok
(
míu
, 
TRUE
);

326 
i
 = 0; (ò< 
max_choi˚
); i++) {

327 i‡(
s¸ﬁl
 > 0) {

328 
	`do_s¸ﬁl
(
míu
, &
s¸ﬁl
, -1);

329 
	`¥öt_ôem
(
s¸ﬁl
, 0, 
FALSE
);

331 i‡(
choi˚
 > 0)

332 
choi˚
--;

336 } i‡(
key
 =
KEY_NPAGE
) {

337 
i
 = 0; (ò< 
max_choi˚
); i++) {

338 i‡(
s¸ﬁl
 + 
max_choi˚
 < 
ôem_no
) {

339 
	`do_s¸ﬁl
(
míu
, &
s¸ﬁl
, 1);

340 
	`¥öt_ôem
(
s¸ﬁl
+
max_choi˚
-1,

341 
max_choi˚
 - 1, 
FALSE
);

343 i‡(
choi˚
 + 1 < 
max_choi˚
)

344 
choi˚
++;

348 
choi˚
 = 
i
;

350 
	`¥öt_ôem
(
s¸ﬁl
 + 
choi˚
, choi˚, 
TRUE
);

352 
	`¥öt_¨rows
(
dülog
, 
ôem_no
, 
s¸ﬁl
,

353 
box_y
, 
box_x
 + 
ôem_x
 + 1, 
míu_height
);

355 
	`wnouåe‰esh
(
dülog
);

356 
	`wª‰esh
(
míu
);

361 
key
) {

362 
KEY_LEFT
:

363 
TAB
:

364 
KEY_RIGHT
:

365 
buâ⁄
 = ((
key
 =
KEY_LEFT
 ? --button : ++button) < 0)

366 ? 2 : (
buâ⁄
 > 2 ? 0 : button);

368 
	`¥öt_buâ⁄s
(
dülog
, 
height
, 
width
, 
buâ⁄
);

369 
	`wª‰esh
(
míu
);

378 i‡((
f
 = 
	`f›í
("lxdülog.s¸…mp", "w")Ë!
NULL
) {

379 
	`Ârötf
(
f
, "%d\n", 
s¸ﬁl
);

380 
	`f˛o£
(
f
);

382 
	`dñwö
(
dülog
);

383 
	`Ârötf
(
°dîr
, "%s\n", 
ôems
[(
s¸ﬁl
 + 
choi˚
) * 2]);

384 
key
) {

401 
buâ⁄
 = 2;

403 
	`dñwö
(
dülog
);

404 i‡(
buâ⁄
 == 2)

405 
	`Ârötf
(
°dîr
, "%s \"%s\"\n",

406 
ôems
[(
s¸ﬁl
 + 
choi˚
) * 2],

407 
ôems
[(
s¸ﬁl
 + 
choi˚
) * 2 + 1] +

408 
	`fú°_Æpha
(
ôems
 [(
s¸ﬁl
 + 
choi˚
) * 2 + 1], ""));

410 
	`Ârötf
(
°dîr
, "%s\n",

411 
ôems
[(
s¸ﬁl
 + 
choi˚
) * 2]);

413 
	`ªmove
("lxdialog.scrltmp");

414  
buâ⁄
;

417 
key
 = 
ESC
;

418 
ESC
:

423 
	`dñwö
(
dülog
);

424 
	`ªmove
("lxdialog.scrltmp");

426 
	}
}

	@lxdialog/msgbox.c

22 
	~"dülog.h
"

28 
	$dülog_msgbox
(c⁄° *
tôÀ
, c⁄° *
¥om±
, 
height
, 
width
,

29 
∑u£
)

31 
i
, 
x
, 
y
, 
key
 = 0;

32 
WINDOW
 *
dülog
;

35 
x
 = (
COLS
 - 
width
) / 2;

36 
y
 = (
LINES
 - 
height
) / 2;

38 
	`døw_shadow
(
°ds¸
, 
y
, 
x
, 
height
, 
width
);

40 
dülog
 = 
	`√wwö
(
height
, 
width
, 
y
, 
x
);

41 
	`key∑d
(
dülog
, 
TRUE
);

43 
	`døw_box
(
dülog
, 0, 0, 
height
, 
width
, 
dülog_©å
, 
b‹dî_©å
);

45 
	`¥öt_tôÀ
(
dülog
, 
tôÀ
, 
width
);

47 
	`w©å£t
(
dülog
, 
dülog_©å
);

48 
	`¥öt_autowøp
(
dülog
, 
¥om±
, 
width
 - 2, 1, 2);

50 i‡(
∑u£
) {

51 
	`w©å£t
(
dülog
, 
b‹dî_©å
);

52 
	`mvwaddch
(
dülog
, 
height
 - 3, 0, 
ACS_LTEE
);

53 
i
 = 0; i < 
width
 - 2; i++)

54 
	`waddch
(
dülog
, 
ACS_HLINE
);

55 
	`w©å£t
(
dülog
, 
dülog_©å
);

56 
	`waddch
(
dülog
, 
ACS_RTEE
);

58 
	`¥öt_buâ⁄
(
dülog
, " Ok ", 
height
 - 2, 
width
 / 2 - 4, 
TRUE
);

60 
	`wª‰esh
(
dülog
);

61 
key
 !
ESC
 && key != '\n' && key != ' ' &&

62 
key
 != 'O' && key != 'o' && key != 'X' && key != 'x')

63 
key
 = 
	`wgëch
(
dülog
);

65 
key
 = '\n';

66 
	`wª‰esh
(
dülog
);

69 
	`dñwö
(
dülog
);

70  
key
 =
ESC
 ? -1 : 0;

71 
	}
}

	@lxdialog/textbox.c

22 
	~"dülog.h
"

24 
back_löes
(
n
);

25 
¥öt_∑ge
(
WINDOW
 * 
wö
, 
height
, 
width
);

26 
¥öt_löe
(
WINDOW
 * 
wö
, 
row
, 
width
);

27 *
gë_löe
();

28 
¥öt_posôi⁄
(
WINDOW
 * 
wö
, 
height
, 
width
);

30 
	ghs¸ﬁl
, 
	gfd
, 
	gfûe_size
, 
	gbyãs_ªad
;

31 
	gbegö_ªached
 = 1, 
	gíd_ªached
, 
	g∑ge_Àngth
;

32 *
	gbuf
, *
	g∑ge
;

37 
	$dülog_ãxtbox
(c⁄° *
tôÀ
, c⁄° *
fûe
, 
height
, 
width
)

39 
i
, 
x
, 
y
, 
cur_x
, 
cur_y
, 
Âos
, 
key
 = 0;

40 
∑s£d_íd
;

41 
£¨ch_ãrm
[
MAX_LEN
 + 1];

42 
WINDOW
 *
dülog
, *
ãxt
;

44 
£¨ch_ãrm
[0] = '\0';

47 i‡((
fd
 = 
	`›í
(
fûe
, 
O_RDONLY
)) == -1) {

48 
	`ídwö
();

49 
	`Ârötf
(
°dîr
, "\nCan't open input file in dialog_textbox().\n");

50 
	`exô
(-1);

54 i‡((
fûe_size
 = 
	`l£ek
(
fd
, 0, 
SEEK_END
)) == -1) {

55 
	`ídwö
();

56 
	`Ârötf
(
°dîr
, "\nError getting file size in dialog_textbox().\n");

57 
	`exô
(-1);

60 i‡(
	`l£ek
(
fd
, 0, 
SEEK_SET
) == -1) {

61 
	`ídwö
();

62 
	`Ârötf
(
°dîr
, "\nError moving fileÖointer in dialog_textbox().\n");

63 
	`exô
(-1);

66 i‡((
buf
 = 
	`mÆloc
(
BUF_SIZE
 + 1)Ë=
NULL
) {

67 
	`ídwö
();

68 
	`Ârötf
(
°dîr
, "\nCan'tállocate memory in dialog_textbox().\n");

69 
	`exô
(-1);

71 i‡((
byãs_ªad
 = 
	`ªad
(
fd
, 
buf
, 
BUF_SIZE
)) == -1) {

72 
	`ídwö
();

73 
	`Ârötf
(
°dîr
, "\nErrorÑeading file in dialog_textbox().\n");

74 
	`exô
(-1);

76 
buf
[
byãs_ªad
] = '\0';

77 
∑ge
 = 
buf
;

80 
x
 = (
COLS
 - 
width
) / 2;

81 
y
 = (
LINES
 - 
height
) / 2;

83 
	`døw_shadow
(
°ds¸
, 
y
, 
x
, 
height
, 
width
);

85 
dülog
 = 
	`√wwö
(
height
, 
width
, 
y
, 
x
);

86 
	`key∑d
(
dülog
, 
TRUE
);

89 
ãxt
 = 
	`subwö
(
dülog
, 
height
 - 4, 
width
 - 2, 
y
 + 1, 
x
 + 1);

90 
	`w©å£t
(
ãxt
, 
dülog_©å
);

91 
	`wbkgd£t
(
ãxt
, 
dülog_©å
 & 
A_COLOR
);

93 
	`key∑d
(
ãxt
, 
TRUE
);

96 
	`døw_box
(
dülog
, 0, 0, 
height
, 
width
, 
dülog_©å
, 
b‹dî_©å
);

98 
	`w©å£t
(
dülog
, 
b‹dî_©å
);

99 
	`mvwaddch
(
dülog
, 
height
 - 3, 0, 
ACS_LTEE
);

100 
i
 = 0; i < 
width
 - 2; i++)

101 
	`waddch
(
dülog
, 
ACS_HLINE
);

102 
	`w©å£t
(
dülog
, 
dülog_©å
);

103 
	`wbkgd£t
(
dülog
, 
dülog_©å
 & 
A_COLOR
);

104 
	`waddch
(
dülog
, 
ACS_RTEE
);

106 
	`¥öt_tôÀ
(
dülog
, 
tôÀ
, 
width
);

108 
	`¥öt_buâ⁄
(
dülog
, " Exô ", 
height
 - 2, 
width
 / 2 - 4, 
TRUE
);

109 
	`wnouåe‰esh
(
dülog
);

110 
	`gëyx
(
dülog
, 
cur_y
, 
cur_x
);

113 
	`©å_˛ór
(
ãxt
, 
height
 - 4, 
width
 - 2, 
dülog_©å
);

114 
	`¥öt_∑ge
(
ãxt
, 
height
 - 4, 
width
 - 2);

115 
	`¥öt_posôi⁄
(
dülog
, 
height
, 
width
);

116 
	`wmove
(
dülog
, 
cur_y
, 
cur_x
);

117 
	`wª‰esh
(
dülog
);

119 (
key
 !
ESC
) && (key != '\n')) {

120 
key
 = 
	`wgëch
(
dülog
);

121 
key
) {

126 
	`dñwö
(
dülog
);

127 
	`‰ì
(
buf
);

128 
	`˛o£
(
fd
);

131 
KEY_HOME
:

132 i‡(!
begö_ªached
) {

133 
begö_ªached
 = 1;

135 i‡((
Âos
 = 
	`l£ek
(
fd
, 0, 
SEEK_CUR
)) == -1) {

136 
	`ídwö
();

137 
	`Ârötf
(
°dîr
, "\nError moving fileÖointer in dialog_textbox().\n");

138 
	`exô
(-1);

140 i‡(
Âos
 > 
byãs_ªad
) {

141 i‡(
	`l£ek
(
fd
, 0, 
SEEK_SET
) == -1) {

142 
	`ídwö
();

143 
	`Ârötf
(
°dîr
, "\nError moving fileÖointer in "

145 
	`exô
(-1);

147 i‡((
byãs_ªad
 =

148 
	`ªad
(
fd
, 
buf
, 
BUF_SIZE
)) == -1) {

149 
	`ídwö
();

150 
	`Ârötf
(
°dîr
, "\nErrorÑeading file in dialog_textbox().\n");

151 
	`exô
(-1);

153 
buf
[
byãs_ªad
] = '\0';

155 
∑ge
 = 
buf
;

156 
	`¥öt_∑ge
(
ãxt
, 
height
 - 4, 
width
 - 2);

157 
	`¥öt_posôi⁄
(
dülog
, 
height
, 
width
);

158 
	`wmove
(
dülog
, 
cur_y
, 
cur_x
);

159 
	`wª‰esh
(
dülog
);

163 
KEY_END
:

165 
íd_ªached
 = 1;

167 i‡((
Âos
 = 
	`l£ek
(
fd
, 0, 
SEEK_CUR
)) == -1) {

168 
	`ídwö
();

169 
	`Ârötf
(
°dîr
, "\nError moving fileÖointer in dialog_textbox().\n");

170 
	`exô
(-1);

172 i‡(
Âos
 < 
fûe_size
) {

173 i‡(
	`l£ek
(
fd
, -
BUF_SIZE
, 
SEEK_END
) == -1) {

174 
	`ídwö
();

175 
	`Ârötf
(
°dîr
, "\nError moving fileÖointer in dialog_textbox().\n");

176 
	`exô
(-1);

178 i‡((
byãs_ªad
 =

179 
	`ªad
(
fd
, 
buf
, 
BUF_SIZE
)) == -1) {

180 
	`ídwö
();

181 
	`Ârötf
(
°dîr
, "\nErrorÑeading file in dialog_textbox().\n");

182 
	`exô
(-1);

184 
buf
[
byãs_ªad
] = '\0';

186 
∑ge
 = 
buf
 + 
byãs_ªad
;

187 
	`back_löes
(
height
 - 4);

188 
	`¥öt_∑ge
(
ãxt
, 
height
 - 4, 
width
 - 2);

189 
	`¥öt_posôi⁄
(
dülog
, 
height
, 
width
);

190 
	`wmove
(
dülog
, 
cur_y
, 
cur_x
);

191 
	`wª‰esh
(
dülog
);

195 
KEY_UP
:

196 i‡(!
begö_ªached
) {

197 
	`back_löes
(
∑ge_Àngth
 + 1);

204 
	`s¸ﬁlok
(
ãxt
, 
TRUE
);

205 
	`ws¸l
(
ãxt
, -1);

206 
	`s¸ﬁlok
(
ãxt
, 
FALSE
);

207 
∑ge_Àngth
 = 0;

208 
∑s£d_íd
 = 0;

209 
i
 = 0; i < 
height
 - 4; i++) {

210 i‡(!
i
) {

212 
	`¥öt_löe
(
ãxt
, 0, 
width
 - 2);

213 
	`wnouåe‰esh
(
ãxt
);

216 
	`gë_löe
();

217 i‡(!
∑s£d_íd
)

218 
∑ge_Àngth
++;

219 i‡(
íd_ªached
 && !
∑s£d_íd
)

220 
∑s£d_íd
 = 1;

223 
	`¥öt_posôi⁄
(
dülog
, 
height
, 
width
);

224 
	`wmove
(
dülog
, 
cur_y
, 
cur_x
);

225 
	`wª‰esh
(
dülog
);

230 
KEY_PPAGE
:

231 i‡(
begö_ªached
)

233 
	`back_löes
(
∑ge_Àngth
 + 
height
 - 4);

234 
	`¥öt_∑ge
(
ãxt
, 
height
 - 4, 
width
 - 2);

235 
	`¥öt_posôi⁄
(
dülog
, 
height
, 
width
);

236 
	`wmove
(
dülog
, 
cur_y
, 
cur_x
);

237 
	`wª‰esh
(
dülog
);

241 
KEY_DOWN
:

242 i‡(!
íd_ªached
) {

243 
begö_ªached
 = 0;

244 
	`s¸ﬁlok
(
ãxt
, 
TRUE
);

245 
	`s¸ﬁl
(
ãxt
);

246 
	`s¸ﬁlok
(
ãxt
, 
FALSE
);

247 
	`¥öt_löe
(
ãxt
, 
height
 - 5, 
width
 - 2);

248 
	`wnouåe‰esh
(
ãxt
);

249 
	`¥öt_posôi⁄
(
dülog
, 
height
, 
width
);

250 
	`wmove
(
dülog
, 
cur_y
, 
cur_x
);

251 
	`wª‰esh
(
dülog
);

254 
KEY_NPAGE
:

256 i‡(
íd_ªached
)

259 
begö_ªached
 = 0;

260 
	`¥öt_∑ge
(
ãxt
, 
height
 - 4, 
width
 - 2);

261 
	`¥öt_posôi⁄
(
dülog
, 
height
, 
width
);

262 
	`wmove
(
dülog
, 
cur_y
, 
cur_x
);

263 
	`wª‰esh
(
dülog
);

268 
KEY_LEFT
:

269 i‡(
hs¸ﬁl
 <= 0)

272 i‡(
key
 == '0')

273 
hs¸ﬁl
 = 0;

275 
hs¸ﬁl
--;

277 
	`back_löes
(
∑ge_Àngth
);

278 
	`¥öt_∑ge
(
ãxt
, 
height
 - 4, 
width
 - 2);

279 
	`wmove
(
dülog
, 
cur_y
, 
cur_x
);

280 
	`wª‰esh
(
dülog
);

284 
KEY_RIGHT
:

285 i‡(
hs¸ﬁl
 >
MAX_LEN
)

287 
hs¸ﬁl
++;

289 
	`back_löes
(
∑ge_Àngth
);

290 
	`¥öt_∑ge
(
ãxt
, 
height
 - 4, 
width
 - 2);

291 
	`wmove
(
dülog
, 
cur_y
, 
cur_x
);

292 
	`wª‰esh
(
dülog
);

294 
ESC
:

299 
	`dñwö
(
dülog
);

300 
	`‰ì
(
buf
);

301 
	`˛o£
(
fd
);

303 
	}
}

309 
	$back_löes
(
n
)

311 
i
, 
Âos
;

313 
begö_ªached
 = 0;

318 i‡(!
íd_ªached
) {

320 i‡(
∑ge
 =
buf
) {

321 i‡((
Âos
 = 
	`l£ek
(
fd
, 0, 
SEEK_CUR
)) == -1) {

322 
	`ídwö
();

323 
	`Ârötf
(
°dîr
, "\nError moving fileÖointer in "

325 
	`exô
(-1);

327 i‡(
Âos
 > 
byãs_ªad
) {

334 i‡(
Âos
 < 
BUF_SIZE
 / 2 + 
byãs_ªad
) {

336 i‡(
	`l£ek
(
fd
, 0, 
SEEK_SET
) == -1) {

337 
	`ídwö
();

338 
	`Ârötf
(
°dîr
, "\nError moving fileÖointer in "

340 
	`exô
(-1);

342 
∑ge
 = 
buf
 + 
Âos
 - 
byãs_ªad
;

344 i‡(
	`l£ek
 (
fd
, -(
BUF_SIZE
 / 2 + 
byãs_ªad
), 
SEEK_CUR
) == -1) {

345 
	`ídwö
();

346 
	`Ârötf
(
°dîr
, "\nError moving fileÖointer "

348 
	`exô
(-1);

350 
∑ge
 = 
buf
 + 
BUF_SIZE
 / 2;

352 i‡((
byãs_ªad
 =

353 
	`ªad
(
fd
, 
buf
, 
BUF_SIZE
)) == -1) {

354 
	`ídwö
();

355 
	`Ârötf
(
°dîr
, "\nErrorÑeading file in back_lines().\n");

356 
	`exô
(-1);

358 
buf
[
byãs_ªad
] = '\0';

360 
begö_ªached
 = 1;

364 i‡(*(--
∑ge
) != '\n') {

366 
	`ídwö
();

367 
	`Ârötf
(
°dîr
, "\nInternalÉrror in back_lines().\n");

368 
	`exô
(-1);

372 
i
 = 0; i < 
n
; i++)

374 i‡(
∑ge
 =
buf
) {

375 i‡((
Âos
 = 
	`l£ek
(
fd
, 0, 
SEEK_CUR
)) == -1) {

376 
	`ídwö
();

377 
	`Ârötf
(
°dîr
, "\nError moving fileÖointer in back_lines().\n");

378 
	`exô
(-1);

380 i‡(
Âos
 > 
byãs_ªad
) {

382 i‡(
Âos
 < 
BUF_SIZE
 / 2 + 
byãs_ªad
) {

384 i‡(
	`l£ek
(
fd
, 0, 
SEEK_SET
) == -1) {

385 
	`ídwö
();

386 
	`Ârötf
(
°dîr
, "\nError moving fileÖointer "

388 
	`exô
(-1);

390 
∑ge
 = 
buf
 + 
Âos
 - 
byãs_ªad
;

392 i‡(
	`l£ek
 (
fd
, -(
BUF_SIZE
 / 2 + 
byãs_ªad
), 
SEEK_CUR
) == -1) {

393 
	`ídwö
();

394 
	`Ârötf
(
°dîr
, "\nError moving fileÖointer"

396 
	`exô
(-1);

398 
∑ge
 = 
buf
 + 
BUF_SIZE
 / 2;

400 i‡((
byãs_ªad
 =

401 
	`ªad
(
fd
, 
buf
, 
BUF_SIZE
)) == -1) {

402 
	`ídwö
();

403 
	`Ârötf
(
°dîr
, "\nErrorÑeading file in "

405 
	`exô
(-1);

407 
buf
[
byãs_ªad
] = '\0';

409 
begö_ªached
 = 1;

413 } *(--
∑ge
) != '\n');

414 
∑ge
++;

415 
	}
}

420 
	$¥öt_∑ge
(
WINDOW
 * 
wö
, 
height
, 
width
)

422 
i
, 
∑s£d_íd
 = 0;

424 
∑ge_Àngth
 = 0;

425 
i
 = 0; i < 
height
; i++) {

426 
	`¥öt_löe
(
wö
, 
i
, 
width
);

427 i‡(!
∑s£d_íd
)

428 
∑ge_Àngth
++;

429 i‡(
íd_ªached
 && !
∑s£d_íd
)

430 
∑s£d_íd
 = 1;

432 
	`wnouåe‰esh
(
wö
);

433 
	}
}

438 
	$¥öt_löe
(
WINDOW
 * 
wö
, 
row
, 
width
)

440 
y
, 
x
;

441 *
löe
;

443 
löe
 = 
	`gë_löe
();

444 
löe
 +
	`MIN
(
	`°æí
÷öe), 
hs¸ﬁl
);

445 
	`wmove
(
wö
, 
row
, 0);

446 
	`waddch
(
wö
, ' ');

447 
	`waddn°r
(
wö
, 
löe
, 
	`MIN
(
	`°æí
÷öe), 
width
 - 2));

449 
	`gëyx
(
wö
, 
y
, 
x
);

451 #i‡
OLD_NCURSES


453 
i
;

454 
i
 = 0; i < 
width
 - 
x
; i++)

455 
	`waddch
(
wö
, ' ');

458 
	`w˛π€ﬁ
(
wö
);

460 
	}
}

467 *
	$gë_löe
()

469 
i
 = 0, 
Âos
;

470 
löe
[
MAX_LEN
 + 1];

472 
íd_ªached
 = 0;

473 *
∑ge
 != '\n') {

474 i‡(*
∑ge
 == '\0') {

476 i‡((
Âos
 = 
	`l£ek
(
fd
, 0, 
SEEK_CUR
)) == -1) {

477 
	`ídwö
();

478 
	`Ârötf
(
°dîr
, "\nError moving fileÖointer in "

480 
	`exô
(-1);

482 i‡(
Âos
 < 
fûe_size
) {

485 i‡((
byãs_ªad
 =

486 
	`ªad
(
fd
, 
buf
, 
BUF_SIZE
)) == -1) {

487 
	`ídwö
();

488 
	`Ârötf
(
°dîr
, "\nErrorÑeading file in get_line().\n");

489 
	`exô
(-1);

491 
buf
[
byãs_ªad
] = '\0';

492 
∑ge
 = 
buf
;

494 i‡(!
íd_ªached
)

495 
íd_ªached
 = 1;

498 } i‡(
i
 < 
MAX_LEN
)

499 
löe
[
i
++] = *(
∑ge
++);

502 i‡(
i
 =
MAX_LEN
)

503 
löe
[
i
++] = '\0';

504 
∑ge
++;

507 i‡(
i
 <
MAX_LEN
)

508 
löe
[
i
] = '\0';

509 i‡(!
íd_ªached
)

510 
∑ge
++;

512  
löe
;

513 
	}
}

518 
	$¥öt_posôi⁄
(
WINDOW
 * 
wö
, 
height
, 
width
)

520 
Âos
, 
≥r˚¡
;

522 i‡((
Âos
 = 
	`l£ek
(
fd
, 0, 
SEEK_CUR
)) == -1) {

523 
	`ídwö
();

524 
	`Ârötf
(
°dîr
, "\nError moving fileÖointer inÖrint_position().\n");

525 
	`exô
(-1);

527 
	`w©å£t
(
wö
, 
posôi⁄_ödiˇt‹_©å
);

528 
	`wbkgd£t
(
wö
, 
posôi⁄_ödiˇt‹_©å
 & 
A_COLOR
);

529 
≥r˚¡
 = !
fûe_size
 ?

530 100 : ((
Âos
 - 
byãs_ªad
 + 
∑ge
 - 
buf
Ë* 100Ë/ 
fûe_size
;

531 
	`wmove
(
wö
, 
height
 - 3, 
width
 - 9);

532 
	`w¥ötw
(
wö
, "(%3d%%)", 
≥r˚¡
);

533 
	}
}

	@lxdialog/util.c

22 
	~"dülog.h
"

25 
boﬁ
 
	gu£_cﬁ‹s
 = 1;

27 c⁄° *
	gbacktôÀ
 = 
NULL
;

32 
chty≥
 
	g©åibuãs
[] = {

33 
A_NORMAL
,

34 
A_NORMAL
,

35 
A_NORMAL
,

36 
A_BOLD
,

37 
A_NORMAL
,

38 
A_REVERSE
,

39 
A_DIM
,

40 
A_REVERSE
,

41 
A_BOLD
,

42 
A_REVERSE
,

43 
A_NORMAL
,

44 
A_NORMAL
,

45 
A_NORMAL
,

46 
A_NORMAL
,

47 
A_BOLD
,

48 
A_NORMAL
,

49 
A_BOLD
,

50 
A_NORMAL
,

51 
A_NORMAL
,

52 
A_NORMAL
,

53 
A_REVERSE
,

54 
A_BOLD
,

55 
A_REVERSE
,

56 
A_BOLD
,

57 
A_REVERSE
,

58 
A_BOLD
,

59 
A_REVERSE
,

60 
A_BOLD
,

61 
A_BOLD


64 
	~"cﬁ‹s.h
"

69 
	gcﬁ‹_èbÀ
[][3] = {

70 {
SCREEN_FG
, 
SCREEN_BG
, 
SCREEN_HL
},

71 {
SHADOW_FG
, 
SHADOW_BG
, 
SHADOW_HL
},

72 {
DIALOG_FG
, 
DIALOG_BG
, 
DIALOG_HL
},

73 {
TITLE_FG
, 
TITLE_BG
, 
TITLE_HL
},

74 {
BORDER_FG
, 
BORDER_BG
, 
BORDER_HL
},

75 {
BUTTON_ACTIVE_FG
, 
BUTTON_ACTIVE_BG
, 
BUTTON_ACTIVE_HL
},

76 {
BUTTON_INACTIVE_FG
, 
BUTTON_INACTIVE_BG
, 
BUTTON_INACTIVE_HL
},

77 {
BUTTON_KEY_ACTIVE_FG
, 
BUTTON_KEY_ACTIVE_BG
, 
BUTTON_KEY_ACTIVE_HL
},

78 {
BUTTON_KEY_INACTIVE_FG
, 
BUTTON_KEY_INACTIVE_BG
,

79 
BUTTON_KEY_INACTIVE_HL
},

80 {
BUTTON_LABEL_ACTIVE_FG
, 
BUTTON_LABEL_ACTIVE_BG
,

81 
BUTTON_LABEL_ACTIVE_HL
},

82 {
BUTTON_LABEL_INACTIVE_FG
, 
BUTTON_LABEL_INACTIVE_BG
,

83 
BUTTON_LABEL_INACTIVE_HL
},

84 {
INPUTBOX_FG
, 
INPUTBOX_BG
, 
INPUTBOX_HL
},

85 {
INPUTBOX_BORDER_FG
, 
INPUTBOX_BORDER_BG
, 
INPUTBOX_BORDER_HL
},

86 {
SEARCHBOX_FG
, 
SEARCHBOX_BG
, 
SEARCHBOX_HL
},

87 {
SEARCHBOX_TITLE_FG
, 
SEARCHBOX_TITLE_BG
, 
SEARCHBOX_TITLE_HL
},

88 {
SEARCHBOX_BORDER_FG
, 
SEARCHBOX_BORDER_BG
, 
SEARCHBOX_BORDER_HL
},

89 {
POSITION_INDICATOR_FG
, 
POSITION_INDICATOR_BG
, 
POSITION_INDICATOR_HL
},

90 {
MENUBOX_FG
, 
MENUBOX_BG
, 
MENUBOX_HL
},

91 {
MENUBOX_BORDER_FG
, 
MENUBOX_BORDER_BG
, 
MENUBOX_BORDER_HL
},

92 {
ITEM_FG
, 
ITEM_BG
, 
ITEM_HL
},

93 {
ITEM_SELECTED_FG
, 
ITEM_SELECTED_BG
, 
ITEM_SELECTED_HL
},

94 {
TAG_FG
, 
TAG_BG
, 
TAG_HL
},

95 {
TAG_SELECTED_FG
, 
TAG_SELECTED_BG
, 
TAG_SELECTED_HL
},

96 {
TAG_KEY_FG
, 
TAG_KEY_BG
, 
TAG_KEY_HL
},

97 {
TAG_KEY_SELECTED_FG
, 
TAG_KEY_SELECTED_BG
, 
TAG_KEY_SELECTED_HL
},

98 {
CHECK_FG
, 
CHECK_BG
, 
CHECK_HL
},

99 {
CHECK_SELECTED_FG
, 
CHECK_SELECTED_BG
, 
CHECK_SELECTED_HL
},

100 {
UARROW_FG
, 
UARROW_BG
, 
UARROW_HL
},

101 {
DARROW_FG
, 
DARROW_BG
, 
DARROW_HL
},

107 
	$©å_˛ór
(
WINDOW
 * 
wö
, 
height
, 
width
, 
chty≥
 
©å
)

109 
i
, 
j
;

111 
	`w©å£t
(
wö
, 
©å
);

112 
i
 = 0; i < 
height
; i++) {

113 
	`wmove
(
wö
, 
i
, 0);

114 
j
 = 0; j < 
width
; j++)

115 
	`waddch
(
wö
, ' ');

117 
	`touchwö
(
wö
);

118 
	}
}

120 
	$dülog_˛ór
()

122 
	`©å_˛ór
(
°ds¸
, 
LINES
, 
COLS
, 
s¸ìn_©å
);

124 i‡(
backtôÀ
 !
NULL
) {

125 
i
;

127 
	`w©å£t
(
°ds¸
, 
s¸ìn_©å
);

128 
	`mvwadd°r
(
°ds¸
, 0, 1, (*)
backtôÀ
);

129 
	`wmove
(
°ds¸
, 1, 1);

130 
i
 = 1; i < 
COLS
 - 1; i++)

131 
	`waddch
(
°ds¸
, 
ACS_HLINE
);

133 
	`wnouåe‰esh
(
°ds¸
);

134 
	}
}

139 
	$öô_dülog
()

141 
	`öôs¸
();

142 
	`key∑d
(
°ds¸
, 
TRUE
);

143 
	`cbªak
();

144 
	`n€cho
();

146 i‡(
u£_cﬁ‹s
)

147 
	`cﬁ‹_£tup
();

149 
	`dülog_˛ór
();

150 
	}
}

155 
	$cﬁ‹_£tup
()

157 
i
;

159 i‡(
	`has_cﬁ‹s
()) {

160 
	`°¨t_cﬁ‹
();

163 
i
 = 0; i < 
ATTRIBUTE_COUNT
; i++)

164 
	`öô_∑ú
(
i
 + 1, 
cﬁ‹_èbÀ
[i][0], color_table[i][1]);

167 
i
 = 0; i < 
ATTRIBUTE_COUNT
; i++)

168 
©åibuãs
[
i
] = 
	`C_ATTR
(
cﬁ‹_èbÀ
[i][2], i + 1);

170 
	}
}

175 
	$íd_dülog
()

177 
	`ídwö
();

178 
	}
}

183 
	$¥öt_tôÀ
(
WINDOW
 *
dülog
, c⁄° *
tôÀ
, 
width
)

185 i‡(
tôÀ
) {

186 
éí
 = 
	`MIN
(
width
 - 2, 
	`°æí
(
tôÀ
));

187 
	`w©å£t
(
dülog
, 
tôÀ_©å
);

188 
	`mvwaddch
(
dülog
, 0, (
width
 - 
éí
) / 2 - 1, ' ');

189 
	`mvwaddn°r
(
dülog
, 0, (
width
 - 
éí
)/2, 
tôÀ
,Ålen);

190 
	`waddch
(
dülog
, ' ');

192 
	}
}

200 
	$¥öt_autowøp
(
WINDOW
 * 
wö
, c⁄° *
¥om±
, 
width
, 
y
, 
x
)

202 
√wl
, 
cur_x
, 
cur_y
;

203 
i
, 
¥om±_Àn
, 
room
, 
wÀn
;

204 
ãmp°r
[
MAX_LEN
 + 1], *
w‹d
, *
•
, *
•2
;

206 
	`°r˝y
(
ãmp°r
, 
¥om±
);

208 
¥om±_Àn
 = 
	`°æí
(
ãmp°r
);

213 
i
 = 0; i < 
¥om±_Àn
; i++) {

214 i‡(
ãmp°r
[
i
] == '\n')

215 
ãmp°r
[
i
] = ' ';

218 i‡(
¥om±_Àn
 <
width
 - 
x
 * 2) {

219 
	`wmove
(
wö
, 
y
, (
width
 - 
¥om±_Àn
) / 2);

220 
	`wadd°r
(
wö
, 
ãmp°r
);

222 
cur_x
 = 
x
;

223 
cur_y
 = 
y
;

224 
√wl
 = 1;

225 
w‹d
 = 
ãmp°r
;

226 
w‹d
 && *word) {

227 
•
 = 
	`ödex
(
w‹d
, ' ');

228 i‡(
•
)

229 *
•
++ = 0;

234 
room
 = 
width
 - 
cur_x
;

235 
wÀn
 = 
	`°æí
(
w‹d
);

236 i‡(
wÀn
 > 
room
 ||

237 (
√wl
 && 
wÀn
 < 4 && 
•


238 && 
wÀn
 + 1 + 
	`°æí
(
•
Ë> 
room


239 && (!(
•2
 = 
	`ödex
(
•
, ' '))

240 || 
wÀn
 + 1 + (
•2
 - 
•
Ë> 
room
))) {

241 
cur_y
++;

242 
cur_x
 = 
x
;

244 
	`wmove
(
wö
, 
cur_y
, 
cur_x
);

245 
	`wadd°r
(
wö
, 
w‹d
);

246 
	`gëyx
(
wö
, 
cur_y
, 
cur_x
);

247 
cur_x
++;

248 i‡(
•
 && *sp == ' ') {

249 
cur_x
++;

250 *++
•
 == ' ') ;

251 
√wl
 = 1;

253 
√wl
 = 0;

254 
w‹d
 = 
•
;

257 
	}
}

262 
	$¥öt_buâ⁄
(
WINDOW
 * 
wö
, c⁄° *
œbñ
, 
y
, 
x
, 
£À˘ed
)

264 
i
, 
ãmp
;

266 
	`wmove
(
wö
, 
y
, 
x
);

267 
	`w©å£t
(
wö
, 
£À˘ed
 ? 
buâ⁄_a˘ive_©å
 : 
buâ⁄_öa˘ive_©å
);

268 
	`wadd°r
(
wö
, "<");

269 
ãmp
 = 
	`°r•n
(
œbñ
, " ");

270 
œbñ
 +
ãmp
;

271 
	`w©å£t
(
wö
, 
£À˘ed
 ? 
buâ⁄_œbñ_a˘ive_©å


272 : 
buâ⁄_œbñ_öa˘ive_©å
);

273 
i
 = 0; i < 
ãmp
; i++)

274 
	`waddch
(
wö
, ' ');

275 
	`w©å£t
(
wö
, 
£À˘ed
 ? 
buâ⁄_key_a˘ive_©å


276 : 
buâ⁄_key_öa˘ive_©å
);

277 
	`waddch
(
wö
, 
œbñ
[0]);

278 
	`w©å£t
(
wö
, 
£À˘ed
 ? 
buâ⁄_œbñ_a˘ive_©å


279 : 
buâ⁄_œbñ_öa˘ive_©å
);

280 
	`wadd°r
(
wö
, (*)
œbñ
 + 1);

281 
	`w©å£t
(
wö
, 
£À˘ed
 ? 
buâ⁄_a˘ive_©å
 : 
buâ⁄_öa˘ive_©å
);

282 
	`wadd°r
(
wö
, ">");

283 
	`wmove
(
wö
, 
y
, 
x
 + 
ãmp
 + 1);

284 
	}
}

290 
	$døw_box
(
WINDOW
 * 
wö
, 
y
, 
x
, 
height
, 
width
,

291 
chty≥
 
box
, chty≥ 
b‹dî
)

293 
i
, 
j
;

295 
	`w©å£t
(
wö
, 0);

296 
i
 = 0; i < 
height
; i++) {

297 
	`wmove
(
wö
, 
y
 + 
i
, 
x
);

298 
j
 = 0; j < 
width
; j++)

299 i‡(!
i
 && !
j
)

300 
	`waddch
(
wö
, 
b‹dî
 | 
ACS_ULCORNER
);

301 i‡(
i
 =
height
 - 1 && !
j
)

302 
	`waddch
(
wö
, 
b‹dî
 | 
ACS_LLCORNER
);

303 i‡(!
i
 && 
j
 =
width
 - 1)

304 
	`waddch
(
wö
, 
box
 | 
ACS_URCORNER
);

305 i‡(
i
 =
height
 - 1 && 
j
 =
width
 - 1)

306 
	`waddch
(
wö
, 
box
 | 
ACS_LRCORNER
);

307 i‡(!
i
)

308 
	`waddch
(
wö
, 
b‹dî
 | 
ACS_HLINE
);

309 i‡(
i
 =
height
 - 1)

310 
	`waddch
(
wö
, 
box
 | 
ACS_HLINE
);

311 i‡(!
j
)

312 
	`waddch
(
wö
, 
b‹dî
 | 
ACS_VLINE
);

313 i‡(
j
 =
width
 - 1)

314 
	`waddch
(
wö
, 
box
 | 
ACS_VLINE
);

316 
	`waddch
(
wö
, 
box
 | ' ');

318 
	}
}

324 
	$døw_shadow
(
WINDOW
 * 
wö
, 
y
, 
x
, 
height
, 
width
)

326 
i
;

328 i‡(
	`has_cﬁ‹s
()) {

329 
	`w©å£t
(
wö
, 
shadow_©å
);

330 
	`wmove
(
wö
, 
y
 + 
height
, 
x
 + 2);

331 
i
 = 0; i < 
width
; i++)

332 
	`waddch
(
wö
, 
	`wöch
(wöË& 
A_CHARTEXT
);

333 
i
 = 
y
 + 1; i < y + 
height
 + 1; i++) {

334 
	`wmove
(
wö
, 
i
, 
x
 + 
width
);

335 
	`waddch
(
wö
, 
	`wöch
(wöË& 
A_CHARTEXT
);

336 
	`waddch
(
wö
, 
	`wöch
(wöË& 
A_CHARTEXT
);

338 
	`wnouåe‰esh
(
wö
);

340 
	}
}

345 
	$fú°_Æpha
(c⁄° *
°rög
, c⁄° *
exem±
)

347 
i
, 
ö_∑ªn
 = 0, 
c
;

349 
i
 = 0; i < 
	`°æí
(
°rög
); i++) {

350 
c
 = 
	`tﬁowî
(
°rög
[
i
]);

352 i‡(
	`°rchr
("<[(", 
c
))

353 ++
ö_∑ªn
;

354 i‡(
	`°rchr
(">])", 
c
Ë&& 
ö_∑ªn
 > 0)

355 --
ö_∑ªn
;

357 i‡((!
ö_∑ªn
Ë&& 
	`ißÕha
(
c
Ë&& 
	`°rchr
(
exem±
, c) == 0)

358  
i
;

362 
	}
}

	@lxdialog/yesno.c

22 
	~"dülog.h
"

27 
	$¥öt_buâ⁄s
(
WINDOW
 * 
dülog
, 
height
, 
width
, 
£À˘ed
)

29 
x
 = 
width
 / 2 - 10;

30 
y
 = 
height
 - 2;

32 
	`¥öt_buâ⁄
(
dülog
, " Ye†", 
y
, 
x
, 
£À˘ed
 == 0);

33 
	`¥öt_buâ⁄
(
dülog
, " Nÿ ", 
y
, 
x
 + 13, 
£À˘ed
 == 1);

35 
	`wmove
(
dülog
, 
y
, 
x
 + 1 + 13 * 
£À˘ed
);

36 
	`wª‰esh
(
dülog
);

37 
	}
}

42 
	$dülog_ye¢o
(c⁄° *
tôÀ
, c⁄° *
¥om±
, 
height
, 
width
)

44 
i
, 
x
, 
y
, 
key
 = 0, 
buâ⁄
 = 0;

45 
WINDOW
 *
dülog
;

48 
x
 = (
COLS
 - 
width
) / 2;

49 
y
 = (
LINES
 - 
height
) / 2;

51 
	`døw_shadow
(
°ds¸
, 
y
, 
x
, 
height
, 
width
);

53 
dülog
 = 
	`√wwö
(
height
, 
width
, 
y
, 
x
);

54 
	`key∑d
(
dülog
, 
TRUE
);

56 
	`døw_box
(
dülog
, 0, 0, 
height
, 
width
, 
dülog_©å
, 
b‹dî_©å
);

57 
	`w©å£t
(
dülog
, 
b‹dî_©å
);

58 
	`mvwaddch
(
dülog
, 
height
 - 3, 0, 
ACS_LTEE
);

59 
i
 = 0; i < 
width
 - 2; i++)

60 
	`waddch
(
dülog
, 
ACS_HLINE
);

61 
	`w©å£t
(
dülog
, 
dülog_©å
);

62 
	`waddch
(
dülog
, 
ACS_RTEE
);

64 
	`¥öt_tôÀ
(
dülog
, 
tôÀ
, 
width
);

66 
	`w©å£t
(
dülog
, 
dülog_©å
);

67 
	`¥öt_autowøp
(
dülog
, 
¥om±
, 
width
 - 2, 1, 3);

69 
	`¥öt_buâ⁄s
(
dülog
, 
height
, 
width
, 0);

71 
key
 !
ESC
) {

72 
key
 = 
	`wgëch
(
dülog
);

73 
key
) {

76 
	`dñwö
(
dülog
);

80 
	`dñwö
(
dülog
);

83 
TAB
:

84 
KEY_LEFT
:

85 
KEY_RIGHT
:

86 
buâ⁄
 = ((
key
 =
KEY_LEFT
 ? --button : ++button) < 0) ? 1 : (button > 1 ? 0 : button);

88 
	`¥öt_buâ⁄s
(
dülog
, 
height
, 
width
, 
buâ⁄
);

89 
	`wª‰esh
(
dülog
);

93 
	`dñwö
(
dülog
);

94  
buâ⁄
;

95 
ESC
:

100 
	`dñwö
(
dülog
);

102 
	}
}

	@mconf.c

11 
	~<sys/io˘l.h
>

12 
	~<sys/waô.h
>

13 
	~<˘y≥.h
>

14 
	~<î∫o.h
>

15 
	~<f˙é.h
>

16 
	~<limôs.h
>

17 
	~<sig«l.h
>

18 
	~<°d¨g.h
>

19 
	~<°dlib.h
>

20 
	~<°rög.h
>

21 
	~<ãrmios.h
>

22 
	~<uni°d.h
>

23 
	~<loˇÀ.h
>

25 
	#LKC_DIRECT_LINK


	)

26 
	~"lkc.h
"

28 
	gmíu_backtôÀ
[128];

29 c⁄° 
	gmc⁄f_ªadme
[] = 
N_
(

163 
	gmíu_ö°ru˘i⁄s
[] = 
N_
(

170 
	gødiﬁi°_ö°ru˘i⁄s
[] = 
N_
(

175 
	göputbox_ö°ru˘i⁄s_öt
[] = 
N_
(

179 
	göputbox_ö°ru˘i⁄s_hex
[] = 
N_
(

182 
	göputbox_ö°ru˘i⁄s_°rög
[] = 
N_
(

185 
	g£tmod_ãxt
[] = 
N_
(

188 
	gnohñp_ãxt
[] = 
N_
(

190 
	glﬂd_c⁄fig_ãxt
[] = 
N_
(

194 
	glﬂd_c⁄fig_hñp
[] = 
N_
(

205 
	gßve_c⁄fig_ãxt
[] = 
N_
(

208 
	gßve_c⁄fig_hñp
[] = 
N_
(

219 
	g£¨ch_hñp
[] = 
N_
(

259 
	gbuf
[4096], *
	gbuÂå
 = 
buf
;

260 
	göput_buf
[4096];

261 
	gfûíame
[
PATH_MAX
+1] = ".config";

262 *
	g¨gs
[1024], **
	g¨g±r
 = 
¨gs
;

263 
	gödít
;

264 
ãrmios
 
	gios_‹g
;

265 
	grows
 = 0, 
	gcﬁs
 = 0;

266 
míu
 *
	gcuºít_míu
;

267 
	gchûd_cou¡
;

268 
	gdo_ªsize
;

269 
	gsögÀ_míu_mode
;

271 
c⁄f
(
míu
 *menu);

272 
c⁄f_choi˚
(
míu
 *menu);

273 
c⁄f_°rög
(
míu
 *menu);

274 
c⁄f_lﬂd
();

275 
c⁄f_ßve
();

276 
show_ãxtbox
(c⁄° *
tôÀ
, c⁄° *
ãxt
, 
r
, 
c
);

277 
show_hñ±ext
(c⁄° *
tôÀ
, c⁄° *
ãxt
);

278 
show_hñp
(
míu
 *menu);

279 
show_fûe
(c⁄° *
fûíame
, c⁄° *
tôÀ
, 
r
, 
c
);

281 
˝röt_öô
();

282 
˝röt1
(c⁄° *
fmt
, ...);

283 
˝röt_d⁄e
();

284 
˝röt
(c⁄° *
fmt
, ...);

286 
	$öô_wsize
()

288 
wösize
 
ws
;

289 *
ív
;

291 i‡(!
	`io˘l
(
STDIN_FILENO
, 
TIOCGWINSZ
, &
ws
)) {

292 
rows
 = 
ws
.
ws_row
;

293 
cﬁs
 = 
ws
.
ws_cﬁ
;

296 i‡(!
rows
) {

297 
ív
 = 
	`gëív
("LINES");

298 i‡(
ív
)

299 
rows
 = 
	`©oi
(
ív
);

300 i‡(!
rows
)

301 
rows
 = 24;

303 i‡(!
cﬁs
) {

304 
ív
 = 
	`gëív
("COLUMNS");

305 i‡(
ív
)

306 
cﬁs
 = 
	`©oi
(
ív
);

307 i‡(!
cﬁs
)

308 
cﬁs
 = 80;

311 i‡(
rows
 < 19 || 
cﬁs
 < 80) {

312 
	`Ârötf
(
°dîr
, 
	`N_
("Your display isÅoo smallÅoÑun Menuconfig!\n"));

313 
	`Ârötf
(
°dîr
, 
	`N_
("It must beátÜeast 19Üines by 80 columns.\n"));

314 
	`exô
(1);

317 
rows
 -= 4;

318 
cﬁs
 -= 5;

319 
	}
}

321 
	$˝röt_öô
()

323 
buÂå
 = 
buf
;

324 
¨g±r
 = 
¨gs
;

325 
	`mem£t
(
¨gs
, 0, (args));

326 
ödít
 = 0;

327 
chûd_cou¡
 = 0;

328 
	`˝röt
("./scripts/kconfig/lxdialog/lxdialog");

329 
	`˝röt
("--backtitle");

330 
	`˝röt
(
míu_backtôÀ
);

331 
	}
}

333 
	$˝röt1
(c⁄° *
fmt
, ...)

335 
va_li°
 
≠
;

336 
ªs
;

338 i‡(!*
¨g±r
)

339 *
¨g±r
 = 
buÂå
;

340 
	`va_°¨t
(
≠
, 
fmt
);

341 
ªs
 = 
	`v•rötf
(
buÂå
, 
fmt
, 
≠
);

342 
	`va_íd
(
≠
);

343 
buÂå
 +
ªs
;

345  
ªs
;

346 
	}
}

348 
	$˝röt_d⁄e
()

350 *
buÂå
++ = 0;

351 
¨g±r
++;

352 
	}
}

354 
	$˝röt
(c⁄° *
fmt
, ...)

356 
va_li°
 
≠
;

357 
ªs
;

359 *
¨g±r
++ = 
buÂå
;

360 
	`va_°¨t
(
≠
, 
fmt
);

361 
ªs
 = 
	`v•rötf
(
buÂå
, 
fmt
, 
≠
);

362 
	`va_íd
(
≠
);

363 
buÂå
 +
ªs
;

364 *
buÂå
++ = 0;

366  
ªs
;

367 
	}
}

369 
	$gë_¥om±_°r
(
g°r
 *
r
, 
¥›îty
 *
¥›
)

371 
i
, 
j
;

372 
míu
 *
submíu
[8], *menu;

374 
	`°r_¥ötf
(
r
, "Prom±: %s\n", 
¥›
->
ãxt
);

375 
	`°r_¥ötf
(
r
, " Deföedáà%s:%d\n", 
¥›
->
míu
->
fûe
->
«me
,

376 
¥›
->
míu
->
löío
);

377 i‡(!
	`ex¥_is_yes
(
¥›
->
visibÀ
.
ex¥
)) {

378 
	`°r_≠≥nd
(
r
, " Depends on: ");

379 
	`ex¥_g°r_¥öt
(
¥›
->
visibÀ
.
ex¥
, 
r
);

380 
	`°r_≠≥nd
(
r
, "\n");

382 
míu
 = 
¥›
->míu->
∑ª¡
;

383 
i
 = 0; 
míu
 !&
roŸmíu
 && i < 8; míu = míu->
∑ª¡
)

384 
submíu
[
i
++] = 
míu
;

385 i‡(
i
 > 0) {

386 
	`°r_¥ötf
(
r
, " Location:\n");

387 
j
 = 4; --
i
 >= 0; j += 2) {

388 
míu
 = 
submíu
[
i
];

389 
	`°r_¥ötf
(
r
, "%*c-> %s", 
j
, ' ', 
	`míu_gë_¥om±
(
míu
));

390 i‡(
míu
->
sym
) {

391 
	`°r_¥ötf
(
r
, " (%†[=%s])", 
míu
->
sym
->
«me
 ?

392 
míu
->
sym
->
«me
 : "<choice>",

393 
	`sym_gë_°rög_vÆue
(
míu
->
sym
));

395 
	`°r_≠≥nd
(
r
, "\n");

398 
	}
}

400 
	$gë_symbﬁ_°r
(
g°r
 *
r
, 
symbﬁ
 *
sym
)

402 
boﬁ
 
hô
;

403 
¥›îty
 *
¥›
;

405 
	`°r_¥ötf
(
r
, "Symbﬁ: %†[=%s]\n", 
sym
->
«me
,

406 
	`sym_gë_°rög_vÆue
(
sym
));

407 
	`f‹_Æl_¥om±s
(
sym
, 
¥›
)

408 
	`gë_¥om±_°r
(
r
, 
¥›
);

409 
hô
 = 
Ál£
;

410 
	`f‹_Æl_¥›îtõs
(
sym
, 
¥›
, 
P_SELECT
) {

411 i‡(!
hô
) {

412 
	`°r_≠≥nd
(
r
, " Selects: ");

413 
hô
 = 
åue
;

415 
	`°r_¥ötf
(
r
, " && ");

416 
	`ex¥_g°r_¥öt
(
¥›
->
ex¥
, 
r
);

418 i‡(
hô
)

419 
	`°r_≠≥nd
(
r
, "\n");

420 i‡(
sym
->
ªv_dï
.
ex¥
) {

421 
	`°r_≠≥nd
(
r
, " Selected by: ");

422 
	`ex¥_g°r_¥öt
(
sym
->
ªv_dï
.
ex¥
, 
r
);

423 
	`°r_≠≥nd
(
r
, "\n");

425 
	`°r_≠≥nd
(
r
, "\n\n");

426 
	}
}

428 
g°r
 
	$gë_ªœti⁄s_°r
(
symbﬁ
 **
sym_¨r
)

430 
symbﬁ
 *
sym
;

431 
g°r
 
ªs
 = 
	`°r_√w
();

432 
i
;

434 
i
 = 0; 
sym_¨r
 && (
sym
 = sym_arr[i]); i++)

435 
	`gë_symbﬁ_°r
(&
ªs
, 
sym
);

436 i‡(!
i
)

437 
	`°r_≠≥nd
(&
ªs
, "No matches found.\n");

438  
ªs
;

439 
	}
}

441 
pid_t
 
	gpid
;

443 
	$wöch_h™dÀr
(
sig
)

445 i‡(!
do_ªsize
) {

446 
	`kûl
(
pid
, 
SIGINT
);

447 
do_ªsize
 = 1;

449 
	}
}

451 
	$exec_c⁄f
()

453 
pùefd
[2], 
°©
, 
size
;

454 
siga˘i⁄
 
ß
;

455 
sig£t_t
 
s£t
, 
os£t
;

457 
	`sigem±y£t
(&
s£t
);

458 
	`sigadd£t
(&
s£t
, 
SIGINT
);

459 
	`sig¥ocmask
(
SIG_BLOCK
, &
s£t
, &
os£t
);

461 
	`sig«l
(
SIGINT
, 
SIG_DFL
);

463 
ß
.
ß_h™dÀr
 = 
wöch_h™dÀr
;

464 
	`sigem±y£t
(&
ß
.
ß_mask
);

465 
ß
.
ß_Êags
 = 
SA_RESTART
;

466 
	`siga˘i⁄
(
SIGWINCH
, &
ß
, 
NULL
);

468 *
¨g±r
++ = 
NULL
;

470 
	`pùe
(
pùefd
);

471 
pid
 = 
	`f‹k
();

472 i‡(
pid
 == 0) {

473 
	`sig¥ocmask
(
SIG_SETMASK
, &
os£t
, 
NULL
);

474 
	`dup2
(
pùefd
[1], 2);

475 
	`˛o£
(
pùefd
[0]);

476 
	`˛o£
(
pùefd
[1]);

477 
	`execv
(
¨gs
[0],árgs);

478 
	`_exô
(
EXIT_FAILURE
);

481 
	`˛o£
(
pùefd
[1]);

482 
buÂå
 = 
öput_buf
;

484 
size
 = 
öput_buf
 + (öput_bufË- 
buÂå
;

485 
size
 = 
	`ªad
(
pùefd
[0], 
buÂå
, size);

486 i‡(
size
 <= 0) {

487 i‡(
size
 < 0) {

488 i‡(
î∫o
 =
EINTR
 ||Éºnÿ=
EAGAIN
)

490 
	`≥º‹
("read");

494 
buÂå
 +
size
;

496 *
buÂå
++ = 0;

497 
	`˛o£
(
pùefd
[0]);

498 
	`waôpid
(
pid
, &
°©
, 0);

500 i‡(
do_ªsize
) {

501 
	`öô_wsize
();

502 
do_ªsize
 = 0;

503 
	`sig¥ocmask
(
SIG_SETMASK
, &
os£t
, 
NULL
);

506 i‡(
	`WIFSIGNALED
(
°©
)) {

507 
	`¥ötf
("\föãºu±ed(%d)\n", 
	`WTERMSIG
(
°©
));

508 
	`exô
(1);

511 
	`¥ötf
("\„xô sèã: %d\√xô d©a: '%s'\n", 
	`WEXITSTATUS
(
°©
), 
öput_buf
);

512 
	`¶ìp
(1);

514 
	`sig≥ndög
(&
s£t
);

515 i‡(
	`sigismembî
(&
s£t
, 
SIGINT
)) {

516 
	`¥ötf
("\finterrupted\n");

517 
	`exô
(1);

519 
	`sig¥ocmask
(
SIG_SETMASK
, &
os£t
, 
NULL
);

521  
	`WEXITSTATUS
(
°©
);

522 
	}
}

524 
	$£¨ch_c⁄f
()

526 
symbﬁ
 **
sym_¨r
;

527 
°©
;

528 
g°r
 
ªs
;

530 
agaö
:

531 
	`˝röt_öô
();

532 
	`˝röt
("--title");

533 
	`˝röt
(
	`_
("Search Configuration Parameter"));

534 
	`˝röt
("--inputbox");

535 
	`˝röt
(
	`_
("Enter CONFIG_ (sub)stringÅo search for (omit CONFIG_)"));

536 
	`˝röt
("10");

537 
	`˝röt
("75");

538 
	`˝röt
("");

539 
°©
 = 
	`exec_c⁄f
();

540 i‡(
°©
 < 0)

541 
agaö
;

542 
°©
) {

546 
	`show_hñ±ext
(
	`_
("Sórch C⁄figuøti⁄"), 
£¨ch_hñp
);

547 
agaö
;

552 
sym_¨r
 = 
	`sym_ª_£¨ch
(
öput_buf
);

553 
ªs
 = 
	`gë_ªœti⁄s_°r
(
sym_¨r
);

554 
	`‰ì
(
sym_¨r
);

555 
	`show_ãxtbox
(
	`_
("Sórch Resu…s"), 
	`°r_gë
(&
ªs
), 0, 0);

556 
	`°r_‰ì
(&
ªs
);

557 
	}
}

559 
	$buûd_c⁄f
(
míu
 *menu)

561 
symbﬁ
 *
sym
;

562 
¥›îty
 *
¥›
;

563 
míu
 *
chûd
;

564 
ty≥
, 
tmp
, 
doöt
 = 2;

565 
åi°©e
 
vÆ
;

566 
ch
;

568 i‡(!
	`míu_is_visibÀ
(
míu
))

571 
sym
 = 
míu
->sym;

572 
¥›
 = 
míu
->
¥om±
;

573 i‡(!
sym
) {

574 i‡(
¥›
 && 
míu
 !
cuºít_míu
) {

575 c⁄° *
¥om±
 = 
	`míu_gë_¥om±
(
míu
);

576 
¥›
->
ty≥
) {

577 
P_MENU
:

578 
chûd_cou¡
++;

579 
	`˝röt
("m%p", 
míu
);

581 i‡(
sögÀ_míu_mode
) {

582 
	`˝röt1
("%s%*c%s",

583 
míu
->
d©a
 ? "-->" : "++>",

584 
ödít
 + 1, ' ', 
¥om±
);

586 
	`˝röt1
(" %*c%† --->", 
ödít
 + 1, ' ', 
¥om±
);

588 
	`˝röt_d⁄e
();

589 i‡(
sögÀ_míu_mode
 && 
míu
->
d©a
)

590 
c⁄f_chûds
;

593 i‡(
¥om±
) {

594 
chûd_cou¡
++;

595 
	`˝röt
(":%p", 
míu
);

596 
	`˝röt
("---%*c%s", 
ödít
 + 1, ' ', 
¥om±
);

600 
doöt
 = 0;

601 
c⁄f_chûds
;

604 
ty≥
 = 
	`sym_gë_ty≥
(
sym
);

605 i‡(
	`sym_is_choi˚
(
sym
)) {

606 
symbﬁ
 *
def_sym
 = 
	`sym_gë_choi˚_vÆue
(
sym
);

607 
míu
 *
def_míu
 = 
NULL
;

609 
chûd_cou¡
++;

610 
chûd
 = 
míu
->
li°
; chûd; chûd = chûd->
√xt
) {

611 i‡(
	`míu_is_visibÀ
(
chûd
Ë&& chûd->
sym
 =
def_sym
)

612 
def_míu
 = 
chûd
;

615 
vÆ
 = 
	`sym_gë_åi°©e_vÆue
(
sym
);

616 i‡(
	`sym_is_ch™gabÀ
(
sym
)) {

617 
	`˝röt
("t%p", 
míu
);

618 
ty≥
) {

619 
S_BOOLEAN
:

620 
	`˝röt1
("[%c]", 
vÆ
 =
no
 ? ' ' : '*');

622 
S_TRISTATE
:

623 
vÆ
) {

624 
yes
: 
ch
 = '*'; ;

625 
mod
: 
ch
 = 'M'; ;

626 : 
ch
 = ' '; ;

628 
	`˝röt1
("<%c>", 
ch
);

632 
	`˝röt
("%c%p", 
def_míu
 ? 't' : ':', 
míu
);

633 
	`˝röt1
(" ");

636 
	`˝röt1
("%*c%s", 
ödít
 + 1, ' ', 
	`míu_gë_¥om±
(
míu
));

637 i‡(
vÆ
 =
yes
) {

638 i‡(
def_míu
) {

639 
	`˝röt1
(" (%s)", 
	`míu_gë_¥om±
(
def_míu
));

640 
	`˝röt1
(" --->");

641 
	`˝röt_d⁄e
();

642 i‡(
def_míu
->
li°
) {

643 
ödít
 += 2;

644 
	`buûd_c⁄f
(
def_míu
);

645 
ödít
 -= 2;

648 
	`˝röt_d⁄e
();

651 
	`˝röt_d⁄e
();

653 i‡(
míu
 =
cuºít_míu
) {

654 
	`˝röt
(":%p", 
míu
);

655 
	`˝röt
("---%*c%s", 
ödít
 + 1, ' ', 
	`míu_gë_¥om±
(
míu
));

656 
c⁄f_chûds
;

658 
chûd_cou¡
++;

659 
vÆ
 = 
	`sym_gë_åi°©e_vÆue
(
sym
);

660 i‡(
	`sym_is_choi˚_vÆue
(
sym
Ë&& 
vÆ
 =
yes
) {

661 
	`˝röt
(":%p", 
míu
);

662 
	`˝röt1
(" ");

664 
ty≥
) {

665 
S_BOOLEAN
:

666 
	`˝röt
("t%p", 
míu
);

667 i‡(
	`sym_is_ch™gabÀ
(
sym
))

668 
	`˝röt1
("[%c]", 
vÆ
 =
no
 ? ' ' : '*');

670 
	`˝röt1
("---");

672 
S_TRISTATE
:

673 
	`˝röt
("t%p", 
míu
);

674 
vÆ
) {

675 
yes
: 
ch
 = '*'; ;

676 
mod
: 
ch
 = 'M'; ;

677 : 
ch
 = ' '; ;

679 i‡(
	`sym_is_ch™gabÀ
(
sym
))

680 
	`˝röt1
("<%c>", 
ch
);

682 
	`˝röt1
("---");

685 
	`˝röt
("s%p", 
míu
);

686 
tmp
 = 
	`˝röt1
("(%s)", 
	`sym_gë_°rög_vÆue
(
sym
));

687 
tmp
 = 
ödít
 -Åmp + 4;

688 i‡(
tmp
 < 0)

689 
tmp
 = 0;

690 
	`˝röt1
("%*c%s%s", 
tmp
, ' ', 
	`míu_gë_¥om±
(
míu
),

691 (
	`sym_has_vÆue
(
sym
Ë|| !
	`sym_is_ch™gabÀ
(sym)) ?

693 
	`˝röt_d⁄e
();

694 
c⁄f_chûds
;

697 
	`˝röt1
("%*c%s%s", 
ödít
 + 1, ' ', 
	`míu_gë_¥om±
(
míu
),

698 (
	`sym_has_vÆue
(
sym
Ë|| !
	`sym_is_ch™gabÀ
(sym)) ?

700 i‡(
míu
->
¥om±
->
ty≥
 =
P_MENU
) {

701 
	`˝röt1
(" --->");

702 
	`˝röt_d⁄e
();

705 
	`˝röt_d⁄e
();

708 
c⁄f_chûds
:

709 
ödít
 +
doöt
;

710 
chûd
 = 
míu
->
li°
; chûd; chûd = chûd->
√xt
)

711 
	`buûd_c⁄f
(
chûd
);

712 
ödít
 -
doöt
;

713 
	}
}

715 
	$c⁄f
(
míu
 *menu)

717 
míu
 *
submíu
;

718 c⁄° *
¥om±
 = 
	`míu_gë_¥om±
(
míu
);

719 
symbﬁ
 *
sym
;

720 
a˘ive_íåy
[40];

721 
°©
, 
ty≥
, 
i
;

723 
	`u∆ök
("lxdialog.scrltmp");

724 
a˘ive_íåy
[0] = 0;

726 
	`˝röt_öô
();

727 
	`˝röt
("--title");

728 
	`˝röt
("%s", 
¥om±
 ?Örom± : 
	`_
("Main Menu"));

729 
	`˝röt
("--menu");

730 
	`˝röt
(
	`_
(
míu_ö°ru˘i⁄s
));

731 
	`˝röt
("%d", 
rows
);

732 
	`˝röt
("%d", 
cﬁs
);

733 
	`˝röt
("%d", 
rows
 - 10);

734 
	`˝röt
("%s", 
a˘ive_íåy
);

735 
cuºít_míu
 = 
míu
;

736 
	`buûd_c⁄f
(
míu
);

737 i‡(!
chûd_cou¡
)

739 i‡(
míu
 =&
roŸmíu
) {

740 
	`˝röt
(":");

741 
	`˝röt
("--- ");

742 
	`˝röt
("L");

743 
	`˝röt
(
	`_
(" Loadán Alternate Configuration File"));

744 
	`˝röt
("S");

745 
	`˝röt
(
	`_
(" Save ConfigurationÅoán Alternate File"));

747 
°©
 = 
	`exec_c⁄f
();

748 i‡(
°©
 < 0)

751 i‡(
°©
 == 1 || stat == 255)

754 
ty≥
 = 
öput_buf
[0];

755 i‡(!
ty≥
)

758 
i
 = 0; 
öput_buf
[i] && !
	`is•a˚
(input_buf[i]); i++)

760 i‡(
i
 >(
a˘ive_íåy
))

761 
i
 = (
a˘ive_íåy
) - 1;

762 
öput_buf
[
i
] = 0;

763 
	`°r˝y
(
a˘ive_íåy
, 
öput_buf
);

765 
sym
 = 
NULL
;

766 
submíu
 = 
NULL
;

767 i‡(
	`ssˇnf
(
öput_buf
 + 1, "%p", &
submíu
) == 1)

768 
sym
 = 
submíu
->sym;

770 
°©
) {

772 
ty≥
) {

774 i‡(
sögÀ_míu_mode
)

775 
submíu
->
d©a
 = (*) () !submenu->data;

777 
	`c⁄f
(
submíu
);

780 i‡(
	`sym_is_choi˚
(
sym
Ë&& 
	`sym_gë_åi°©e_vÆue
(symË=
yes
)

781 
	`c⁄f_choi˚
(
submíu
);

782 i‡(
submíu
->
¥om±
->
ty≥
 =
P_MENU
)

783 
	`c⁄f
(
submíu
);

786 
	`c⁄f_°rög
(
submíu
);

789 
	`c⁄f_lﬂd
();

792 
	`c⁄f_ßve
();

797 i‡(
sym
)

798 
	`show_hñp
(
submíu
);

800 
	`show_hñ±ext
("README", 
	`_
(
mc⁄f_ªadme
));

803 i‡(
ty≥
 == 't') {

804 i‡(
	`sym_£t_åi°©e_vÆue
(
sym
, 
yes
))

806 i‡(
	`sym_£t_åi°©e_vÆue
(
sym
, 
mod
))

807 
	`show_ãxtbox
(
NULL
, 
£tmod_ãxt
, 6, 74);

811 i‡(
ty≥
 == 't')

812 
	`sym_£t_åi°©e_vÆue
(
sym
, 
no
);

815 i‡(
ty≥
 == 't')

816 
	`sym_£t_åi°©e_vÆue
(
sym
, 
mod
);

819 i‡(
ty≥
 == 't')

820 
	`sym_toggÀ_åi°©e_vÆue
(
sym
);

821 i‡(
ty≥
 == 'm')

822 
	`c⁄f
(
submíu
);

825 
	`£¨ch_c⁄f
();

829 
	}
}

831 
	$show_ãxtbox
(c⁄° *
tôÀ
, c⁄° *
ãxt
, 
r
, 
c
)

833 
fd
;

835 
fd
 = 
	`¸ót
(".help.tmp", 0777);

836 
	`wrôe
(
fd
, 
ãxt
, 
	`°æí
(text));

837 
	`˛o£
(
fd
);

838 
	`show_fûe
(".hñp.tmp", 
tôÀ
, 
r
, 
c
);

839 
	`u∆ök
(".help.tmp");

840 
	}
}

842 
	$show_hñ±ext
(c⁄° *
tôÀ
, c⁄° *
ãxt
)

844 
	`show_ãxtbox
(
tôÀ
, 
ãxt
, 0, 0);

845 
	}
}

847 
	$show_hñp
(
míu
 *menu)

849 
g°r
 
hñp
 = 
	`°r_√w
();

850 
symbﬁ
 *
sym
 = 
míu
->sym;

852 i‡(
sym
->
hñp
)

854 i‡(
sym
->
«me
) {

855 
	`°r_¥ötf
(&
hñp
, "CONFIG_%s:\n\n", 
sym
->
«me
);

856 
	`°r_≠≥nd
(&
hñp
, 
	`_
(
sym
->help));

857 
	`°r_≠≥nd
(&
hñp
, "\n");

860 
	`°r_≠≥nd
(&
hñp
, 
nohñp_ãxt
);

862 
	`gë_symbﬁ_°r
(&
hñp
, 
sym
);

863 
	`show_hñ±ext
(
	`míu_gë_¥om±
(
míu
), 
	`°r_gë
(&
hñp
));

864 
	`°r_‰ì
(&
hñp
);

865 
	}
}

867 
	$show_fûe
(c⁄° *
fûíame
, c⁄° *
tôÀ
, 
r
, 
c
)

870 
	`˝röt_öô
();

871 i‡(
tôÀ
) {

872 
	`˝röt
("--title");

873 
	`˝röt
("%s", 
tôÀ
);

875 
	`˝röt
("--textbox");

876 
	`˝röt
("%s", 
fûíame
);

877 
	`˝röt
("%d", 
r
 ?Ñ : 
rows
);

878 
	`˝röt
("%d", 
c
 ? c : 
cﬁs
);

879 } 
	`exec_c⁄f
() < 0);

880 
	}
}

882 
	$c⁄f_choi˚
(
míu
 *menu)

884 c⁄° *
¥om±
 = 
	`míu_gë_¥om±
(
míu
);

885 
míu
 *
chûd
;

886 
symbﬁ
 *
a˘ive
;

887 
°©
;

889 
a˘ive
 = 
	`sym_gë_choi˚_vÆue
(
míu
->
sym
);

891 
	`˝röt_öô
();

892 
	`˝röt
("--title");

893 
	`˝röt
("%s", 
¥om±
 ?Örom± : 
	`_
("Main Menu"));

894 
	`˝röt
("--radiolist");

895 
	`˝röt
(
	`_
(
ødiﬁi°_ö°ru˘i⁄s
));

896 
	`˝röt
("15");

897 
	`˝röt
("70");

898 
	`˝röt
("6");

900 
cuºít_míu
 = 
míu
;

901 
chûd
 = 
míu
->
li°
; chûd; chûd = chûd->
√xt
) {

902 i‡(!
	`míu_is_visibÀ
(
chûd
))

904 
	`˝röt
("%p", 
chûd
);

905 
	`˝röt
("%s", 
	`míu_gë_¥om±
(
chûd
));

906 i‡(
chûd
->
sym
 =
	`sym_gë_choi˚_vÆue
(
míu
->sym))

907 
	`˝röt
("ON");

908 i‡(
chûd
->
sym
 =
a˘ive
)

909 
	`˝röt
("SELECTED");

911 
	`˝röt
("OFF");

914 
°©
 = 
	`exec_c⁄f
();

915 
°©
) {

917 i‡(
	`ssˇnf
(
öput_buf
, "%p", &
chûd
) != 1)

919 
	`sym_£t_åi°©e_vÆue
(
chûd
->
sym
, 
yes
);

922 i‡(
	`ssˇnf
(
öput_buf
, "%p", &
chûd
) == 1) {

923 
	`show_hñp
(
chûd
);

924 
a˘ive
 = 
chûd
->
sym
;

926 
	`show_hñp
(
míu
);

932 
	}
}

934 
	$c⁄f_°rög
(
míu
 *menu)

936 c⁄° *
¥om±
 = 
	`míu_gë_¥om±
(
míu
);

937 
°©
;

940 
	`˝röt_öô
();

941 
	`˝röt
("--title");

942 
	`˝röt
("%s", 
¥om±
 ?Örom± : 
	`_
("Main Menu"));

943 
	`˝röt
("--inputbox");

944 
	`sym_gë_ty≥
(
míu
->
sym
)) {

945 
S_INT
:

946 
	`˝röt
(
	`_
(
öputbox_ö°ru˘i⁄s_öt
));

948 
S_HEX
:

949 
	`˝röt
(
	`_
(
öputbox_ö°ru˘i⁄s_hex
));

951 
S_STRING
:

952 
	`˝röt
(
	`_
(
öputbox_ö°ru˘i⁄s_°rög
));

957 
	`˝röt
("10");

958 
	`˝röt
("75");

959 
	`˝röt
("%s", 
	`sym_gë_°rög_vÆue
(
míu
->
sym
));

960 
°©
 = 
	`exec_c⁄f
();

961 
°©
) {

963 i‡(
	`sym_£t_°rög_vÆue
(
míu
->
sym
, 
öput_buf
))

965 
	`show_ãxtbox
(
NULL
, 
	`_
("You have madeán invalidÉntry."), 5, 43);

968 
	`show_hñp
(
míu
);

974 
	}
}

976 
	$c⁄f_lﬂd
()

978 
°©
;

981 
	`˝röt_öô
();

982 
	`˝röt
("--inputbox");

983 
	`˝röt
(
lﬂd_c⁄fig_ãxt
);

984 
	`˝röt
("11");

985 
	`˝röt
("55");

986 
	`˝röt
("%s", 
fûíame
);

987 
°©
 = 
	`exec_c⁄f
();

988 
°©
) {

990 i‡(!
öput_buf
[0])

992 i‡(!
	`c⁄f_ªad
(
öput_buf
))

994 
	`show_ãxtbox
(
NULL
, 
	`_
("File doesÇotÉxist!"), 5, 38);

997 
	`show_hñ±ext
(
	`_
("Lﬂd A…î«ã C⁄figuøti⁄"), 
lﬂd_c⁄fig_hñp
);

1003 
	}
}

1005 
	$c⁄f_ßve
()

1007 
°©
;

1010 
	`˝röt_öô
();

1011 
	`˝röt
("--inputbox");

1012 
	`˝röt
(
ßve_c⁄fig_ãxt
);

1013 
	`˝röt
("11");

1014 
	`˝röt
("55");

1015 
	`˝röt
("%s", 
fûíame
);

1016 
°©
 = 
	`exec_c⁄f
();

1017 
°©
) {

1019 i‡(!
öput_buf
[0])

1021 i‡(!
	`c⁄f_wrôe
(
öput_buf
))

1023 
	`show_ãxtbox
(
NULL
, 
	`_
("Can't create file! ProbablyáÇonexistent directory."), 5, 60);

1026 
	`show_hñ±ext
(
	`_
("SavêA…î«ã C⁄figuøti⁄"), 
ßve_c⁄fig_hñp
);

1032 
	}
}

1034 
	$c⁄f_˛ónup
()

1036 
	`tc£èâr
(1, 
TCSAFLUSH
, &
ios_‹g
);

1037 
	`u∆ök
(".help.tmp");

1038 
	`u∆ök
("lxdialog.scrltmp");

1039 
	}
}

1041 
	$maö
(
ac
, **
av
)

1043 
symbﬁ
 *
sym
;

1044 *
mode
;

1045 
°©
;

1047 
	`£éoˇÀ
(
LC_ALL
, "");

1048 
	`bödãxtdomaö
(
PACKAGE
, 
LOCALEDIR
);

1049 
	`ãxtdomaö
(
PACKAGE
);

1051 
	`c⁄f_∑r£
(
av
[1]);

1052 
	`c⁄f_ªad
(
NULL
);

1054 
sym
 = 
	`sym_lookup
("KERNELVERSION", 0);

1055 
	`sym_ˇlc_vÆue
(
sym
);

1056 
	`•rötf
(
míu_backtôÀ
, 
	`_
("Linux Kernel v%s Configuration"),

1057 
	`sym_gë_°rög_vÆue
(
sym
));

1059 
mode
 = 
	`gëív
("MENUCONFIG_MODE");

1060 i‡(
mode
) {

1061 i‡(!
	`°rˇ£cmp
(
mode
, "single_menu"))

1062 
sögÀ_míu_mode
 = 1;

1065 
	`tcgë©å
(1, &
ios_‹g
);

1066 
	`©exô
(
c⁄f_˛ónup
);

1067 
	`öô_wsize
();

1068 
	`c⁄f
(&
roŸmíu
);

1071 
	`˝röt_öô
();

1072 
	`˝röt
("--yesno");

1073 
	`˝röt
(
	`_
("Do you wishÅo save yourÇew kernel configuration?"));

1074 
	`˝röt
("5");

1075 
	`˝röt
("60");

1076 
°©
 = 
	`exec_c⁄f
();

1077 } 
°©
 < 0);

1079 i‡(
°©
 == 0) {

1080 i‡(
	`c⁄f_wrôe
(
NULL
)) {

1081 
	`Ârötf
(
°dîr
, 
	`_
("\n\n"

1087 
	`¥ötf
(
	`_
("\n\n"

1092 
	`Ârötf
(
°dîr
, 
	`_
("\n\n"

1098 
	}
}

	@menu.c

6 
	~<°dlib.h
>

7 
	~<°rög.h
>

9 
	#LKC_DIRECT_LINK


	)

10 
	~"lkc.h
"

12 
míu
 
	groŸmíu
;

13 
míu
 **
	gœ°_íåy_±r
;

15 
fûe
 *
	gfûe_li°
;

16 
fûe
 *
	gcuºít_fûe
;

18 
	$míu_w¨n
(
míu
 *míu, c⁄° *
fmt
, ...)

20 
va_li°
 
≠
;

21 
	`va_°¨t
(
≠
, 
fmt
);

22 
	`Ârötf
(
°dîr
, "%s:%d:w¨nög: ", 
míu
->
fûe
->
«me
, míu->
löío
);

23 
	`vÂrötf
(
°dîr
, 
fmt
, 
≠
);

24 
	`Ârötf
(
°dîr
, "\n");

25 
	`va_íd
(
≠
);

26 
	}
}

28 
	$¥›_w¨n
(
¥›îty
 *
¥›
, c⁄° *
fmt
, ...)

30 
va_li°
 
≠
;

31 
	`va_°¨t
(
≠
, 
fmt
);

32 
	`Ârötf
(
°dîr
, "%s:%d:w¨nög: ", 
¥›
->
fûe
->
«me
,Ör›->
löío
);

33 
	`vÂrötf
(
°dîr
, 
fmt
, 
≠
);

34 
	`Ârötf
(
°dîr
, "\n");

35 
	`va_íd
(
≠
);

36 
	}
}

38 
	$míu_öô
()

40 
cuºít_íåy
 = 
cuºít_míu
 = &
roŸmíu
;

41 
œ°_íåy_±r
 = &
roŸmíu
.
li°
;

42 
	}
}

44 
	$míu_add_íåy
(
symbﬁ
 *
sym
)

46 
míu
 *menu;

48 
míu
 = 
	`mÆloc
((*menu));

49 
	`mem£t
(
míu
, 0, (*menu));

50 
míu
->
sym
 = sym;

51 
míu
->
∑ª¡
 = 
cuºít_míu
;

52 
míu
->
fûe
 = 
cuºít_fûe
;

53 
míu
->
löío
 = 
	`zc⁄f_löío
();

55 *
œ°_íåy_±r
 = 
míu
;

56 
œ°_íåy_±r
 = &
míu
->
√xt
;

57 
cuºít_íåy
 = 
míu
;

58 
	}
}

60 
	$míu_íd_íåy
()

62 
	}
}

64 
míu
 *
	$míu_add_míu
()

66 
	`míu_íd_íåy
();

67 
œ°_íåy_±r
 = &
cuºít_íåy
->
li°
;

68  
cuºít_míu
 = 
cuºít_íåy
;

69 
	}
}

71 
	$míu_íd_míu
()

73 
œ°_íåy_±r
 = &
cuºít_míu
->
√xt
;

74 
cuºít_míu
 = cuºít_míu->
∑ª¡
;

75 
	}
}

77 
ex¥
 *
	$míu_check_dï
(
ex¥
 *
e
)

79 i‡(!
e
)

80  
e
;

82 
e
->
ty≥
) {

83 
E_NOT
:

84 
e
->
À·
.
ex¥
 = 
	`míu_check_dï
(e->left.expr);

86 
E_OR
:

87 
E_AND
:

88 
e
->
À·
.
ex¥
 = 
	`míu_check_dï
(e->left.expr);

89 
e
->
right
.
ex¥
 = 
	`míu_check_dï
(e->right.expr);

91 
E_SYMBOL
:

93 i‡(
e
->
À·
.
sym
 =&
symbﬁ_mod
)

94  
	`ex¥_Æloc_™d
(
e
, 
	`ex¥_Æloc_symbﬁ
(
moduÀs_sym
));

99  
e
;

100 
	}
}

102 
	$míu_add_dï
(
ex¥
 *
dï
)

104 
cuºít_íåy
->
dï
 = 
	`ex¥_Æloc_™d
(cuºít_íåy->dï, 
	`míu_check_dï
(dep));

105 
	}
}

107 
	$míu_£t_ty≥
(
ty≥
)

109 
symbﬁ
 *
sym
 = 
cuºít_íåy
->sym;

111 i‡(
sym
->
ty≥
 ==Åype)

113 i‡(
sym
->
ty≥
 =
S_UNKNOWN
) {

114 
sym
->
ty≥
 =Åype;

117 
	`míu_w¨n
(
cuºít_íåy
, "type of '%s'Ñedefined from '%s'Åo '%s'\n",

118 
sym
->
«me
 ? sym->name : "<choice>",

119 
	`sym_ty≥_«me
(
sym
->
ty≥
), sym_type_name(type));

120 
	}
}

122 
¥›îty
 *
	$míu_add_¥›
(
¥›_ty≥
 
ty≥
, *
¥om±
, 
ex¥
 *ex¥, ex¥ *
dï
)

124 
¥›îty
 *
¥›
 = 
	`¥›_Æloc
(
ty≥
, 
cuºít_íåy
->
sym
);

126 
¥›
->
míu
 = 
cuºít_íåy
;

127 
¥›
->
ãxt
 = 
¥om±
;

128 
¥›
->
ex¥
 =Éxpr;

129 
¥›
->
visibÀ
.
ex¥
 = 
	`míu_check_dï
(
dï
);

131 i‡(
¥om±
) {

132 i‡(
cuºít_íåy
->
¥om±
)

133 
	`míu_w¨n
(
cuºít_íåy
, "promptÑedefined\n");

134 
cuºít_íåy
->
¥om±
 = 
¥›
;

137  
¥›
;

138 
	}
}

140 
¥›îty
 *
	$míu_add_¥om±
(
¥›_ty≥
 
ty≥
, *
¥om±
, 
ex¥
 *
dï
)

142  
	`míu_add_¥›
(
ty≥
, 
¥om±
, 
NULL
, 
dï
);

143 
	}
}

145 
	$míu_add_ex¥
(
¥›_ty≥
 
ty≥
, 
ex¥
 *ex¥, ex¥ *
dï
)

147 
	`míu_add_¥›
(
ty≥
, 
NULL
, 
ex¥
, 
dï
);

148 
	}
}

150 
	$míu_add_symbﬁ
(
¥›_ty≥
 
ty≥
, 
symbﬁ
 *
sym
, 
ex¥
 *
dï
)

152 
	`míu_add_¥›
(
ty≥
, 
NULL
, 
	`ex¥_Æloc_symbﬁ
(
sym
), 
dï
);

153 
	}
}

155 
	$míu_ønge_vÆid_sym
(
symbﬁ
 *
sym
, symbﬁ *
sym2
)

157  
sym2
->
ty≥
 =
S_INT
 || sym2->ty≥ =
S_HEX
 ||

158 (
sym2
->
ty≥
 =
S_UNKNOWN
 && 
	`sym_°rög_vÆid
(
sym
, sym2->
«me
));

159 
	}
}

161 
	$sym_check_¥›
(
symbﬁ
 *
sym
)

163 
¥›îty
 *
¥›
;

164 
symbﬁ
 *
sym2
;

165 
¥›
 = 
sym
->¥›;Ör›;Ör› =Ör›->
√xt
) {

166 
¥›
->
ty≥
) {

167 
P_DEFAULT
:

168 i‡((
sym
->
ty≥
 =
S_STRING
 || sym->ty≥ =
S_INT
 || sym->ty≥ =
S_HEX
) &&

169 
¥›
->
ex¥
->
ty≥
 !
E_SYMBOL
)

170 
	`¥›_w¨n
(
¥›
,

172 " mu° bê®sögÀ symbﬁ", 
sym
->
«me
);

174 
P_SELECT
:

175 
sym2
 = 
	`¥›_gë_symbﬁ
(
¥›
);

176 i‡(
sym
->
ty≥
 !
S_BOOLEAN
 && sym->ty≥ !
S_TRISTATE
)

177 
	`¥›_w¨n
(
¥›
,

179 "nŸ boﬁó¿‹Åri°©e", 
sym
->
«me
);

180 i‡(
sym2
->
ty≥
 =
S_UNKNOWN
)

181 
	`¥›_w¨n
(
¥›
,

184 
sym
->
«me
, 
sym2
->name);

185 i‡(
sym2
->
ty≥
 !
S_BOOLEAN
 && sym2->ty≥ !
S_TRISTATE
)

186 
	`¥›_w¨n
(
¥›
,

189 "åi°©êty≥", 
sym2
->
«me
);

191 
P_RANGE
:

192 i‡(
sym
->
ty≥
 !
S_INT
 && sym->ty≥ !
S_HEX
)

193 
	`¥›_w¨n
(
¥›
, "range is onlyállowed "

195 i‡(!
	`míu_ønge_vÆid_sym
(
sym
, 
¥›
->
ex¥
->
À·
.sym) ||

196 !
	`míu_ønge_vÆid_sym
(
sym
, 
¥›
->
ex¥
->
right
.sym))

197 
	`¥›_w¨n
(
¥›
, "range is invalid");

203 
	}
}

205 
	$míu_föÆize
(
míu
 *
∑ª¡
)

207 
míu
 *míu, *
œ°_míu
;

208 
symbﬁ
 *
sym
;

209 
¥›îty
 *
¥›
;

210 
ex¥
 *
∑ª¡dï
, *
ba£dï
, *
dï
, *
dï2
, **
ï
;

212 
sym
 = 
∑ª¡
->sym;

213 i‡(
∑ª¡
->
li°
) {

214 i‡(
sym
 && 
	`sym_is_choi˚
(sym)) {

216 
míu
 = 
∑ª¡
->
li°
; míu; míu = míu->
√xt
) {

217 i‡(
míu
->
sym
) {

218 
cuºít_íåy
 = 
∑ª¡
;

219 
	`míu_£t_ty≥
(
míu
->
sym
->
ty≥
);

220 
cuºít_íåy
 = 
míu
;

221 
	`míu_£t_ty≥
(
sym
->
ty≥
);

225 
∑ª¡dï
 = 
	`ex¥_Æloc_symbﬁ
(
sym
);

226 } i‡(
∑ª¡
->
¥om±
)

227 
∑ª¡dï
 = 
∑ª¡
->
¥om±
->
visibÀ
.
ex¥
;

229 
∑ª¡dï
 = 
∑ª¡
->
dï
;

231 
míu
 = 
∑ª¡
->
li°
; míu; míu = míu->
√xt
) {

232 
ba£dï
 = 
	`ex¥_å™sf‹m
(
míu
->
dï
);

233 
ba£dï
 = 
	`ex¥_Æloc_™d
(
	`ex¥_c›y
(
∑ª¡dï
), basedep);

234 
ba£dï
 = 
	`ex¥_ñimö©e_dups
(basedep);

235 
míu
->
dï
 = 
ba£dï
;

236 i‡(
míu
->
sym
)

237 
¥›
 = 
míu
->
sym
->prop;

239 
¥›
 = 
míu
->
¥om±
;

240 ; 
¥›
;Ör› =Ör›->
√xt
) {

241 i‡(
¥›
->
míu
 != menu)

243 
dï
 = 
	`ex¥_å™sf‹m
(
¥›
->
visibÀ
.
ex¥
);

244 
dï
 = 
	`ex¥_Æloc_™d
(
	`ex¥_c›y
(
ba£dï
), dep);

245 
dï
 = 
	`ex¥_ñimö©e_dups
(dep);

246 i‡(
míu
->
sym
 && míu->sym->
ty≥
 !
S_TRISTATE
)

247 
dï
 = 
	`ex¥_å™s_boﬁ
(dep);

248 
¥›
->
visibÀ
.
ex¥
 = 
dï
;

249 i‡(
¥›
->
ty≥
 =
P_SELECT
) {

250 
symbﬁ
 *
es
 = 
	`¥›_gë_symbﬁ
(
¥›
);

251 
es
->
ªv_dï
.
ex¥
 = 
	`ex¥_Æloc_‹
(es->rev_dep.expr,

252 
	`ex¥_Æloc_™d
(
	`ex¥_Æloc_symbﬁ
(
míu
->
sym
), 
	`ex¥_c›y
(
dï
)));

256 
míu
 = 
∑ª¡
->
li°
; míu; míu = míu->
√xt
)

257 
	`míu_föÆize
(
míu
);

258 } i‡(
sym
) {

259 
ba£dï
 = 
∑ª¡
->
¥om±
 ?Ö¨ít->¥om±->
visibÀ
.
ex¥
 : 
NULL
;

260 
ba£dï
 = 
	`ex¥_å™s_com∑ª
(ba£dï, 
E_UNEQUAL
, &
symbﬁ_no
);

261 
ba£dï
 = 
	`ex¥_ñimö©e_dups
(
	`ex¥_å™sf‹m
(basedep));

262 
œ°_míu
 = 
NULL
;

263 
míu
 = 
∑ª¡
->
√xt
; menu; menu = menu->next) {

264 
dï
 = 
míu
->
¥om±
 ? míu->¥om±->
visibÀ
.
ex¥
 : menu->dep;

265 i‡(!
	`ex¥_c⁄èös_symbﬁ
(
dï
, 
sym
))

267 i‡(
	`ex¥_dïíds_symbﬁ
(
dï
, 
sym
))

268 
√xt
;

269 
dï
 = 
	`ex¥_å™s_com∑ª
(dï, 
E_UNEQUAL
, &
symbﬁ_no
);

270 
dï
 = 
	`ex¥_ñimö©e_dups
(
	`ex¥_å™sf‹m
(dep));

271 
dï2
 = 
	`ex¥_c›y
(
ba£dï
);

272 
	`ex¥_ñimö©e_eq
(&
dï
, &
dï2
);

273 
	`ex¥_‰ì
(
dï
);

274 i‡(!
	`ex¥_is_yes
(
dï2
)) {

275 
	`ex¥_‰ì
(
dï2
);

278 
	`ex¥_‰ì
(
dï2
);

279 
√xt
:

280 
	`míu_föÆize
(
míu
);

281 
míu
->
∑ª¡
 =Öarent;

282 
œ°_míu
 = 
míu
;

284 i‡(
œ°_míu
) {

285 
∑ª¡
->
li°
 =Ö¨ít->
√xt
;

286 
∑ª¡
->
√xt
 = 
œ°_míu
->next;

287 
œ°_míu
->
√xt
 = 
NULL
;

290 
míu
 = 
∑ª¡
->
li°
; míu; míu = míu->
√xt
) {

291 i‡(
sym
 && 
	`sym_is_choi˚
(symË&& 
míu
->sym) {

292 
míu
->
sym
->
Êags
 |
SYMBOL_CHOICEVAL
;

293 i‡(!
míu
->
¥om±
)

294 
	`míu_w¨n
(
míu
, "choice value must haveáÖrompt");

295 
¥›
 = 
míu
->
sym
->¥›;Ör›;Ör› =Ör›->
√xt
) {

296 i‡(
¥›
->
ty≥
 =
P_PROMPT
 &&Ör›->
míu
 != menu) {

297 
	`¥›_w¨n
(
¥›
, "choice values "

301 i‡(
¥›
->
ty≥
 =
P_DEFAULT
)

302 
	`¥›_w¨n
(
¥›
, "defaults for choice "

305 
cuºít_íåy
 = 
míu
;

306 
	`míu_£t_ty≥
(
sym
->
ty≥
);

307 
	`míu_add_symbﬁ
(
P_CHOICE
, 
sym
, 
NULL
);

308 
¥›
 = 
	`sym_gë_choi˚_¥›
(
sym
);

309 
ï
 = &
¥›
->
ex¥
; *ï;É∞&(*ï)->
À·
.expr)

311 *
ï
 = 
	`ex¥_Æloc_⁄e
(
E_CHOICE
, 
NULL
);

312 (*
ï
)->
right
.
sym
 = 
míu
->sym;

314 i‡(
míu
->
li°
 && (!míu->
¥om±
 || !míu->¥om±->
ãxt
)) {

315 
œ°_míu
 = 
míu
->
li°
; ;Üa°_míu =Üa°_míu->
√xt
) {

316 
œ°_míu
->
∑ª¡
 =Öarent;

317 i‡(!
œ°_míu
->
√xt
)

320 
œ°_míu
->
√xt
 = 
míu
->next;

321 
míu
->
√xt
 = míu->
li°
;

322 
míu
->
li°
 = 
NULL
;

326 i‡(
sym
 && !(sym->
Êags
 & 
SYMBOL_WARNED
)) {

327 i‡(
sym
->
ty≥
 =
S_UNKNOWN
)

328 
	`míu_w¨n
(
∑ª¡
, "config symbol defined "

331 i‡(
	`sym_is_choi˚
(
sym
Ë&& !
∑ª¡
->
¥om±
)

332 
	`míu_w¨n
(
∑ª¡
, "choice must haveáÖrompt\n");

335 
	`sym_check_¥›
(
sym
);

336 
sym
->
Êags
 |
SYMBOL_WARNED
;

339 i‡(
sym
 && !
	`sym_is_›ti⁄Æ
(symË&& 
∑ª¡
->
¥om±
) {

340 
sym
->
ªv_dï
.
ex¥
 = 
	`ex¥_Æloc_‹
(sym->rev_dep.expr,

341 
	`ex¥_Æloc_™d
(
∑ª¡
->
¥om±
->
visibÀ
.
ex¥
,

342 
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_mod
)));

344 
	}
}

346 
boﬁ
 
	$míu_is_visibÀ
(
míu
 *menu)

348 
míu
 *
chûd
;

349 
symbﬁ
 *
sym
;

350 
åi°©e
 
visibÀ
;

352 i‡(!
míu
->
¥om±
)

353  
Ál£
;

354 
sym
 = 
míu
->sym;

355 i‡(
sym
) {

356 
	`sym_ˇlc_vÆue
(
sym
);

357 
visibÀ
 = 
míu
->
¥om±
->visibÀ.
åi
;

359 
visibÀ
 = 
míu
->
¥om±
->visibÀ.
åi
 = 
	`ex¥_ˇlc_vÆue
(míu->¥om±->visibÀ.
ex¥
);

361 i‡(
visibÀ
 !
no
)

362  
åue
;

363 i‡(!
sym
 || 
	`sym_gë_åi°©e_vÆue
(
míu
->symË=
no
)

364  
Ál£
;

366 
chûd
 = 
míu
->
li°
; chûd; chûd = chûd->
√xt
)

367 i‡(
	`míu_is_visibÀ
(
chûd
))

368  
åue
;

369  
Ál£
;

370 
	}
}

372 c⁄° *
	$míu_gë_¥om±
(
míu
 *menu)

374 i‡(
míu
->
¥om±
)

375  
	`_
(
míu
->
¥om±
->
ãxt
);

376 i‡(
míu
->
sym
)

377  
	`_
(
míu
->
sym
->
«me
);

378  
NULL
;

379 
	}
}

381 
míu
 *
	$míu_gë_roŸ_míu
(
míu
 *menu)

383  &
roŸmíu
;

384 
	}
}

386 
míu
 *
	$míu_gë_∑ª¡_míu
(
míu
 *menu)

388 
¥›_ty≥
 
ty≥
;

390 ; 
míu
 !&
roŸmíu
; míu = míu->
∑ª¡
) {

391 
ty≥
 = 
míu
->
¥om±
 ? menu->prompt->type : 0;

392 i‡(
ty≥
 =
P_MENU
)

395  
míu
;

396 
	}
}

	@qconf.cc

6 
	~<q≠∂iˇti⁄.h
>

7 
	~<qmaöwödow.h
>

8 
	~<qtoﬁb¨.h
>

9 
	~<qvbox.h
>

10 
	~<q•lôãr.h
>

11 
	~<qli°võw.h
>

12 
	~<qãxtvõw.h
>

13 
	~<qlöìdô.h
>

14 
	~<qmíub¨.h
>

15 
	~<qmesßgebox.h
>

16 
	~<qa˘i⁄.h
>

17 
	~<qhódî.h
>

18 
	~<qfûedülog.h
>

19 
	~<qªgexp.h
>

21 
	~<°dlib.h
>

23 
	~"lkc.h
"

24 
	~"qc⁄f.h
"

26 
	~"qc⁄f.moc
"

27 
	~"images.c
"

29 #ifde‡
_


30 #unde‡
_


31 
	#_
 
qgëãxt


	)

34 
QAµliˇti⁄
 *
	gc⁄figAµ
;

36 
ölöe
 
QSåög
 
	$qgëãxt
(c⁄° * 
°r
)

38  
QSåög
::
	`‰omLoˇl8Bô
(
	`gëãxt
(
°r
));

39 
	}
}

41 
ölöe
 
QSåög
 
	$qgëãxt
(c⁄° 
QSåög
& 
°r
)

43  
QSåög
::
	`‰omLoˇl8Bô
(
	`gëãxt
(
°r
.
	`œtö1
()));

44 
	}
}

46 
	gC⁄figSëtögs
::
	$C⁄figSëtögs
()

47 : 
	`showAŒ
(
Ál£
), 
	`showName
(Ál£), 
	`showR™ge
(Ál£), 
	$showD©a
(
Ál£
)

49 
	}
}

51 #i‡
QT_VERSION
 >= 300

55 
	gC⁄figSëtögs
::
	$ªadLi°Sëtögs
()

57 
showAŒ
 = 
	`ªadBoﬁE¡ry
("/kc⁄fig/qc⁄f/showAŒ", 
Ál£
);

58 
showName
 = 
	`ªadBoﬁE¡ry
("/kc⁄fig/qc⁄f/showName", 
Ál£
);

59 
showR™ge
 = 
	`ªadBoﬁE¡ry
("/kc⁄fig/qc⁄f/showR™ge", 
Ál£
);

60 
showD©a
 = 
	`ªadBoﬁE¡ry
("/kc⁄fig/qc⁄f/showD©a", 
Ál£
);

61 
	}
}

66 
	gQVÆueLi°
<> 
	gC⁄figSëtögs
::
	$ªadSizes
(c⁄° 
QSåög
& 
key
, 
boﬁ
 *
ok
)

68 
QVÆueLi°
<> 
ªsu…
;

69 
QSåögLi°
 
íåyLi°
 = 
	`ªadLi°E¡ry
(
key
, 
ok
);

70 i‡(
ok
) {

71 
QSåögLi°
::
Iãøt‹
 
ô
;

72 
ô
 = 
íåyLi°
.
	`begö
(); ià!íåyLi°.
	`íd
(); ++it)

73 
ªsu…
.
	`push_back
((*
ô
).
	`toI¡
());

76  
ªsu…
;

77 
	}
}

82 
boﬁ
 
	gC⁄figSëtögs
::
wrôeSizes
(c⁄° 
QSåög
& 
key
, c⁄° 
QVÆueLi°
<>& 
vÆue
)

84 
QSåögLi°
 
	g°rögLi°
;

85 
	gQVÆueLi°
<>::
C⁄°Iãøt‹
 
ô
;

87 
	gô
 = 
vÆue
.
begö
(); ià!vÆue.
íd
(); ++it)

88 
	g°rögLi°
.
push_back
(
QSåög
::
numbî
(*
ô
));

89  
wrôeE¡ry
(
key
, 
°rögLi°
);

101 
	gãm∂©e
 <
˛ass
 
	gP
>

102 
	gC⁄figLi°
::
	$upd©eMíuLi°
(
P
* 
∑ª¡
, 
míu
* menu)

104 
míu
* 
chûd
;

105 
C⁄figIãm
* 
ôem
;

106 
C⁄figIãm
* 
œ°
;

107 
boﬁ
 
visibÀ
;

108 
¥›_ty≥
 
ty≥
;

110 i‡(!
míu
) {

111 (
ôem
 = 
∑ª¡
->
	`fú°Chûd
()))

112 
dñëe
 
ôem
;

116 
œ°
 = 
∑ª¡
->
	`fú°Chûd
();

117 i‡(
œ°
 && !œ°->
goP¨ít
)

118 
œ°
 = 0;

119 
chûd
 = 
míu
->
li°
; chûd; chûd = chûd->
√xt
) {

120 
ôem
 = 
œ°
 ?Üa°->
	`√xtSiblög
(Ë: 
∑ª¡
->
	`fú°Chûd
();

121 
ty≥
 = 
chûd
->
¥om±
 ? chûd->¥om±->ty≥ : 
P_UNKNOWN
;

123 
mode
) {

124 
míuMode
:

125 i‡(!(
chûd
->
Êags
 & 
MENU_ROOT
))

126 
hide
;

128 
symbﬁMode
:

129 i‡(
chûd
->
Êags
 & 
MENU_ROOT
)

130 
hide
;

136 
visibÀ
 = 
	`míu_is_visibÀ
(
chûd
);

137 i‡(
showAŒ
 || 
visibÀ
) {

138 i‡(!
ôem
 || iãm->
míu
 !
chûd
)

139 
ôem
 = 
√w
 
	`C⁄figIãm
(
∑ª¡
, 
œ°
, 
chûd
, 
visibÀ
);

141 
ôem
->
	`ã°Upd©eMíu
(
visibÀ
);

143 i‡(
mode
 =
fuŒMode
 || modê=
míuMode
 || 
ty≥
 !
P_MENU
)

144 
	`upd©eMíuLi°
(
ôem
, 
chûd
);

146 
	`upd©eMíuLi°
(
ôem
, 0);

147 
œ°
 = 
ôem
;

150 
hide
:

151 i‡(
ôem
 && iãm->
míu
 =
chûd
) {

152 
œ°
 = 
∑ª¡
->
	`fú°Chûd
();

153 i‡(
œ°
 =
ôem
)

154 
œ°
 = 0;

155 
œ°
->
	`√xtSiblög
(Ë!
ôem
)

156 
œ°
 =Üa°->
	`√xtSiblög
();

157 
dñëe
 
ôem
;

160 
	}
}

162 #i‡
QT_VERSION
 >= 300

167 
	gC⁄figIãm
::
	$okRíame
(
cﬁ
)

169 
P¨ít
::
	`okRíame
(
cﬁ
);

170 
	`sym_£t_°rög_vÆue
(
míu
->
sym
, 
	`ãxt
(
d©aCﬁIdx
).
	`œtö1
());

171 
	}
}

177 
	gC⁄figIãm
::
	$upd©eMíu
()

179 
C⁄figLi°
* 
li°
;

180 
symbﬁ
* 
sym
;

181 
¥›îty
 *
¥›
;

182 
QSåög
 
¥om±
;

183 
ty≥
;

184 
åi°©e
 
ex¥
;

186 
li°
 = 
	`li°Võw
();

187 i‡(
goP¨ít
) {

188 
	`£tPixm≠
(
¥om±CﬁIdx
, 
li°
->
míuBackPix
);

189 
¥om±
 = "..";

190 
£t_¥om±
;

193 
sym
 = 
míu
->sym;

194 
¥›
 = 
míu
->
¥om±
;

195 
¥om±
 = 
QSåög
::
	`‰omLoˇl8Bô
(
	`míu_gë_¥om±
(
míu
));

197 i‡(
¥›
Ë¥›->
ty≥
) {

198 
P_MENU
:

199 i‡(
li°
->
mode
 =
sögÀMode
 ||Üi°->modê=
symbﬁMode
) {

203 i‡(
sym
 && 
li°
->
roŸE¡ry
 =
míu
)

205 
	`£tPixm≠
(
¥om±CﬁIdx
, 
li°
->
míuPix
);

207 i‡(
sym
)

209 
	`£tPixm≠
(
¥om±CﬁIdx
, 0);

211 
£t_¥om±
;

212 
P_COMMENT
:

213 
	`£tPixm≠
(
¥om±CﬁIdx
, 0);

214 
£t_¥om±
;

218 i‡(!
sym
)

219 
£t_¥om±
;

221 
	`£tText
(
«meCﬁIdx
, 
QSåög
::
	`‰omLoˇl8Bô
(
sym
->
«me
));

223 
ty≥
 = 
	`sym_gë_ty≥
(
sym
);

224 
ty≥
) {

225 
S_BOOLEAN
:

226 
S_TRISTATE
:

227 
ch
;

229 i‡(!
	`sym_is_ch™gabÀ
(
sym
Ë&& !
li°
->
showAŒ
) {

230 
	`£tPixm≠
(
¥om±CﬁIdx
, 0);

231 
	`£tText
(
noCﬁIdx
, 
QSåög
::
nuŒ
);

232 
	`£tText
(
modCﬁIdx
, 
QSåög
::
nuŒ
);

233 
	`£tText
(
yesCﬁIdx
, 
QSåög
::
nuŒ
);

236 
ex¥
 = 
	`sym_gë_åi°©e_vÆue
(
sym
);

237 
ex¥
) {

238 
yes
:

239 i‡(
	`sym_is_choi˚_vÆue
(
sym
Ë&& 
ty≥
 =
S_BOOLEAN
)

240 
	`£tPixm≠
(
¥om±CﬁIdx
, 
li°
->
choi˚YesPix
);

242 
	`£tPixm≠
(
¥om±CﬁIdx
, 
li°
->
symbﬁYesPix
);

243 
	`£tText
(
yesCﬁIdx
, "Y");

244 
ch
 = 'Y';

246 
mod
:

247 
	`£tPixm≠
(
¥om±CﬁIdx
, 
li°
->
symbﬁModPix
);

248 
	`£tText
(
modCﬁIdx
, "M");

249 
ch
 = 'M';

252 i‡(
	`sym_is_choi˚_vÆue
(
sym
Ë&& 
ty≥
 =
S_BOOLEAN
)

253 
	`£tPixm≠
(
¥om±CﬁIdx
, 
li°
->
choi˚NoPix
);

255 
	`£tPixm≠
(
¥om±CﬁIdx
, 
li°
->
symbﬁNoPix
);

256 
	`£tText
(
noCﬁIdx
, "N");

257 
ch
 = 'N';

260 i‡(
ex¥
 !
no
)

261 
	`£tText
(
noCﬁIdx
, 
	`sym_åi°©e_wôhö_ønge
(
sym
, 
no
) ? "_" : 0);

262 i‡(
ex¥
 !
mod
)

263 
	`£tText
(
modCﬁIdx
, 
	`sym_åi°©e_wôhö_ønge
(
sym
, 
mod
) ? "_" : 0);

264 i‡(
ex¥
 !
yes
)

265 
	`£tText
(
yesCﬁIdx
, 
	`sym_åi°©e_wôhö_ønge
(
sym
, 
yes
) ? "_" : 0);

267 
	`£tText
(
d©aCﬁIdx
, 
	`QCh¨
(
ch
));

269 
S_INT
:

270 
S_HEX
:

271 
S_STRING
:

272 c⁄° * 
d©a
;

274 
d©a
 = 
	`sym_gë_°rög_vÆue
(
sym
);

276 #i‡
QT_VERSION
 >= 300

277 
i
 = 
li°
->
	`m≠Idx
(
d©aCﬁIdx
);

278 i‡(
i
 >= 0)

279 
	`£tRíameE«bÀd
(
i
, 
TRUE
);

281 
	`£tText
(
d©aCﬁIdx
, 
d©a
);

282 i‡(
ty≥
 =
S_STRING
)

283 
¥om±
 = 
	`QSåög
("%1: %2").
	`¨g
’rom±).¨g(
d©a
);

285 
¥om±
 = 
	`QSåög
("(%2Ë%1").
	`¨g
’rom±).¨g(
d©a
);

288 i‡(!
	`sym_has_vÆue
(
sym
Ë&& 
visibÀ
)

289 
¥om±
 += " (NEW)";

290 
£t_¥om±
:

291 
	`£tText
(
¥om±CﬁIdx
, 
¥om±
);

292 
	}
}

294 
	gC⁄figIãm
::
	$ã°Upd©eMíu
(
boﬁ
 
v
)

296 
C⁄figIãm
* 
i
;

298 
visibÀ
 = 
v
;

299 i‡(!
míu
)

302 
	`sym_ˇlc_vÆue
(
míu
->
sym
);

303 i‡(
míu
->
Êags
 & 
MENU_CHANGED
) {

305 
míu
->
Êags
 &~
MENU_CHANGED
;

306 
i
 = (
C⁄figIãm
*)
míu
->
d©a
; i; i = i->
√xtIãm
)

307 
i
->
	`upd©eMíu
();

308 } i‡(
	`li°Võw
()->
upd©eAŒ
)

309 
	`upd©eMíu
();

310 
	}
}

312 
	gC⁄figIãm
::
	$∑ötCñl
(
QPaöãr
* 
p
, c⁄° 
QCﬁ‹Group
& 
cg
, 
cﬁumn
, 
width
, 
Æign
)

314 
C⁄figLi°
* 
li°
 = 
	`li°Võw
();

316 i‡(
visibÀ
) {

317 i‡(
	`isSñe˘ed
(Ë&& !
li°
->
	`hasFocus
(Ë&&Üi°->
mode
 =
míuMode
)

318 
P¨ít
::
	`∑ötCñl
(
p
, 
li°
->
öa˘ivedCﬁ‹Group
, 
cﬁumn
, 
width
, 
Æign
);

320 
P¨ít
::
	`∑ötCñl
(
p
, 
cg
, 
cﬁumn
, 
width
, 
Æign
);

322 
P¨ít
::
	`∑ötCñl
(
p
, 
li°
->
dißbÀdCﬁ‹Group
, 
cﬁumn
, 
width
, 
Æign
);

323 
	}
}

328 
	gC⁄figIãm
::
	$öô
()

330 i‡(
míu
) {

331 
C⁄figLi°
* 
li°
 = 
	`li°Võw
();

332 
√xtIãm
 = (
C⁄figIãm
*)
míu
->
d©a
;

333 
míu
->
d©a
 = 
this
;

335 i‡(
li°
->
mode
 !
fuŒMode
)

336 
	`£tO≥n
(
TRUE
);

337 
	`sym_ˇlc_vÆue
(
míu
->
sym
);

339 
	`upd©eMíu
();

340 
	}
}

345 
	gC⁄figIãm
::~
	$C⁄figIãm
()

347 i‡(
míu
) {

348 
C⁄figIãm
** 
ù
 = (C⁄figIãm**)&
míu
->
d©a
;

349 ; *
ù
; i∞&(*ù)->
√xtIãm
) {

350 i‡(*
ù
 =
this
) {

351 *
ù
 = 
√xtIãm
;

356 
	}
}

358 
	gC⁄figLöeEdô
::
	$show
(
C⁄figIãm
* 
i
)

360 
ôem
 = 
i
;

361 i‡(
	`sym_gë_°rög_vÆue
(
ôem
->
míu
->
sym
))

362 
	`£tText
(
QSåög
::
	`‰omLoˇl8Bô
(
	`sym_gë_°rög_vÆue
(
ôem
->
míu
->
sym
)));

364 
	`£tText
(
QSåög
::
nuŒ
);

365 
P¨ít
::
	`show
();

366 
	`£tFocus
();

367 
	}
}

369 
	gC⁄figLöeEdô
::
	$keyPªssEvít
(
QKeyEvít
* 
e
)

371 
e
->
	`key
()) {

372 
Key_Esˇ≥
:

374 
Key_Rëu∫
:

375 
Key_E¡î
:

376 
	`sym_£t_°rög_vÆue
(
ôem
->
míu
->
sym
, 
	`ãxt
().
	`œtö1
());

377 
	`∑ª¡
()->
	`upd©eLi°
(
ôem
);

380 
P¨ít
::
	`keyPªssEvít
(
e
);

383 
e
->
	`ac˚±
();

384 
	`∑ª¡
()->
li°
->
	`£tFocus
();

385 
	`hide
();

386 
	}
}

388 
	gC⁄figLi°
::
	$C⁄figLi°
(
C⁄figVõw
* 
p
, 
C⁄figMaöWödow
* 
cv
, 
C⁄figSëtögs
* 
c⁄figSëtögs
)

389 : 
	`P¨ít
(
p
), 
	`cvõw
(
cv
),

390 
	`upd©eAŒ
(
Ál£
),

391 
	`symbﬁYesPix
(
xpm_symbﬁ_yes
), 
	`symbﬁModPix
(
xpm_symbﬁ_mod
), 
	`symbﬁNoPix
(
xpm_symbﬁ_no
),

392 
	`choi˚YesPix
(
xpm_choi˚_yes
), 
	`choi˚NoPix
(
xpm_choi˚_no
),

393 
	`míuPix
(
xpm_míu
), 
	`míuInvPix
(
xpm_míu_öv
), 
	`míuBackPix
(
xpm_míuback
), 
	`voidPix
(
xpm_void
),

394 
	`showAŒ
(
Ál£
), 
	`showName
(Ál£), 
	`showR™ge
(Ál£), 
	`showD©a
(false),

395 
	$roŸE¡ry
(0)

397 
i
;

399 
	`£tS‹tög
(-1);

400 
	`£tRoŸIsDec‹©ed
(
TRUE
);

401 
dißbÀdCﬁ‹Group
 = 
	`∑Àâe
().
	`a˘ive
();

402 
dißbÀdCﬁ‹Group
.
	`£tCﬁ‹
(
QCﬁ‹Group
::
Text
, 
	`∑Àâe
().
	`dißbÀd
().
	`ãxt
());

403 
öa˘ivedCﬁ‹Group
 = 
	`∑Àâe
().
	`a˘ive
();

404 
öa˘ivedCﬁ‹Group
.
	`£tCﬁ‹
(
QCﬁ‹Group
::
Highlight
, 
	`∑Àâe
().
	`dißbÀd
().
	`highlight
());

406 
	`c⁄√˘
(
this
, 
	`SIGNAL
(
	`£À˘i⁄Ch™ged
()),

407 
	`SLOT
(
	`upd©eSñe˘i⁄
()));

409 i‡(
c⁄figSëtögs
) {

410 
showAŒ
 = 
c⁄figSëtögs
->showAll;

411 
showName
 = 
c⁄figSëtögs
->showName;

412 
showR™ge
 = 
c⁄figSëtögs
->showRange;

413 
showD©a
 = 
c⁄figSëtögs
->showData;

416 
i
 = 0; i < 
cﬁNr
; i++)

417 
cﬁM≠
[
i
] = 
cﬁRevM≠
[i] = -1;

418 
	`addCﬁumn
(
¥om±CﬁIdx
, "Option");

420 
	`ªöô
();

421 
	}
}

423 
	gC⁄figLi°
::
	$ªöô
()

425 
	`ªmoveCﬁumn
(
d©aCﬁIdx
);

426 
	`ªmoveCﬁumn
(
yesCﬁIdx
);

427 
	`ªmoveCﬁumn
(
modCﬁIdx
);

428 
	`ªmoveCﬁumn
(
noCﬁIdx
);

429 
	`ªmoveCﬁumn
(
«meCﬁIdx
);

431 i‡(
showName
)

432 
	`addCﬁumn
(
«meCﬁIdx
, "Name");

433 i‡(
showR™ge
) {

434 
	`addCﬁumn
(
noCﬁIdx
, "N");

435 
	`addCﬁumn
(
modCﬁIdx
, "M");

436 
	`addCﬁumn
(
yesCﬁIdx
, "Y");

438 i‡(
showD©a
)

439 
	`addCﬁumn
(
d©aCﬁIdx
, "Value");

441 
	`upd©eLi°AŒ
();

442 
	}
}

444 
	gC⁄figLi°
::
	$upd©eSñe˘i⁄
()

446 
míu
 *menu;

447 
¥›_ty≥
 
ty≥
;

449 
C⁄figIãm
* 
ôem
 = (C⁄figIãm*)
	`£À˘edIãm
();

450 i‡(!
ôem
)

453 
cvõw
->
	`£tHñp
(
ôem
);

455 
míu
 = 
ôem
->menu;

456 i‡(!
míu
)

458 
ty≥
 = 
míu
->
¥om±
 ? míu->¥om±->ty≥ : 
P_UNKNOWN
;

459 i‡(
mode
 =
míuMode
 && 
ty≥
 =
P_MENU
)

460 
emô
 
	`míuSñe˘ed
(
míu
);

461 
	}
}

463 
	gC⁄figLi°
::
	$upd©eLi°
(
C⁄figIãm
* 
ôem
)

465 
C⁄figIãm
* 
œ°
 = 0;

467 i‡(!
roŸE¡ry
)

468 
upd©e
;

470 i‡(
roŸE¡ry
 !&
roŸmíu
 && (
mode
 =
sögÀMode
 ||

471 (
mode
 =
symbﬁMode
 && 
roŸE¡ry
->
∑ª¡
 !&
roŸmíu
))) {

472 
ôem
 = 
	`fú°Chûd
();

473 i‡(!
ôem
)

474 
ôem
 = 
√w
 
	`C⁄figIãm
(
this
, 0, 
åue
);

475 
œ°
 = 
ôem
;

477 i‡((
mode
 =
sögÀMode
 || (modê=
symbﬁMode
 && !(
roŸE¡ry
->
Êags
 & 
MENU_ROOT
))) &&

478 
roŸE¡ry
->
sym
 &&ÑoŸE¡ry->
¥om±
) {

479 
ôem
 = 
œ°
 ?Üa°->
	`√xtSiblög
(Ë: 
	`fú°Chûd
();

480 i‡(!
ôem
)

481 
ôem
 = 
√w
 
	`C⁄figIãm
(
this
, 
œ°
, 
roŸE¡ry
, 
åue
);

483 
ôem
->
	`ã°Upd©eMíu
(
åue
);

485 
	`upd©eMíuLi°
(
ôem
, 
roŸE¡ry
);

486 
	`åiggîUpd©e
();

489 
upd©e
:

490 
	`upd©eMíuLi°
(
this
, 
roŸE¡ry
);

491 
	`åiggîUpd©e
();

492 
	}
}

494 
	gC⁄figLi°
::
	$£tAŒO≥n
(
boﬁ
 
›í
)

496 
QLi°VõwIãmIãøt‹
 
	`ô
(
this
);

498 ; 
ô
.
	`cuºít
(); it++)

499 
ô
.
	`cuºít
()->
	`£tO≥n
(
›í
);

500 
	}
}

502 
	gC⁄figLi°
::
	$£tVÆue
(
C⁄figIãm
* 
ôem
, 
åi°©e
 
vÆ
)

504 
symbﬁ
* 
sym
;

505 
ty≥
;

506 
åi°©e
 
ﬁdvÆ
;

508 
sym
 = 
ôem
->
míu
 ? item->menu->sym : 0;

509 i‡(!
sym
)

512 
ty≥
 = 
	`sym_gë_ty≥
(
sym
);

513 
ty≥
) {

514 
S_BOOLEAN
:

515 
S_TRISTATE
:

516 
ﬁdvÆ
 = 
	`sym_gë_åi°©e_vÆue
(
sym
);

518 i‡(!
	`sym_£t_åi°©e_vÆue
(
sym
, 
vÆ
))

520 i‡(
ﬁdvÆ
 =
no
 && 
ôem
->
míu
->
li°
)

521 
ôem
->
	`£tO≥n
(
TRUE
);

522 
	`∑ª¡
()->
	`upd©eLi°
(
ôem
);

525 
	}
}

527 
	gC⁄figLi°
::
	$ch™geVÆue
(
C⁄figIãm
* 
ôem
)

529 
symbﬁ
* 
sym
;

530 
míu
* menu;

531 
ty≥
, 
ﬁdex¥
, 
√wex¥
;

533 
míu
 = 
ôem
->menu;

534 i‡(!
míu
)

536 
sym
 = 
míu
->sym;

537 i‡(!
sym
) {

538 i‡(
ôem
->
míu
->
li°
)

539 
ôem
->
	`£tO≥n
(!ôem->
	`isO≥n
());

543 
ty≥
 = 
	`sym_gë_ty≥
(
sym
);

544 
ty≥
) {

545 
S_BOOLEAN
:

546 
S_TRISTATE
:

547 
ﬁdex¥
 = 
	`sym_gë_åi°©e_vÆue
(
sym
);

548 
√wex¥
 = 
	`sym_toggÀ_åi°©e_vÆue
(
sym
);

549 i‡(
ôem
->
míu
->
li°
) {

550 i‡(
ﬁdex¥
 =
√wex¥
)

551 
ôem
->
	`£tO≥n
(!ôem->
	`isO≥n
());

552 i‡(
ﬁdex¥
 =
no
)

553 
ôem
->
	`£tO≥n
(
TRUE
);

555 i‡(
ﬁdex¥
 !
√wex¥
)

556 
	`∑ª¡
()->
	`upd©eLi°
(
ôem
);

558 
S_INT
:

559 
S_HEX
:

560 
S_STRING
:

561 #i‡
QT_VERSION
 >= 300

562 i‡(
cﬁM≠
[
d©aCﬁIdx
] >= 0)

563 
ôem
->
	`°¨tRíame
(
cﬁM≠
[
d©aCﬁIdx
]);

566 
	`∑ª¡
()->
löeEdô
->
	`show
(
ôem
);

569 
	}
}

571 
	gC⁄figLi°
::
	$£tRoŸMíu
(
míu
 *menu)

573 
¥›_ty≥
 
ty≥
;

575 i‡(
roŸE¡ry
 =
míu
)

577 
ty≥
 = 
míu
 && míu->
¥om±
 ? míu->¥om±->ty≥ : 
P_UNKNOWN
;

578 i‡(
ty≥
 !
P_MENU
)

580 
	`upd©eMíuLi°
(
this
, 0);

581 
roŸE¡ry
 = 
míu
;

582 
	`upd©eLi°AŒ
();

583 
	`£tSñe˘ed
(
	`cuºítIãm
(), 
	`hasFocus
());

584 
	}
}

586 
	gC⁄figLi°
::
	$£tP¨ítMíu
()

588 
C⁄figIãm
* 
ôem
;

589 
míu
 *
ﬁdroŸ
;

591 
ﬁdroŸ
 = 
roŸE¡ry
;

592 i‡(
roŸE¡ry
 =&
roŸmíu
)

594 
	`£tRoŸMíu
(
	`míu_gë_∑ª¡_míu
(
roŸE¡ry
->
∑ª¡
));

596 
QLi°VõwIãmIãøt‹
 
	`ô
(
this
);

597 ; (
ôem
 = (
C⁄figIãm
*)
ô
.
	`cuºít
()); it++) {

598 i‡(
ôem
->
míu
 =
ﬁdroŸ
) {

599 
	`£tCuºítIãm
(
ôem
);

600 
	`ísuªIãmVisibÀ
(
ôem
);

604 
	}
}

606 
	gC⁄figLi°
::
	$keyPªssEvít
(
QKeyEvít
* 
ev
)

608 
QLi°VõwIãm
* 
i
 = 
	`cuºítIãm
();

609 
C⁄figIãm
* 
ôem
;

610 
míu
 *menu;

611 
¥›_ty≥
 
ty≥
;

613 i‡(
ev
->
	`key
(Ë=
Key_Esˇ≥
 && 
mode
 !
fuŒMode
) {

614 
emô
 
	`∑ª¡Sñe˘ed
();

615 
ev
->
	`ac˚±
();

619 i‡(!
i
) {

620 
P¨ít
::
	`keyPªssEvít
(
ev
);

623 
ôem
 = (
C⁄figIãm
*)
i
;

625 
ev
->
	`key
()) {

626 
Key_Rëu∫
:

627 
Key_E¡î
:

628 i‡(
ôem
->
goP¨ít
) {

629 
emô
 
	`∑ª¡Sñe˘ed
();

632 
míu
 = 
ôem
->menu;

633 i‡(!
míu
)

635 
ty≥
 = 
míu
->
¥om±
 ? míu->¥om±->ty≥ : 
P_UNKNOWN
;

636 i‡(
ty≥
 =
P_MENU
 && 
roŸE¡ry
 !
míu
 &&

637 
mode
 !
fuŒMode
 && modê!
míuMode
) {

638 
emô
 
	`míuSñe˘ed
(
míu
);

641 
Key_S∑˚
:

642 
	`ch™geVÆue
(
ôem
);

644 
Key_N
:

645 
	`£tVÆue
(
ôem
, 
no
);

647 
Key_M
:

648 
	`£tVÆue
(
ôem
, 
mod
);

650 
Key_Y
:

651 
	`£tVÆue
(
ôem
, 
yes
);

654 
P¨ít
::
	`keyPªssEvít
(
ev
);

657 
ev
->
	`ac˚±
();

658 
	}
}

660 
	gC⁄figLi°
::
	$c⁄ã¡sMou£PªssEvít
(
QMou£Evít
* 
e
)

664 
P¨ít
::
	`c⁄ã¡sMou£PªssEvít
(
e
);

665 
	}
}

667 
	gC⁄figLi°
::
	$c⁄ã¡sMou£Rñó£Evít
(
QMou£Evít
* 
e
)

669 
QPoöt
 
	`p
(
	`c⁄ã¡sToVõwp‹t
(
e
->
	`pos
()));

670 
C⁄figIãm
* 
ôem
 = (C⁄figIãm*)
	`ôemAt
(
p
);

671 
míu
 *menu;

672 
¥›_ty≥
 
±y≥
;

673 c⁄° 
QPixm≠
* 
pm
;

674 
idx
, 
x
;

676 i‡(!
ôem
)

677 
skù
;

679 
míu
 = 
ôem
->menu;

680 
x
 = 
	`hódî
()->
	`off£t
(Ë+ 
p
.
	`x
();

681 
idx
 = 
cﬁRevM≠
[
	`hódî
()->
	`£˘i⁄At
(
x
)];

682 
idx
) {

683 
¥om±CﬁIdx
:

684 
pm
 = 
ôem
->
	`pixm≠
(
¥om±CﬁIdx
);

685 i‡(
pm
) {

686 
off
 = 
	`hódî
()->
	`£˘i⁄Pos
(0Ë+ 
	`ôemM¨gö
() +

687 
	`åìSãpSize
(Ë* (
ôem
->
	`dïth
(Ë+ (
	`roŸIsDec‹©ed
() ? 1 : 0));

688 i‡(
x
 >
off
 && x < of‡+ 
pm
->
	`width
()) {

689 i‡(
ôem
->
goP¨ít
) {

690 
emô
 
	`∑ª¡Sñe˘ed
();

692 } i‡(!
míu
)

694 
±y≥
 = 
míu
->
¥om±
 ? míu->¥om±->
ty≥
 : 
P_UNKNOWN
;

695 i‡(
±y≥
 =
P_MENU
 && 
roŸE¡ry
 !
míu
 &&

696 
mode
 !
fuŒMode
 && modê!
míuMode
)

697 
emô
 
	`míuSñe˘ed
(
míu
);

699 
	`ch™geVÆue
(
ôem
);

703 
noCﬁIdx
:

704 
	`£tVÆue
(
ôem
, 
no
);

706 
modCﬁIdx
:

707 
	`£tVÆue
(
ôem
, 
mod
);

709 
yesCﬁIdx
:

710 
	`£tVÆue
(
ôem
, 
yes
);

712 
d©aCﬁIdx
:

713 
	`ch™geVÆue
(
ôem
);

717 
skù
:

719 
P¨ít
::
	`c⁄ã¡sMou£Rñó£Evít
(
e
);

720 
	}
}

722 
	gC⁄figLi°
::
	$c⁄ã¡sMou£MoveEvít
(
QMou£Evít
* 
e
)

726 
P¨ít
::
	`c⁄ã¡sMou£MoveEvít
(
e
);

727 
	}
}

729 
	gC⁄figLi°
::
	$c⁄ã¡sMou£DoubÀClickEvít
(
QMou£Evít
* 
e
)

731 
QPoöt
 
	`p
(
	`c⁄ã¡sToVõwp‹t
(
e
->
	`pos
()));

732 
C⁄figIãm
* 
ôem
 = (C⁄figIãm*)
	`ôemAt
(
p
);

733 
míu
 *menu;

734 
¥›_ty≥
 
±y≥
;

736 i‡(!
ôem
)

737 
skù
;

738 i‡(
ôem
->
goP¨ít
) {

739 
emô
 
	`∑ª¡Sñe˘ed
();

740 
skù
;

742 
míu
 = 
ôem
->menu;

743 i‡(!
míu
)

744 
skù
;

745 
±y≥
 = 
míu
->
¥om±
 ? míu->¥om±->
ty≥
 : 
P_UNKNOWN
;

746 i‡(
±y≥
 =
P_MENU
 && (
mode
 =
sögÀMode
 || modê=
symbﬁMode
))

747 
emô
 
	`míuSñe˘ed
(
míu
);

748 i‡(
míu
->
sym
)

749 
	`ch™geVÆue
(
ôem
);

751 
skù
:

753 
P¨ít
::
	`c⁄ã¡sMou£DoubÀClickEvít
(
e
);

754 
	}
}

756 
	gC⁄figLi°
::
	$focusInEvít
(
QFocusEvít
 *
e
)

758 
P¨ít
::
	`focusInEvít
(
e
);

760 
QLi°VõwIãm
* 
ôem
 = 
	`cuºítIãm
();

761 i‡(!
ôem
)

764 
	`£tSñe˘ed
(
ôem
, 
TRUE
);

765 
emô
 
	`gŸFocus
();

766 
	}
}

768 
C⁄figVõw
* 
	gC⁄figVõw
::
võwLi°
;

770 
	gC⁄figVõw
::
	$C⁄figVõw
(
QWidgë
* 
∑ª¡
, 
C⁄figMaöWödow
* 
cvõw
,

771 
C⁄figSëtögs
 *
c⁄figSëtögs
)

772 : 
	$P¨ít
(
∑ª¡
)

774 
li°
 = 
√w
 
	`C⁄figLi°
(
this
, 
cvõw
, 
c⁄figSëtögs
);

775 
löeEdô
 = 
√w
 
	`C⁄figLöeEdô
(
this
);

776 
löeEdô
->
	`hide
();

778 
this
->
√xtVõw
 = 
võwLi°
;

779 
võwLi°
 = 
this
;

780 
	}
}

782 
	gC⁄figVõw
::~
	$C⁄figVõw
()

784 
C⁄figVõw
** 
vp
;

786 
vp
 = &
võwLi°
; *vp; v∞&(*vp)->
√xtVõw
) {

787 i‡(*
vp
 =
this
) {

788 *
vp
 = 
√xtVõw
;

792 
	}
}

794 
	gC⁄figVõw
::
	$upd©eLi°
(
C⁄figIãm
* 
ôem
)

796 
C⁄figVõw
* 
v
;

798 
v
 = 
võwLi°
; v; v = v->
√xtVõw
)

799 
v
->
li°
->
	`upd©eLi°
(
ôem
);

800 
	}
}

802 
	gC⁄figVõw
::
	$upd©eLi°AŒ
()

804 
C⁄figVõw
* 
v
;

806 
v
 = 
võwLi°
; v; v = v->
√xtVõw
)

807 
v
->
li°
->
	`upd©eLi°AŒ
();

808 
	}
}

813 
	gC⁄figMaöWödow
::
	$C⁄figMaöWödow
()

815 
QMíuB¨
* 
míu
;

816 
boﬁ
 
ok
;

817 
x
, 
y
, 
width
, 
height
;

819 
QWidgë
 *
d
 = 
c⁄figAµ
->
	`deskt›
();

821 
C⁄figSëtögs
* 
c⁄figSëtögs
 = 
√w
 
	`C⁄figSëtögs
();

822 #i‡
QT_VERSION
 >= 300

823 
width
 = 
c⁄figSëtögs
->
	`ªadNumE¡ry
("/kc⁄fig/qc⁄f/wödow width", 
d
->
	`width
() - 64);

824 
height
 = 
c⁄figSëtögs
->
	`ªadNumE¡ry
("/kc⁄fig/qc⁄f/wödow height", 
d
->
	`height
() - 64);

825 
	`ªsize
(
width
, 
height
);

826 
x
 = 
c⁄figSëtögs
->
	`ªadNumE¡ry
("/kc⁄fig/qc⁄f/wödow x", 0, &
ok
);

827 i‡(
ok
)

828 
y
 = 
c⁄figSëtögs
->
	`ªadNumE¡ry
("/kc⁄fig/qc⁄f/wödow y", 0, &
ok
);

829 i‡(
ok
)

830 
	`move
(
x
, 
y
);

831 
showDebug
 = 
c⁄figSëtögs
->
	`ªadBoﬁE¡ry
("/kc⁄fig/qc⁄f/showDebug", 
Ál£
);

834 
c⁄figSëtögs
->
	`ªadLi°Sëtögs
();

836 
width
 = 
d
->
	`width
() - 64;

837 
height
 = 
d
->
	`height
() - 64;

838 
	`ªsize
(
width
, 
height
);

839 
showDebug
 = 
Ál£
;

842 
•lô1
 = 
√w
 
	`QS∂ôãr
(
this
);

843 
•lô1
->
	`£tOrõ¡©i⁄
(
QS∂ôãr
::
H‹iz⁄èl
);

844 
	`£tCíåÆWidgë
(
•lô1
);

846 
míuVõw
 = 
√w
 
	`C⁄figVõw
(
•lô1
, 
this
, 
c⁄figSëtögs
);

847 
míuLi°
 = 
míuVõw
->
li°
;

849 
•lô2
 = 
√w
 
	`QS∂ôãr
(
•lô1
);

850 
•lô2
->
	`£tOrõ¡©i⁄
(
QS∂ôãr
::
Vîtiˇl
);

853 
c⁄figVõw
 = 
√w
 
	`C⁄figVõw
(
•lô2
, 
this
, 
c⁄figSëtögs
);

854 
c⁄figLi°
 = 
c⁄figVõw
->
li°
;

856 
hñpText
 = 
√w
 
	`QTextVõw
(
•lô2
);

857 
hñpText
->
	`£tTextF‹m©
(
Qt
::
RichText
);

859 
	`£tTabOrdî
(
c⁄figLi°
, 
hñpText
);

860 
c⁄figLi°
->
	`£tFocus
();

862 
míu
 = 
	`míuB¨
();

863 
toﬁB¨
 = 
√w
 
	`QToﬁB¨
("Toﬁs", 
this
);

865 
backA˘i⁄
 = 
√w
 
	`QA˘i⁄
("Back", 
	`QPixm≠
(
xpm_back
), "Back", 0, 
this
);

866 
	`c⁄√˘
(
backA˘i⁄
, 
	`SIGNAL
(
	`a˘iv©ed
()), 
	`SLOT
(
	`goBack
()));

867 
backA˘i⁄
->
	`£tE«bÀd
(
FALSE
);

868 
QA˘i⁄
 *
quôA˘i⁄
 = 
√w
 
	`QA˘i⁄
("Quô", "&Quô", 
CTRL
+
Key_Q
, 
this
);

869 
	`c⁄√˘
(
quôA˘i⁄
, 
	`SIGNAL
(
	`a˘iv©ed
()), 
	`SLOT
(
	`˛o£
()));

870 
QA˘i⁄
 *
lﬂdA˘i⁄
 = 
√w
 
	`QA˘i⁄
("Lﬂd", 
	`QPixm≠
(
xpm_lﬂd
), "&Lﬂd", 
CTRL
+
Key_L
, 
this
);

871 
	`c⁄√˘
(
lﬂdA˘i⁄
, 
	`SIGNAL
(
	`a˘iv©ed
()), 
	`SLOT
(
	`lﬂdC⁄fig
()));

872 
QA˘i⁄
 *
ßveA˘i⁄
 = 
√w
 
	`QA˘i⁄
("Save", 
	`QPixm≠
(
xpm_ßve
), "&Save", 
CTRL
+
Key_S
, 
this
);

873 
	`c⁄√˘
(
ßveA˘i⁄
, 
	`SIGNAL
(
	`a˘iv©ed
()), 
	`SLOT
(
	`ßveC⁄fig
()));

874 
QA˘i⁄
 *
ßveAsA˘i⁄
 = 
√w
 
	`QA˘i⁄
("SavêAs...", "Savê&As...", 0, 
this
);

875 
	`c⁄√˘
(
ßveAsA˘i⁄
, 
	`SIGNAL
(
	`a˘iv©ed
()), 
	`SLOT
(
	`ßveC⁄figAs
()));

876 
QA˘i⁄
 *
sögÀVõwA˘i⁄
 = 
√w
 
	`QA˘i⁄
("SögÀ Võw", 
	`QPixm≠
(
xpm_sögÀ_võw
), "S∂ô Võw", 0, 
this
);

877 
	`c⁄√˘
(
sögÀVõwA˘i⁄
, 
	`SIGNAL
(
	`a˘iv©ed
()), 
	`SLOT
(
	`showSögÀVõw
()));

878 
QA˘i⁄
 *
•lôVõwA˘i⁄
 = 
√w
 
	`QA˘i⁄
("S∂ô Võw", 
	`QPixm≠
(
xpm_•lô_võw
), "S∂ô Võw", 0, 
this
);

879 
	`c⁄√˘
(
•lôVõwA˘i⁄
, 
	`SIGNAL
(
	`a˘iv©ed
()), 
	`SLOT
(
	`showS∂ôVõw
()));

880 
QA˘i⁄
 *
fuŒVõwA˘i⁄
 = 
√w
 
	`QA˘i⁄
("FuŒ Võw", 
	`QPixm≠
(
xpm_åì_võw
), "FuŒ Võw", 0, 
this
);

881 
	`c⁄√˘
(
fuŒVõwA˘i⁄
, 
	`SIGNAL
(
	`a˘iv©ed
()), 
	`SLOT
(
	`showFuŒVõw
()));

883 
QA˘i⁄
 *
showNameA˘i⁄
 = 
√w
 
	`QA˘i⁄
(
NULL
, "Show Name", 0, 
this
);

884 
showNameA˘i⁄
->
	`£tToggÀA˘i⁄
(
TRUE
);

885 
showNameA˘i⁄
->
	`£tOn
(
c⁄figLi°
->
showName
);

886 
	`c⁄√˘
(
showNameA˘i⁄
, 
	`SIGNAL
(
	`toggÀd
(
boﬁ
)), 
	`SLOT
(
	`£tShowName
(bool)));

887 
QA˘i⁄
 *
showR™geA˘i⁄
 = 
√w
 
	`QA˘i⁄
(
NULL
, "Show R™ge", 0, 
this
);

888 
showR™geA˘i⁄
->
	`£tToggÀA˘i⁄
(
TRUE
);

889 
showR™geA˘i⁄
->
	`£tOn
(
c⁄figLi°
->
showR™ge
);

890 
	`c⁄√˘
(
showR™geA˘i⁄
, 
	`SIGNAL
(
	`toggÀd
(
boﬁ
)), 
	`SLOT
(
	`£tShowR™ge
(bool)));

891 
QA˘i⁄
 *
showD©aA˘i⁄
 = 
√w
 
	`QA˘i⁄
(
NULL
, "Show D©a", 0, 
this
);

892 
showD©aA˘i⁄
->
	`£tToggÀA˘i⁄
(
TRUE
);

893 
showD©aA˘i⁄
->
	`£tOn
(
c⁄figLi°
->
showD©a
);

894 
	`c⁄√˘
(
showD©aA˘i⁄
, 
	`SIGNAL
(
	`toggÀd
(
boﬁ
)), 
	`SLOT
(
	`£tShowD©a
(bool)));

895 
QA˘i⁄
 *
showAŒA˘i⁄
 = 
√w
 
	`QA˘i⁄
(
NULL
, "Show AŒ O±i⁄s", 0, 
this
);

896 
showAŒA˘i⁄
->
	`£tToggÀA˘i⁄
(
TRUE
);

897 
showAŒA˘i⁄
->
	`£tOn
(
c⁄figLi°
->
showAŒ
);

898 
	`c⁄√˘
(
showAŒA˘i⁄
, 
	`SIGNAL
(
	`toggÀd
(
boﬁ
)), 
	`SLOT
(
	`£tShowAŒ
(bool)));

899 
QA˘i⁄
 *
showDebugA˘i⁄
 = 
√w
 
	`QA˘i⁄
(
NULL
, "Show Debug Info", 0, 
this
);

900 
showDebugA˘i⁄
->
	`£tToggÀA˘i⁄
(
TRUE
);

901 
showDebugA˘i⁄
->
	`£tOn
(
showDebug
);

902 
	`c⁄√˘
(
showDebugA˘i⁄
, 
	`SIGNAL
(
	`toggÀd
(
boﬁ
)), 
	`SLOT
(
	`£tShowDebug
(bool)));

904 
QA˘i⁄
 *
showI¡roA˘i⁄
 = 
√w
 
	`QA˘i⁄
(
NULL
, "I¡rodu˘i⁄", 0, 
this
);

905 
	`c⁄√˘
(
showI¡roA˘i⁄
, 
	`SIGNAL
(
	`a˘iv©ed
()), 
	`SLOT
(
	`showI¡ro
()));

906 
QA˘i⁄
 *
showAboutA˘i⁄
 = 
√w
 
	`QA˘i⁄
(
NULL
, "About", 0, 
this
);

907 
	`c⁄√˘
(
showAboutA˘i⁄
, 
	`SIGNAL
(
	`a˘iv©ed
()), 
	`SLOT
(
	`showAbout
()));

910 
backA˘i⁄
->
	`addTo
(
toﬁB¨
);

911 
toﬁB¨
->
	`addSï¨©‹
();

912 
lﬂdA˘i⁄
->
	`addTo
(
toﬁB¨
);

913 
ßveA˘i⁄
->
	`addTo
(
toﬁB¨
);

914 
toﬁB¨
->
	`addSï¨©‹
();

915 
sögÀVõwA˘i⁄
->
	`addTo
(
toﬁB¨
);

916 
•lôVõwA˘i⁄
->
	`addTo
(
toﬁB¨
);

917 
fuŒVõwA˘i⁄
->
	`addTo
(
toﬁB¨
);

920 
QP›upMíu
* 
c⁄fig
 = 
√w
 
	`QP›upMíu
(
this
);

921 
míu
->
	`ö£πIãm
("&Fûe", 
c⁄fig
);

922 
lﬂdA˘i⁄
->
	`addTo
(
c⁄fig
);

923 
ßveA˘i⁄
->
	`addTo
(
c⁄fig
);

924 
ßveAsA˘i⁄
->
	`addTo
(
c⁄fig
);

925 
c⁄fig
->
	`ö£πSï¨©‹
();

926 
quôA˘i⁄
->
	`addTo
(
c⁄fig
);

929 
QP›upMíu
* 
›ti⁄Míu
 = 
√w
 
	`QP›upMíu
(
this
);

930 
míu
->
	`ö£πIãm
("&O±i⁄", 
›ti⁄Míu
);

931 
showNameA˘i⁄
->
	`addTo
(
›ti⁄Míu
);

932 
showR™geA˘i⁄
->
	`addTo
(
›ti⁄Míu
);

933 
showD©aA˘i⁄
->
	`addTo
(
›ti⁄Míu
);

934 
›ti⁄Míu
->
	`ö£πSï¨©‹
();

935 
showAŒA˘i⁄
->
	`addTo
(
›ti⁄Míu
);

936 
showDebugA˘i⁄
->
	`addTo
(
›ti⁄Míu
);

939 
QP›upMíu
* 
hñpMíu
 = 
√w
 
	`QP›upMíu
(
this
);

940 
míu
->
	`ö£πSï¨©‹
();

941 
míu
->
	`ö£πIãm
("&Hñp", 
hñpMíu
);

942 
showI¡roA˘i⁄
->
	`addTo
(
hñpMíu
);

943 
showAboutA˘i⁄
->
	`addTo
(
hñpMíu
);

945 
	`c⁄√˘
(
c⁄figLi°
, 
	`SIGNAL
(
	`míuSñe˘ed
(
míu
 *)),

946 
	`SLOT
(
	`ch™geMíu
(
míu
 *)));

947 
	`c⁄√˘
(
c⁄figLi°
, 
	`SIGNAL
(
	`∑ª¡Sñe˘ed
()),

948 
	`SLOT
(
	`goBack
()));

949 
	`c⁄√˘
(
míuLi°
, 
	`SIGNAL
(
	`míuSñe˘ed
(
míu
 *)),

950 
	`SLOT
(
	`ch™geMíu
(
míu
 *)));

952 
	`c⁄√˘
(
c⁄figLi°
, 
	`SIGNAL
(
	`gŸFocus
()),

953 
	`SLOT
(
	`li°FocusCh™ged
()));

954 
	`c⁄√˘
(
míuLi°
, 
	`SIGNAL
(
	`gŸFocus
()),

955 
	`SLOT
(
	`li°FocusCh™ged
()));

957 #i‡
QT_VERSION
 >= 300

958 
QSåög
 
li°Mode
 = 
c⁄figSëtögs
->
	`ªadE¡ry
("/kconfig/qconf/listMode", "symbol");

959 i‡(
li°Mode
 == "single")

960 
	`showSögÀVõw
();

961 i‡(
li°Mode
 == "full")

962 
	`showFuŒVõw
();

964 
	`showS∂ôVõw
();

967 
QVÆueLi°
<> 
sizes
 = 
c⁄figSëtögs
->
	`ªadSizes
("/kc⁄fig/qc⁄f/•lô1", &
ok
);

968 i‡(
ok
)

969 
•lô1
->
	`£tSizes
(
sizes
);

971 
sizes
 = 
c⁄figSëtögs
->
	`ªadSizes
("/kc⁄fig/qc⁄f/•lô2", &
ok
);

972 i‡(
ok
)

973 
•lô2
->
	`£tSizes
(
sizes
);

975 
	`showS∂ôVõw
();

977 
dñëe
 
c⁄figSëtögs
;

978 
	}
}

980 
QSåög
 
	$¥öt_fûãr
(c⁄° 
QSåög
 &
°r
)

982 
QRegExp
 
	`ª
("[<>&\"\\n]");

983 
QSåög
 
ªs
 = 
°r
;

984 
i
 = 0; (ò
ªs
.
	`föd
(
ª
, i)) >= 0;) {

985 
ªs
[
i
].
	`œtö1
()) {

987 
ªs
.
	`ª∂a˚
(
i
, 1, "&lt;");

988 
i
 += 4;

991 
ªs
.
	`ª∂a˚
(
i
, 1, "&gt;");

992 
i
 += 4;

995 
ªs
.
	`ª∂a˚
(
i
, 1, "&amp;");

996 
i
 += 5;

999 
ªs
.
	`ª∂a˚
(
i
, 1, "&quot;");

1000 
i
 += 6;

1003 
ªs
.
	`ª∂a˚
(
i
, 1, "<br>");

1004 
i
 += 4;

1008  
ªs
;

1009 
	}
}

1011 
	$ex¥_¥öt_hñp
(*
d©a
, c⁄° *
°r
)

1013 
ªöãΩªt_ˇ°
<
QSåög
*>(
d©a
)->
	`≠≥nd
(
	`¥öt_fûãr
(
°r
));

1014 
	}
}

1019 
	gC⁄figMaöWödow
::
	$£tHñp
(
QLi°VõwIãm
* 
ôem
)

1021 
symbﬁ
* 
sym
;

1022 
míu
* menu = 0;

1024 
c⁄figLi°
->
	`∑ª¡
()->
löeEdô
->
	`hide
();

1025 i‡(
ôem
)

1026 
míu
 = ((
C⁄figIãm
*)
ôem
)->menu;

1027 i‡(!
míu
) {

1028 
hñpText
->
	`£tText
(
QSåög
::
nuŒ
);

1032 
QSåög
 
hód
, 
debug
, 
hñp
;

1033 
míu
 = ((
C⁄figIãm
*)
ôem
)->menu;

1034 
sym
 = 
míu
->sym;

1035 i‡(
sym
) {

1036 i‡(
míu
->
¥om±
) {

1037 
hód
 += "<big><b>";

1038 
hód
 +
	`¥öt_fûãr
(
	`_
(
míu
->
¥om±
->
ãxt
));

1039 
hód
 += "</b></big>";

1040 i‡(
sym
->
«me
) {

1041 
hód
 += " (";

1042 
hód
 +
	`¥öt_fûãr
(
	`_
(
sym
->
«me
));

1043 
hód
 += ")";

1045 } i‡(
sym
->
«me
) {

1046 
hód
 += "<big><b>";

1047 
hód
 +
	`¥öt_fûãr
(
	`_
(
sym
->
«me
));

1048 
hód
 += "</b></big>";

1050 
hód
 += "<br><br>";

1052 i‡(
showDebug
) {

1053 
debug
 += "type: ";

1054 
debug
 +
	`¥öt_fûãr
(
	`sym_ty≥_«me
(
sym
->
ty≥
));

1055 i‡(
	`sym_is_choi˚
(
sym
))

1056 
debug
 += " (choice)";

1057 
debug
 += "<br>";

1058 i‡(
sym
->
ªv_dï
.
ex¥
) {

1059 
debug
 += "reverse dep: ";

1060 
	`ex¥_¥öt
(
sym
->
ªv_dï
.
ex¥
, 
ex¥_¥öt_hñp
, &
debug
, 
E_NONE
);

1061 
debug
 += "<br>";

1063 
¥›îty
 *
¥›
 = 
sym
->¥›;Ör›;Ör› =Ör›->
√xt
) {

1064 
¥›
->
ty≥
) {

1065 
P_PROMPT
:

1066 
P_MENU
:

1067 
debug
 += "prompt: ";

1068 
debug
 +
	`¥öt_fûãr
(
	`_
(
¥›
->
ãxt
));

1069 
debug
 += "<br>";

1071 
P_DEFAULT
:

1072 
debug
 += "default: ";

1073 
	`ex¥_¥öt
(
¥›
->
ex¥
, 
ex¥_¥öt_hñp
, &
debug
, 
E_NONE
);

1074 
debug
 += "<br>";

1076 
P_CHOICE
:

1077 i‡(
	`sym_is_choi˚
(
sym
)) {

1078 
debug
 += "choice: ";

1079 
	`ex¥_¥öt
(
¥›
->
ex¥
, 
ex¥_¥öt_hñp
, &
debug
, 
E_NONE
);

1080 
debug
 += "<br>";

1083 
P_SELECT
:

1084 
debug
 += "select: ";

1085 
	`ex¥_¥öt
(
¥›
->
ex¥
, 
ex¥_¥öt_hñp
, &
debug
, 
E_NONE
);

1086 
debug
 += "<br>";

1088 
P_RANGE
:

1089 
debug
 += "range: ";

1090 
	`ex¥_¥öt
(
¥›
->
ex¥
, 
ex¥_¥öt_hñp
, &
debug
, 
E_NONE
);

1091 
debug
 += "<br>";

1094 
debug
 += "unknownÖroperty: ";

1095 
debug
 +
	`¥›_gë_ty≥_«me
(
¥›
->
ty≥
);

1096 
debug
 += "<br>";

1098 i‡(
¥›
->
visibÀ
.
ex¥
) {

1099 
debug
 += "&nbsp;&nbsp;&nbsp;&nbsp;dep: ";

1100 
	`ex¥_¥öt
(
¥›
->
visibÀ
.
ex¥
, 
ex¥_¥öt_hñp
, &
debug
, 
E_NONE
);

1101 
debug
 += "<br>";

1104 
debug
 += "<br>";

1107 
hñp
 = 
	`¥öt_fûãr
(
	`_
(
sym
->help));

1108 } i‡(
míu
->
¥om±
) {

1109 
hód
 += "<big><b>";

1110 
hód
 +
	`¥öt_fûãr
(
	`_
(
míu
->
¥om±
->
ãxt
));

1111 
hód
 += "</b></big><br><br>";

1112 i‡(
showDebug
) {

1113 i‡(
míu
->
¥om±
->
visibÀ
.
ex¥
) {

1114 
debug
 += "&nbsp;&nbsp;dep: ";

1115 
	`ex¥_¥öt
(
míu
->
¥om±
->
visibÀ
.
ex¥
, 
ex¥_¥öt_hñp
, &
debug
, 
E_NONE
);

1116 
debug
 += "<br><br>";

1120 i‡(
showDebug
)

1121 
debug
 +
	`QSåög
().
	`•rötf
("deföedáà%s:%d<br><br>", 
míu
->
fûe
->
«me
, míu->
löío
);

1122 
hñpText
->
	`£tText
(
hód
 + 
debug
 + 
hñp
);

1123 
	}
}

1125 
	gC⁄figMaöWödow
::
	$lﬂdC⁄fig
()

1127 
QSåög
 
s
 = 
QFûeDülog
::
	`gëO≥nFûeName
(".c⁄fig", 
NULL
, 
this
);

1128 i‡(
s
.
	`isNuŒ
())

1130 i‡(
	`c⁄f_ªad
(
QFûe
::
	`ícodeName
(
s
)))

1131 
QMesßgeBox
::
	`öf‹m©i⁄
(
this
, "qconf", "UnableÅoÜoad configuration!");

1132 
C⁄figVõw
::
	`upd©eLi°AŒ
();

1133 
	}
}

1135 
	gC⁄figMaöWödow
::
	$ßveC⁄fig
()

1137 i‡(
	`c⁄f_wrôe
(
NULL
))

1138 
QMesßgeBox
::
	`öf‹m©i⁄
(
this
, "qconf", "UnableÅo save configuration!");

1139 
	}
}

1141 
	gC⁄figMaöWödow
::
	$ßveC⁄figAs
()

1143 
QSåög
 
s
 = 
QFûeDülog
::
	`gëSaveFûeName
(".c⁄fig", 
NULL
, 
this
);

1144 i‡(
s
.
	`isNuŒ
())

1146 i‡(
	`c⁄f_wrôe
(
QFûe
::
	`ícodeName
(
s
)))

1147 
QMesßgeBox
::
	`öf‹m©i⁄
(
this
, "qconf", "UnableÅo save configuration!");

1148 
	}
}

1150 
	gC⁄figMaöWödow
::
	$ch™geMíu
(
míu
 *menu)

1152 
c⁄figLi°
->
	`£tRoŸMíu
(
míu
);

1153 
backA˘i⁄
->
	`£tE«bÀd
(
TRUE
);

1154 
	}
}

1156 
	gC⁄figMaöWödow
::
	$li°FocusCh™ged
()

1158 i‡(
míuLi°
->
	`hasFocus
()) {

1159 i‡(
míuLi°
->
mode
 =
míuMode
)

1160 
c⁄figLi°
->
	`˛órSñe˘i⁄
();

1161 
	`£tHñp
(
míuLi°
->
	`£À˘edIãm
());

1162 } i‡(
c⁄figLi°
->
	`hasFocus
()) {

1163 
	`£tHñp
(
c⁄figLi°
->
	`£À˘edIãm
());

1165 
	}
}

1167 
	gC⁄figMaöWödow
::
	$goBack
()

1169 
C⁄figIãm
* 
ôem
;

1171 
c⁄figLi°
->
	`£tP¨ítMíu
();

1172 i‡(
c⁄figLi°
->
roŸE¡ry
 =&
roŸmíu
)

1173 
backA˘i⁄
->
	`£tE«bÀd
(
FALSE
);

1174 
ôem
 = (
C⁄figIãm
*)
míuLi°
->
	`£À˘edIãm
();

1175 
ôem
) {

1176 i‡(
ôem
->
míu
 =
c⁄figLi°
->
roŸE¡ry
) {

1177 
míuLi°
->
	`£tSñe˘ed
(
ôem
, 
TRUE
);

1180 
ôem
 = (
C⁄figIãm
*)ôem->
	`∑ª¡
();

1182 
	}
}

1184 
	gC⁄figMaöWödow
::
	$showSögÀVõw
()

1186 
míuVõw
->
	`hide
();

1187 
míuLi°
->
	`£tRoŸMíu
(0);

1188 
c⁄figLi°
->
mode
 = 
sögÀMode
;

1189 i‡(
c⁄figLi°
->
roŸE¡ry
 =&
roŸmíu
)

1190 
c⁄figLi°
->
	`upd©eLi°AŒ
();

1192 
c⁄figLi°
->
	`£tRoŸMíu
(&
roŸmíu
);

1193 
c⁄figLi°
->
	`£tAŒO≥n
(
TRUE
);

1194 
c⁄figLi°
->
	`£tFocus
();

1195 
	}
}

1197 
	gC⁄figMaöWödow
::
	$showS∂ôVõw
()

1199 
c⁄figLi°
->
mode
 = 
symbﬁMode
;

1200 i‡(
c⁄figLi°
->
roŸE¡ry
 =&
roŸmíu
)

1201 
c⁄figLi°
->
	`upd©eLi°AŒ
();

1203 
c⁄figLi°
->
	`£tRoŸMíu
(&
roŸmíu
);

1204 
c⁄figLi°
->
	`£tAŒO≥n
(
TRUE
);

1205 
c⁄figAµ
->
	`¥o˚ssEvíts
();

1206 
míuLi°
->
mode
 = 
míuMode
;

1207 
míuLi°
->
	`£tRoŸMíu
(&
roŸmíu
);

1208 
míuLi°
->
	`£tAŒO≥n
(
TRUE
);

1209 
míuVõw
->
	`show
();

1210 
míuLi°
->
	`£tFocus
();

1211 
	}
}

1213 
	gC⁄figMaöWödow
::
	$showFuŒVõw
()

1215 
míuVõw
->
	`hide
();

1216 
míuLi°
->
	`£tRoŸMíu
(0);

1217 
c⁄figLi°
->
mode
 = 
fuŒMode
;

1218 i‡(
c⁄figLi°
->
roŸE¡ry
 =&
roŸmíu
)

1219 
c⁄figLi°
->
	`upd©eLi°AŒ
();

1221 
c⁄figLi°
->
	`£tRoŸMíu
(&
roŸmíu
);

1222 
c⁄figLi°
->
	`£tAŒO≥n
(
FALSE
);

1223 
c⁄figLi°
->
	`£tFocus
();

1224 
	}
}

1226 
	gC⁄figMaöWödow
::
	$£tShowAŒ
(
boﬁ
 
b
)

1228 i‡(
c⁄figLi°
->
showAŒ
 =
b
)

1230 
c⁄figLi°
->
showAŒ
 = 
b
;

1231 
c⁄figLi°
->
	`upd©eLi°AŒ
();

1232 
míuLi°
->
showAŒ
 = 
b
;

1233 
míuLi°
->
	`upd©eLi°AŒ
();

1234 
	}
}

1236 
	gC⁄figMaöWödow
::
	$£tShowDebug
(
boﬁ
 
b
)

1238 i‡(
showDebug
 =
b
)

1240 
showDebug
 = 
b
;

1241 
	}
}

1243 
	gC⁄figMaöWödow
::
	$£tShowName
(
boﬁ
 
b
)

1245 i‡(
c⁄figLi°
->
showName
 =
b
)

1247 
c⁄figLi°
->
showName
 = 
b
;

1248 
c⁄figLi°
->
	`ªöô
();

1249 
míuLi°
->
showName
 = 
b
;

1250 
míuLi°
->
	`ªöô
();

1251 
	}
}

1253 
	gC⁄figMaöWödow
::
	$£tShowR™ge
(
boﬁ
 
b
)

1255 i‡(
c⁄figLi°
->
showR™ge
 =
b
)

1257 
c⁄figLi°
->
showR™ge
 = 
b
;

1258 
c⁄figLi°
->
	`ªöô
();

1259 
míuLi°
->
showR™ge
 = 
b
;

1260 
míuLi°
->
	`ªöô
();

1261 
	}
}

1263 
	gC⁄figMaöWödow
::
	$£tShowD©a
(
boﬁ
 
b
)

1265 i‡(
c⁄figLi°
->
showD©a
 =
b
)

1267 
c⁄figLi°
->
showD©a
 = 
b
;

1268 
c⁄figLi°
->
	`ªöô
();

1269 
míuLi°
->
showD©a
 = 
b
;

1270 
míuLi°
->
	`ªöô
();

1271 
	}
}

1277 
	gC⁄figMaöWödow
::
	$˛o£Evít
(
QClo£Evít
* 
e
)

1279 i‡(!
sym_ch™ge_cou¡
) {

1280 
e
->
	`ac˚±
();

1283 
QMesßgeBox
 
	`mb
("qc⁄f", "Savêc⁄figuøti⁄?", QMesßgeBox::
W¨nög
,

1284 
QMesßgeBox
::
Yes
 | QMesßgeBox::
DeÁu…
, QMesßgeBox::
No
, QMesßgeBox::
C™˚l
 | QMesßgeBox::
Esˇ≥
);

1285 
mb
.
	`£tBuâ⁄Text
(
QMesßgeBox
::
Yes
, "&Save Changes");

1286 
mb
.
	`£tBuâ⁄Text
(
QMesßgeBox
::
No
, "&Discard Changes");

1287 
mb
.
	`£tBuâ⁄Text
(
QMesßgeBox
::
C™˚l
, "Cancel Exit");

1288 
mb
.
	`exec
()) {

1289 
QMesßgeBox
::
Yes
:

1290 
	`c⁄f_wrôe
(
NULL
);

1291 
QMesßgeBox
::
No
:

1292 
e
->
	`ac˚±
();

1294 
QMesßgeBox
::
C™˚l
:

1295 
e
->
	`ign‹e
();

1298 
	}
}

1300 
	gC⁄figMaöWödow
::
	$showI¡ro
()

1302 
°r
[] = "WelcomeÅoÅhe qconf graphical kernel configurationÅool for Linux.\n\n"

1314 
QMesßgeBox
::
	`öf‹m©i⁄
(
this
, "qc⁄f", 
°r
);

1315 
	}
}

1317 
	gC⁄figMaöWödow
::
	$showAbout
()

1319 
°r
[] = "qconf is Copyright (C) 2002 Roman Zippel <zippel@linux-m68k.org>.\n\n"

1322 
QMesßgeBox
::
	`öf‹m©i⁄
(
this
, "qc⁄f", 
°r
);

1323 
	}
}

1325 
	gC⁄figMaöWödow
::
	$ßveSëtögs
()

1327 #i‡
QT_VERSION
 >= 300

1328 
C⁄figSëtögs
 *
c⁄figSëtögs
 = 
√w
 ConfigSettings;

1329 
c⁄figSëtögs
->
	`wrôeE¡ry
("/kc⁄fig/qc⁄f/wödow x", 
	`pos
().
	`x
());

1330 
c⁄figSëtögs
->
	`wrôeE¡ry
("/kc⁄fig/qc⁄f/wödow y", 
	`pos
().
	`y
());

1331 
c⁄figSëtögs
->
	`wrôeE¡ry
("/kc⁄fig/qc⁄f/wödow width", 
	`size
().
	`width
());

1332 
c⁄figSëtögs
->
	`wrôeE¡ry
("/kc⁄fig/qc⁄f/wödow height", 
	`size
().
	`height
());

1333 
c⁄figSëtögs
->
	`wrôeE¡ry
("/kc⁄fig/qc⁄f/showName", 
c⁄figLi°
->
showName
);

1334 
c⁄figSëtögs
->
	`wrôeE¡ry
("/kc⁄fig/qc⁄f/showR™ge", 
c⁄figLi°
->
showR™ge
);

1335 
c⁄figSëtögs
->
	`wrôeE¡ry
("/kc⁄fig/qc⁄f/showD©a", 
c⁄figLi°
->
showD©a
);

1336 
c⁄figSëtögs
->
	`wrôeE¡ry
("/kc⁄fig/qc⁄f/showAŒ", 
c⁄figLi°
->
showAŒ
);

1337 
c⁄figSëtögs
->
	`wrôeE¡ry
("/kc⁄fig/qc⁄f/showDebug", 
showDebug
);

1339 
QSåög
 
íåy
;

1340 
c⁄figLi°
->
mode
) {

1341 
sögÀMode
 :

1342 
íåy
 = "single";

1345 
symbﬁMode
 :

1346 
íåy
 = "split";

1349 
fuŒMode
 :

1350 
íåy
 = "full";

1353 
c⁄figSëtögs
->
	`wrôeE¡ry
("/kc⁄fig/qc⁄f/li°Mode", 
íåy
);

1355 
c⁄figSëtögs
->
	`wrôeSizes
("/kc⁄fig/qc⁄f/•lô1", 
•lô1
->
	`sizes
());

1356 
c⁄figSëtögs
->
	`wrôeSizes
("/kc⁄fig/qc⁄f/•lô2", 
•lô2
->
	`sizes
());

1358 
dñëe
 
c⁄figSëtögs
;

1360 
	}
}

1362 
	$fixup_roŸmíu
(
míu
 *menu)

1364 
míu
 *
chûd
;

1365 
míu_˙t
 = 0;

1367 
míu
->
Êags
 |
MENU_ROOT
;

1368 
chûd
 = 
míu
->
li°
; chûd; chûd = chûd->
√xt
) {

1369 i‡(
chûd
->
¥om±
 && chûd->¥om±->
ty≥
 =
P_MENU
) {

1370 
míu_˙t
++;

1371 
	`fixup_roŸmíu
(
chûd
);

1372 
míu_˙t
--;

1373 } i‡(!
míu_˙t
)

1374 
	`fixup_roŸmíu
(
chûd
);

1376 
	}
}

1378 c⁄° *
	g¥og«me
;

1380 
	$ußge
()

1382 
	`¥ötf
("%†<c⁄fig>\n", 
¥og«me
);

1383 
	`exô
(0);

1384 
	}
}

1386 
	$maö
(
ac
, ** 
av
)

1388 
C⁄figMaöWödow
* 
v
;

1389 c⁄° *
«me
;

1391 
	`bödãxtdomaö
(
PACKAGE
, 
LOCALEDIR
);

1392 
	`ãxtdomaö
(
PACKAGE
);

1394 #i‚de‡
LKC_DIRECT_LINK


1395 
	`kc⁄fig_lﬂd
();

1398 
¥og«me
 = 
av
[0];

1399 
c⁄figAµ
 = 
√w
 
	`QAµliˇti⁄
(
ac
, 
av
);

1400 i‡(
ac
 > 1 && 
av
[1][0] == '-') {

1401 
av
[1][1]) {

1404 
	`ußge
();

1406 
«me
 = 
av
[2];

1408 
«me
 = 
av
[1];

1409 i‡(!
«me
)

1410 
	`ußge
();

1412 
	`c⁄f_∑r£
(
«me
);

1413 
	`fixup_roŸmíu
(&
roŸmíu
);

1414 
	`c⁄f_ªad
(
NULL
);

1417 
v
 = 
√w
 
	`C⁄figMaöWödow
();

1420 
v
->
	`show
();

1421 
c⁄figAµ
->
	`c⁄√˘
(c⁄figAµ, 
	`SIGNAL
(
	`œ°WödowClo£d
()), 
	`SLOT
(
	`quô
()));

1422 
c⁄figAµ
->
	`c⁄√˘
(c⁄figAµ, 
	`SIGNAL
(
	`aboutToQuô
()), 
v
, 
	`SLOT
(
	`ßveSëtögs
()));

1423 
c⁄figAµ
->
	`exec
();

1426 
	}
}

	@qconf.h

6 
	~<qli°võw.h
>

7 #i‡
QT_VERSION
 >= 300

8 
	~<q£âögs.h
>

10 ˛as†
	cQSëtögs
 { };

13 
˛ass
 
	gC⁄figLi°
;

14 
˛ass
 
	gC⁄figIãm
;

15 
˛ass
 
	gC⁄figLöeEdô
;

16 
˛ass
 
	gC⁄figMaöWödow
;

19 ˛as†
	cC⁄figSëtögs
 : 
public
 
QSëtögs
 {

20 
public
:

21 
C⁄figSëtögs
();

23 #i‡
QT_VERSION
 >= 300

24 
ªadLi°Sëtögs
();

25 
	mQVÆueLi°
<> 
ªadSizes
(c⁄° 
QSåög
& 
key
, 
boﬁ
 *
ok
);

26 
boﬁ
 
wrôeSizes
(c⁄° 
QSåög
& 
key
, c⁄° 
QVÆueLi°
<>& 
vÆue
);

29 
boﬁ
 
	mshowAŒ
;

30 
boﬁ
 
	mshowName
;

31 
boﬁ
 
	mshowR™ge
;

32 
boﬁ
 
	mshowD©a
;

35 ˛as†
	cC⁄figVõw
 : 
public
 
QVBox
 {

36 
Q_OBJECT


37 
˛ass
 
	tQVBox
 
	tP¨ít
;

38 
	mpublic
:

39 
C⁄figVõw
(
QWidgë
* 
∑ª¡
, 
C⁄figMaöWödow
* 
cvõw
, 
C⁄figSëtögs
* 
c⁄figSëtögs
);

40 ~
C⁄figVõw
();

41 
upd©eLi°
(
C⁄figIãm
* 
ôem
);

42 
upd©eLi°AŒ
();

44 
	mpublic
:

45 
C⁄figLi°
* 
li°
;

46 
C⁄figLöeEdô
* 
	mlöeEdô
;

48 
C⁄figVõw
* 
	mvõwLi°
;

49 
C⁄figVõw
* 
	m√xtVõw
;

52 
	ecﬁIdx
 {

53 
	m¥om±CﬁIdx
, 
	m«meCﬁIdx
, 
	mnoCﬁIdx
, 
	mmodCﬁIdx
, 
	myesCﬁIdx
, 
	md©aCﬁIdx
, 
	mcﬁNr


55 
	eli°Mode
 {

56 
	msögÀMode
, 
	mmíuMode
, 
	msymbﬁMode
, 
	mfuŒMode


59 ˛as†
	cC⁄figLi°
 : 
public
 
QLi°Võw
 {

60 
Q_OBJECT


61 
˛ass
 
	tQLi°Võw
 
	tP¨ít
;

62 
	mpublic
:

63 
C⁄figLi°
(
C⁄figVõw
* 
p
, 
C⁄figMaöWödow
* 
cvõw
, 
C⁄figSëtögs
 *
c⁄figSëtögs
);

64 
ªöô
();

65 
C⁄figVõw
* 
	$∑ª¡
() const

67  (
C⁄figVõw
*)
P¨ít
::
	`∑ª¡
();

70 
¥Ÿe˘ed
:

71 
C⁄figMaöWödow
* 
cvõw
;

73 
	`keyPªssEvít
(
QKeyEvít
 *
e
);

74 
	`c⁄ã¡sMou£PªssEvít
(
QMou£Evít
 *
e
);

75 
	`c⁄ã¡sMou£Rñó£Evít
(
QMou£Evít
 *
e
);

76 
	`c⁄ã¡sMou£MoveEvít
(
QMou£Evít
 *
e
);

77 
	`c⁄ã¡sMou£DoubÀClickEvít
(
QMou£Evít
 *
e
);

78 
	`focusInEvít
(
QFocusEvít
 *
e
);

79 
public
 
¶Ÿs
:

80 
	`£tRoŸMíu
(
míu
 *menu);

82 
	`upd©eLi°
(
C⁄figIãm
 *
ôem
);

83 
	`£tVÆue
(
C⁄figIãm
* 
ôem
, 
åi°©e
 
vÆ
);

84 
	`ch™geVÆue
(
C⁄figIãm
* 
ôem
);

85 
	`upd©eSñe˘i⁄
();

86 
sig«ls
:

87 
	`míuSñe˘ed
(
míu
 *menu);

88 
	`∑ª¡Sñe˘ed
();

89 
	`gŸFocus
();

91 
public
:

92 
	$upd©eLi°AŒ
()

94 
upd©eAŒ
 = 
åue
;

95 
	`upd©eLi°
(
NULL
);

96 
upd©eAŒ
 = 
Ál£
;

97 
	}
}

98 
C⁄figLi°
* 
	$li°Võw
()

100  
this
;

101 
	}
}

102 
C⁄figIãm
* 
	$fú°Chûd
() const

104  (
C⁄figIãm
 *)
P¨ít
::
	`fú°Chûd
();

105 
	}
}

106 
	$m≠Idx
(
cﬁIdx
 
idx
)

108  
cﬁM≠
[
idx
];

109 
	}
}

110 
	$addCﬁumn
(
cﬁIdx
 
idx
, c⁄° 
QSåög
& 
œbñ
)

112 
cﬁM≠
[
idx
] = 
P¨ít
::
	`addCﬁumn
(
œbñ
);

113 
cﬁRevM≠
[
cﬁM≠
[
idx
]] = idx;

114 
	}
}

115 
	$ªmoveCﬁumn
(
cﬁIdx
 
idx
)

117 
cﬁ
 = 
cﬁM≠
[
idx
];

118 i‡(
cﬁ
 >= 0) {

119 
P¨ít
::
	`ªmoveCﬁumn
(
cﬁ
);

120 
cﬁRevM≠
[
cﬁ
] = 
cﬁM≠
[
idx
] = -1;

122 
	}
}

123 
£tAŒO≥n
(
boﬁ
 
›í
);

124 
£tP¨ítMíu
();

126 
	gãm∂©e
 <
˛ass
 
	gP
>

127 
upd©eMíuLi°
(
P
*, 
míu
*);

129 
boﬁ
 
	gupd©eAŒ
;

131 
QPixm≠
 
	gsymbﬁYesPix
, 
	gsymbﬁModPix
, 
	gsymbﬁNoPix
;

132 
QPixm≠
 
	gchoi˚YesPix
, 
	gchoi˚NoPix
;

133 
QPixm≠
 
	gmíuPix
, 
	gmíuInvPix
, 
	gmíuBackPix
, 
	gvoidPix
;

135 
boﬁ
 
	gshowAŒ
, 
	gshowName
, 
	gshowR™ge
, 
	gshowD©a
;

136 
li°Mode
 
	gmode
;

137 
míu
 *
	groŸE¡ry
;

138 
QCﬁ‹Group
 
	gdißbÀdCﬁ‹Group
;

139 
QCﬁ‹Group
 
	göa˘ivedCﬁ‹Group
;

141 
	g¥iv©e
:

142 
cﬁM≠
[
cﬁNr
];

143 
	gcﬁRevM≠
[
cﬁNr
];

146 ˛as†
	cC⁄figIãm
 : 
public
 
QLi°VõwIãm
 {

147 
˛ass
 
	tQLi°VõwIãm
 
	tP¨ít
;

148 
	mpublic
:

149 
	$C⁄figIãm
(
QLi°Võw
 *
∑ª¡
, 
C⁄figIãm
 *
a·î
, 
míu
 *
m
, 
boﬁ
 
v
)

150 : 
	`P¨ít
(
∑ª¡
, 
a·î
), 
	`míu
(
m
), 
	`visibÀ
(
v
), 
	$goP¨ít
(
Ál£
)

152 
	`öô
();

154 
	$C⁄figIãm
(
C⁄figIãm
 *
∑ª¡
, C⁄figIãm *
a·î
, 
míu
 *
m
, 
boﬁ
 
v
)

155 : 
	`P¨ít
(
∑ª¡
, 
a·î
), 
	`míu
(
m
), 
	`visibÀ
(
v
), 
	$goP¨ít
(
Ál£
)

157 
	`öô
();

158 
	}
}

159 
	$C⁄figIãm
(
QLi°Võw
 *
∑ª¡
, 
C⁄figIãm
 *
a·î
, 
boﬁ
 
v
)

160 : 
	`P¨ít
(
∑ª¡
, 
a·î
), 
	`míu
(0), 
	`visibÀ
(
v
), 
	$goP¨ít
(
åue
)

162 
	`öô
();

163 
	}
}

164 ~
C⁄figIãm
();

165 
öô
();

166 #i‡
QT_VERSION
 >= 300

167 
okRíame
(
cﬁ
);

169 
upd©eMíu
();

170 
ã°Upd©eMíu
(
boﬁ
 
v
);

171 
C⁄figLi°
* 
	$li°Võw
() const

173  (
C⁄figLi°
*)
P¨ít
::
	`li°Võw
();

174 
	}
}

175 
C⁄figIãm
* 
	$fú°Chûd
() const

177  (
C⁄figIãm
 *)
P¨ít
::
	`fú°Chûd
();

178 
	}
}

179 
C⁄figIãm
* 
	$√xtSiblög
() const

181  (
C⁄figIãm
 *)
P¨ít
::
	`√xtSiblög
();

182 
	}
}

183 
	$£tText
(
cﬁIdx
 
idx
, c⁄° 
QSåög
& 
ãxt
)

185 
P¨ít
::
	`£tText
(
	`li°Võw
()->
	`m≠Idx
(
idx
), 
ãxt
);

186 
	}
}

187 
QSåög
 
	$ãxt
(
cﬁIdx
 
idx
) const

189  
P¨ít
::
	`ãxt
(
	`li°Võw
()->
	`m≠Idx
(
idx
));

190 
	}
}

191 
	$£tPixm≠
(
cﬁIdx
 
idx
, c⁄° 
QPixm≠
& 
pm
)

193 
P¨ít
::
	`£tPixm≠
(
	`li°Võw
()->
	`m≠Idx
(
idx
), 
pm
);

194 
	}
}

195 c⁄° 
QPixm≠
* 
	$pixm≠
(
cﬁIdx
 
idx
) const

197  
P¨ít
::
	`pixm≠
(
	`li°Võw
()->
	`m≠Idx
(
idx
));

198 
	}
}

199 
∑ötCñl
(
QPaöãr
* 
p
, c⁄° 
QCﬁ‹Group
& 
cg
, 
cﬁumn
, 
width
, 
Æign
);

201 
C⁄figIãm
* 
	g√xtIãm
;

202 
míu
 *
	gmíu
;

203 
boﬁ
 
	gvisibÀ
;

204 
boﬁ
 
	ggoP¨ít
;

207 ˛as†
	cC⁄figLöeEdô
 : 
public
 
QLöeEdô
 {

208 
Q_OBJECT


209 
˛ass
 
	tQLöeEdô
 
	tP¨ít
;

210 
	mpublic
:

211 
	$C⁄figLöeEdô
(
C⁄figVõw
* 
∑ª¡
)

212 : 
	$P¨ít
(
∑ª¡
)

214 
C⁄figVõw
* 
	$∑ª¡
() const

216  (
C⁄figVõw
*)
P¨ít
::
	`∑ª¡
();

217 
	}
}

218 
show
(
C⁄figIãm
 *
i
);

219 
keyPªssEvít
(
QKeyEvít
 *
e
);

221 
	gpublic
:

222 
C⁄figIãm
 *
ôem
;

225 ˛as†
	cC⁄figMaöWödow
 : 
public
 
QMaöWödow
 {

226 
Q_OBJECT


227 
public
:

228 
C⁄figMaöWödow
();

229 
public
 
	m¶Ÿs
:

230 
£tHñp
(
QLi°VõwIãm
* 
ôem
);

231 
ch™geMíu
(
míu
 *);

232 
li°FocusCh™ged
();

233 
goBack
();

234 
lﬂdC⁄fig
();

235 
ßveC⁄fig
();

236 
ßveC⁄figAs
();

237 
showSögÀVõw
();

238 
showS∂ôVõw
();

239 
showFuŒVõw
();

240 
£tShowAŒ
(
boﬁ
);

241 
£tShowDebug
(
boﬁ
);

242 
£tShowR™ge
(
boﬁ
);

243 
£tShowName
(
boﬁ
);

244 
£tShowD©a
(
boﬁ
);

245 
showI¡ro
();

246 
showAbout
();

247 
ßveSëtögs
();

249 
	m¥Ÿe˘ed
:

250 
˛o£Evít
(
QClo£Evít
 *
e
);

252 
C⁄figVõw
 *
	mmíuVõw
;

253 
C⁄figLi°
 *
	mmíuLi°
;

254 
C⁄figVõw
 *
	mc⁄figVõw
;

255 
C⁄figLi°
 *
	mc⁄figLi°
;

256 
QTextVõw
 *
	mhñpText
;

257 
QToﬁB¨
 *
	mtoﬁB¨
;

258 
QA˘i⁄
 *
	mbackA˘i⁄
;

259 
QS∂ôãr
* 
	m•lô1
;

260 
QS∂ôãr
* 
	m•lô2
;

262 
boﬁ
 
	mshowDebug
;

	@symbol.c

6 
	~<˘y≥.h
>

7 
	~<°dlib.h
>

8 
	~<°rög.h
>

9 
	~<ªgex.h
>

10 
	~<sys/ut¢ame.h
>

12 
	#LKC_DIRECT_LINK


	)

13 
	~"lkc.h
"

15 
symbﬁ
 
	gsymbﬁ_yes
 = {

16 .
«me
 = "y",

17 .
	gcuº
 = { "y", 
yes
 },

18 .
	gÊags
 = 
SYMBOL_YES
|
SYMBOL_VALID
,

19 }, 
	gsymbﬁ_mod
 = {

20 .
«me
 = "m",

21 .
	gcuº
 = { "m", 
mod
 },

22 .
	gÊags
 = 
SYMBOL_MOD
|
SYMBOL_VALID
,

23 }, 
	gsymbﬁ_no
 = {

24 .
«me
 = "n",

25 .
	gcuº
 = { "n", 
no
 },

26 .
	gÊags
 = 
SYMBOL_NO
|
SYMBOL_VALID
,

27 }, 
	gsymbﬁ_em±y
 = {

28 .
«me
 = "",

29 .
	gcuº
 = { "", 
no
 },

30 .
	gÊags
 = 
SYMBOL_VALID
,

33 
	gsym_ch™ge_cou¡
;

34 
symbﬁ
 *
	gmoduÀs_sym
;

35 
åi°©e
 
	gmoduÀs_vÆ
;

37 
	$sym_add_deÁu…
(
symbﬁ
 *
sym
, c⁄° *
def
)

39 
¥›îty
 *
¥›
 = 
	`¥›_Æloc
(
P_DEFAULT
, 
sym
);

41 
¥›
->
ex¥
 = 
	`ex¥_Æloc_symbﬁ
(
	`sym_lookup
(
def
, 1));

42 
	}
}

44 
	$sym_öô
()

46 
symbﬁ
 *
sym
;

47 
ut¢ame
 
uts
;

48 *
p
;

49 
boﬁ
 
öôed
 = 
Ál£
;

51 i‡(
öôed
)

53 
öôed
 = 
åue
;

55 
	`u«me
(&
uts
);

57 
sym
 = 
	`sym_lookup
("ARCH", 0);

58 
sym
->
ty≥
 = 
S_STRING
;

59 
sym
->
Êags
 |
SYMBOL_AUTO
;

60 
p
 = 
	`gëív
("ARCH");

61 i‡(
p
)

62 
	`sym_add_deÁu…
(
sym
, 
p
);

64 
sym
 = 
	`sym_lookup
("KERNELVERSION", 0);

65 
sym
->
ty≥
 = 
S_STRING
;

66 
sym
->
Êags
 |
SYMBOL_AUTO
;

67 
p
 = 
	`gëív
("KERNELVERSION");

68 i‡(
p
)

69 
	`sym_add_deÁu…
(
sym
, 
p
);

71 
sym
 = 
	`sym_lookup
("UNAME_RELEASE", 0);

72 
sym
->
ty≥
 = 
S_STRING
;

73 
sym
->
Êags
 |
SYMBOL_AUTO
;

74 
	`sym_add_deÁu…
(
sym
, 
uts
.
ªÀa£
);

75 
	}
}

77 
symbﬁ_ty≥
 
	$sym_gë_ty≥
(
symbﬁ
 *
sym
)

79 
symbﬁ_ty≥
 
ty≥
 = 
sym
->type;

81 i‡(
ty≥
 =
S_TRISTATE
) {

82 i‡(
	`sym_is_choi˚_vÆue
(
sym
Ë&& sym->
visibÀ
 =
yes
)

83 
ty≥
 = 
S_BOOLEAN
;

84 i‡(
moduÀs_vÆ
 =
no
)

85 
ty≥
 = 
S_BOOLEAN
;

87  
ty≥
;

88 
	}
}

90 c⁄° *
	$sym_ty≥_«me
(
symbﬁ_ty≥
 
ty≥
)

92 
ty≥
) {

93 
S_BOOLEAN
:

95 
S_TRISTATE
:

97 
S_INT
:

99 
S_HEX
:

101 
S_STRING
:

103 
S_UNKNOWN
:

105 
S_OTHER
:

109 
	}
}

111 
¥›îty
 *
	$sym_gë_choi˚_¥›
(
symbﬁ
 *
sym
)

113 
¥›îty
 *
¥›
;

115 
	`f‹_Æl_choi˚s
(
sym
, 
¥›
)

116  
¥›
;

117  
NULL
;

118 
	}
}

120 
¥›îty
 *
	$sym_gë_deÁu…_¥›
(
symbﬁ
 *
sym
)

122 
¥›îty
 *
¥›
;

124 
	`f‹_Æl_deÁu…s
(
sym
, 
¥›
) {

125 
¥›
->
visibÀ
.
åi
 = 
	`ex¥_ˇlc_vÆue
’r›->visibÀ.
ex¥
);

126 i‡(
¥›
->
visibÀ
.
åi
 !
no
)

127  
¥›
;

129  
NULL
;

130 
	}
}

132 
¥›îty
 *
	$sym_gë_ønge_¥›
(
symbﬁ
 *
sym
)

134 
¥›îty
 *
¥›
;

136 
	`f‹_Æl_¥›îtõs
(
sym
, 
¥›
, 
P_RANGE
) {

137 
¥›
->
visibÀ
.
åi
 = 
	`ex¥_ˇlc_vÆue
’r›->visibÀ.
ex¥
);

138 i‡(
¥›
->
visibÀ
.
åi
 !
no
)

139  
¥›
;

141  
NULL
;

142 
	}
}

144 
	$sym_gë_ønge_vÆ
(
symbﬁ
 *
sym
, 
ba£
)

146 
	`sym_ˇlc_vÆue
(
sym
);

147 
sym
->
ty≥
) {

148 
S_INT
:

149 
ba£
 = 10;

151 
S_HEX
:

152 
ba£
 = 16;

157  
	`°πﬁ
(
sym
->
cuº
.
vÆ
, 
NULL
, 
ba£
);

158 
	}
}

160 
	$sym_vÆid©e_ønge
(
symbﬁ
 *
sym
)

162 
¥›îty
 *
¥›
;

163 
ba£
, 
vÆ
, 
vÆ2
;

164 
°r
[64];

166 
sym
->
ty≥
) {

167 
S_INT
:

168 
ba£
 = 10;

170 
S_HEX
:

171 
ba£
 = 16;

176 
¥›
 = 
	`sym_gë_ønge_¥›
(
sym
);

177 i‡(!
¥›
)

179 
vÆ
 = 
	`°πﬁ
(
sym
->
cuº
.vÆ, 
NULL
, 
ba£
);

180 
vÆ2
 = 
	`sym_gë_ønge_vÆ
(
¥›
->
ex¥
->
À·
.
sym
, 
ba£
);

181 i‡(
vÆ
 >
vÆ2
) {

182 
vÆ2
 = 
	`sym_gë_ønge_vÆ
(
¥›
->
ex¥
->
right
.
sym
, 
ba£
);

183 i‡(
vÆ
 <
vÆ2
)

186 i‡(
sym
->
ty≥
 =
S_INT
)

187 
	`•rötf
(
°r
, "%d", 
vÆ2
);

189 
	`•rötf
(
°r
, "0x%x", 
vÆ2
);

190 
sym
->
cuº
.
vÆ
 = 
	`°rdup
(
°r
);

191 
	}
}

193 
	$sym_ˇlc_visibûôy
(
symbﬁ
 *
sym
)

195 
¥›îty
 *
¥›
;

196 
åi°©e
 
åi
;

199 
åi
 = 
no
;

200 
	`f‹_Æl_¥om±s
(
sym
, 
¥›
) {

201 
¥›
->
visibÀ
.
åi
 = 
	`ex¥_ˇlc_vÆue
’r›->visibÀ.
ex¥
);

202 
åi
 = 
	`E_OR
—ri, 
¥›
->
visibÀ
.tri);

204 i‡(
åi
 =
mod
 && (
sym
->
ty≥
 !
S_TRISTATE
 || 
moduÀs_vÆ
 =
no
))

205 
åi
 = 
yes
;

206 i‡(
sym
->
visibÀ
 !
åi
) {

207 
sym
->
visibÀ
 = 
åi
;

208 
	`sym_£t_ch™ged
(
sym
);

210 i‡(
	`sym_is_choi˚_vÆue
(
sym
))

212 
åi
 = 
no
;

213 i‡(
sym
->
ªv_dï
.
ex¥
)

214 
åi
 = 
	`ex¥_ˇlc_vÆue
(
sym
->
ªv_dï
.
ex¥
);

215 i‡(
åi
 =
mod
 && 
	`sym_gë_ty≥
(
sym
Ë=
S_BOOLEAN
)

216 
åi
 = 
yes
;

217 i‡(
sym
->
ªv_dï
.
åi
 !=Åri) {

218 
sym
->
ªv_dï
.
åi
 =Åri;

219 
	`sym_£t_ch™ged
(
sym
);

221 
	}
}

223 
symbﬁ
 *
	$sym_ˇlc_choi˚
(
symbﬁ
 *
sym
)

225 
symbﬁ
 *
def_sym
;

226 
¥›îty
 *
¥›
;

227 
ex¥
 *
e
;

230 
def_sym
 = 
sym
->
u£r
.
vÆ
;

231 i‡(
def_sym
) {

232 
	`sym_ˇlc_visibûôy
(
def_sym
);

233 i‡(
def_sym
->
visibÀ
 !
no
)

234  
def_sym
;

238 
	`f‹_Æl_deÁu…s
(
sym
, 
¥›
) {

239 
¥›
->
visibÀ
.
åi
 = 
	`ex¥_ˇlc_vÆue
’r›->visibÀ.
ex¥
);

240 i‡(
¥›
->
visibÀ
.
åi
 =
no
)

242 
def_sym
 = 
	`¥›_gë_symbﬁ
(
¥›
);

243 
	`sym_ˇlc_visibûôy
(
def_sym
);

244 i‡(
def_sym
->
visibÀ
 !
no
)

245  
def_sym
;

249 
¥›
 = 
	`sym_gë_choi˚_¥›
(
sym
);

250 
e
 = 
¥›
->
ex¥
;É;É =É->
À·
.expr) {

251 
def_sym
 = 
e
->
right
.
sym
;

252 
	`sym_ˇlc_visibûôy
(
def_sym
);

253 i‡(
def_sym
->
visibÀ
 !
no
)

254  
def_sym
;

258 
sym
->
cuº
.
åi
 = 
no
;

259  
NULL
;

260 
	}
}

262 
	$sym_ˇlc_vÆue
(
symbﬁ
 *
sym
)

264 
symbﬁ_vÆue
 
√wvÆ
, 
ﬁdvÆ
;

265 
¥›îty
 *
¥›
;

266 
ex¥
 *
e
;

268 i‡(!
sym
)

271 i‡(
sym
->
Êags
 & 
SYMBOL_VALID
)

273 
sym
->
Êags
 |
SYMBOL_VALID
;

275 
ﬁdvÆ
 = 
sym
->
cuº
;

277 
sym
->
ty≥
) {

278 
S_INT
:

279 
S_HEX
:

280 
S_STRING
:

281 
√wvÆ
 = 
symbﬁ_em±y
.
cuº
;

283 
S_BOOLEAN
:

284 
S_TRISTATE
:

285 
√wvÆ
 = 
symbﬁ_no
.
cuº
;

288 
sym
->
cuº
.
vÆ
 = sym->
«me
;

289 
sym
->
cuº
.
åi
 = 
no
;

292 i‡(!
	`sym_is_choi˚_vÆue
(
sym
))

293 
sym
->
Êags
 &~
SYMBOL_WRITE
;

295 
	`sym_ˇlc_visibûôy
(
sym
);

298 
sym
->
cuº
 = 
√wvÆ
;

300 
	`sym_gë_ty≥
(
sym
)) {

301 
S_BOOLEAN
:

302 
S_TRISTATE
:

303 i‡(
	`sym_is_choi˚_vÆue
(
sym
Ë&& sym->
visibÀ
 =
yes
) {

304 
¥›
 = 
	`sym_gë_choi˚_¥›
(
sym
);

305 
√wvÆ
.
åi
 = (
	`¥›_gë_symbﬁ
(
¥›
)->
cuº
.
vÆ
 =
sym
Ë? 
yes
 : 
no
;

306 } i‡(
	`E_OR
(
sym
->
visibÀ
, sym->
ªv_dï
.
åi
Ë!
no
) {

307 
sym
->
Êags
 |
SYMBOL_WRITE
;

308 i‡(
	`sym_has_vÆue
(
sym
))

309 
√wvÆ
.
åi
 = 
sym
->
u£r
.tri;

310 i‡(!
	`sym_is_choi˚
(
sym
)) {

311 
¥›
 = 
	`sym_gë_deÁu…_¥›
(
sym
);

312 i‡(
¥›
)

313 
√wvÆ
.
åi
 = 
	`ex¥_ˇlc_vÆue
(
¥›
->
ex¥
);

315 
√wvÆ
.
åi
 = 
	`E_OR
(
	`E_AND
“ewvÆ.åi, 
sym
->
visibÀ
), sym->
ªv_dï
.tri);

316 } i‡(!
	`sym_is_choi˚
(
sym
)) {

317 
¥›
 = 
	`sym_gë_deÁu…_¥›
(
sym
);

318 i‡(
¥›
) {

319 
sym
->
Êags
 |
SYMBOL_WRITE
;

320 
√wvÆ
.
åi
 = 
	`ex¥_ˇlc_vÆue
(
¥›
->
ex¥
);

323 i‡(
√wvÆ
.
åi
 =
mod
 && 
	`sym_gë_ty≥
(
sym
Ë=
S_BOOLEAN
)

324 
√wvÆ
.
åi
 = 
yes
;

326 
S_STRING
:

327 
S_HEX
:

328 
S_INT
:

329 i‡(
sym
->
visibÀ
 !
no
) {

330 
sym
->
Êags
 |
SYMBOL_WRITE
;

331 i‡(
	`sym_has_vÆue
(
sym
)) {

332 
√wvÆ
.
vÆ
 = 
sym
->
u£r
.val;

336 
¥›
 = 
	`sym_gë_deÁu…_¥›
(
sym
);

337 i‡(
¥›
) {

338 
symbﬁ
 *
ds
 = 
	`¥›_gë_symbﬁ
(
¥›
);

339 i‡(
ds
) {

340 
sym
->
Êags
 |
SYMBOL_WRITE
;

341 
	`sym_ˇlc_vÆue
(
ds
);

342 
√wvÆ
.
vÆ
 = 
ds
->
cuº
.val;

350 
sym
->
cuº
 = 
√wvÆ
;

351 i‡(
	`sym_is_choi˚
(
sym
Ë&& 
√wvÆ
.
åi
 =
yes
)

352 
sym
->
cuº
.
vÆ
 = 
	`sym_ˇlc_choi˚
(sym);

353 
	`sym_vÆid©e_ønge
(
sym
);

355 i‡(
	`memcmp
(&
ﬁdvÆ
, &
sym
->
cuº
, (oldval)))

356 
	`sym_£t_ch™ged
(
sym
);

357 i‡(
moduÀs_sym
 =
sym
)

358 
moduÀs_vÆ
 = 
moduÀs_sym
->
cuº
.
åi
;

360 i‡(
	`sym_is_choi˚
(
sym
)) {

361 
Êags
 = 
sym
->Êag†& (
SYMBOL_CHANGED
 | 
SYMBOL_WRITE
);

362 
¥›
 = 
	`sym_gë_choi˚_¥›
(
sym
);

363 
e
 = 
¥›
->
ex¥
;É;É =É->
À·
.expr) {

364 
e
->
right
.
sym
->
Êags
 |= flags;

365 i‡(
Êags
 & 
SYMBOL_CHANGED
)

366 
	`sym_£t_ch™ged
(
e
->
right
.
sym
);

369 
	}
}

371 
	$sym_˛ór_Æl_vÆid
()

373 
symbﬁ
 *
sym
;

374 
i
;

376 
	`f‹_Æl_symbﬁs
(
i
, 
sym
)

377 
sym
->
Êags
 &~
SYMBOL_VALID
;

378 
sym_ch™ge_cou¡
++;

379 i‡(
moduÀs_sym
)

380 
	`sym_ˇlc_vÆue
(
moduÀs_sym
);

381 
	}
}

383 
	$sym_£t_ch™ged
(
symbﬁ
 *
sym
)

385 
¥›îty
 *
¥›
;

387 
sym
->
Êags
 |
SYMBOL_CHANGED
;

388 
¥›
 = 
sym
->¥›;Ör›;Ör› =Ör›->
√xt
) {

389 i‡(
¥›
->
míu
)

390 
¥›
->
míu
->
Êags
 |
MENU_CHANGED
;

392 
	}
}

394 
	$sym_£t_Æl_ch™ged
()

396 
symbﬁ
 *
sym
;

397 
i
;

399 
	`f‹_Æl_symbﬁs
(
i
, 
sym
)

400 
	`sym_£t_ch™ged
(
sym
);

401 
	}
}

403 
boﬁ
 
	$sym_åi°©e_wôhö_ønge
(
symbﬁ
 *
sym
, 
åi°©e
 
vÆ
)

405 
ty≥
 = 
	`sym_gë_ty≥
(
sym
);

407 i‡(
sym
->
visibÀ
 =
no
)

408  
Ál£
;

410 i‡(
ty≥
 !
S_BOOLEAN
 &&Åy≥ !
S_TRISTATE
)

411  
Ál£
;

413 i‡(
ty≥
 =
S_BOOLEAN
 && 
vÆ
 =
mod
)

414  
Ál£
;

415 i‡(
sym
->
visibÀ
 <sym->
ªv_dï
.
åi
)

416  
Ál£
;

417 i‡(
	`sym_is_choi˚_vÆue
(
sym
Ë&& sym->
visibÀ
 =
yes
)

418  
vÆ
 =
yes
;

419  
vÆ
 >
sym
->
ªv_dï
.
åi
 && vÆ <sym->
visibÀ
;

420 
	}
}

422 
boﬁ
 
	$sym_£t_åi°©e_vÆue
(
symbﬁ
 *
sym
, 
åi°©e
 
vÆ
)

424 
åi°©e
 
ﬁdvÆ
 = 
	`sym_gë_åi°©e_vÆue
(
sym
);

426 i‡(
ﬁdvÆ
 !
vÆ
 && !
	`sym_åi°©e_wôhö_ønge
(
sym
, val))

427  
Ál£
;

429 i‡(
sym
->
Êags
 & 
SYMBOL_NEW
) {

430 
sym
->
Êags
 &~
SYMBOL_NEW
;

431 
	`sym_£t_ch™ged
(
sym
);

437 i‡(
	`sym_is_choi˚_vÆue
(
sym
Ë&& 
vÆ
 =
yes
) {

438 
symbﬁ
 *
cs
 = 
	`¥›_gë_symbﬁ
(
	`sym_gë_choi˚_¥›
(
sym
));

439 
¥›îty
 *
¥›
;

440 
ex¥
 *
e
;

442 
cs
->
u£r
.
vÆ
 = 
sym
;

443 
cs
->
Êags
 &~
SYMBOL_NEW
;

444 
¥›
 = 
	`sym_gë_choi˚_¥›
(
cs
);

445 
e
 = 
¥›
->
ex¥
;É;É =É->
À·
.expr) {

446 i‡(
e
->
right
.
sym
->
visibÀ
 !
no
)

447 
e
->
right
.
sym
->
Êags
 &~
SYMBOL_NEW
;

451 
sym
->
u£r
.
åi
 = 
vÆ
;

452 i‡(
ﬁdvÆ
 !
vÆ
) {

453 
	`sym_˛ór_Æl_vÆid
();

454 i‡(
sym
 =
moduÀs_sym
)

455 
	`sym_£t_Æl_ch™ged
();

458  
åue
;

459 
	}
}

461 
åi°©e
 
	$sym_toggÀ_åi°©e_vÆue
(
symbﬁ
 *
sym
)

463 
åi°©e
 
ﬁdvÆ
, 
√wvÆ
;

465 
ﬁdvÆ
 = 
√wvÆ
 = 
	`sym_gë_åi°©e_vÆue
(
sym
);

467 
√wvÆ
) {

468 
no
:

469 
√wvÆ
 = 
mod
;

471 
mod
:

472 
√wvÆ
 = 
yes
;

474 
yes
:

475 
√wvÆ
 = 
no
;

478 i‡(
	`sym_£t_åi°©e_vÆue
(
sym
, 
√wvÆ
))

480 } 
ﬁdvÆ
 !
√wvÆ
);

481  
√wvÆ
;

482 
	}
}

484 
boﬁ
 
	$sym_°rög_vÆid
(
symbﬁ
 *
sym
, c⁄° *
°r
)

486 sig√d 
ch
;

488 
sym
->
ty≥
) {

489 
S_STRING
:

490  
åue
;

491 
S_INT
:

492 
ch
 = *
°r
++;

493 i‡(
ch
 == '-')

494 
ch
 = *
°r
++;

495 i‡(!
	`isdigô
(
ch
))

496  
Ál£
;

497 i‡(
ch
 ='0' && *
°r
 != 0)

498  
Ál£
;

499 (
ch
 = *
°r
++)) {

500 i‡(!
	`isdigô
(
ch
))

501  
Ál£
;

503  
åue
;

504 
S_HEX
:

505 i‡(
°r
[0] == '0' && (str[1] == 'x' || str[1] == 'X'))

506 
°r
 += 2;

507 
ch
 = *
°r
++;

509 i‡(!
	`isxdigô
(
ch
))

510  
Ál£
;

511 } (
ch
 = *
°r
++));

512  
åue
;

513 
S_BOOLEAN
:

514 
S_TRISTATE
:

515 
°r
[0]) {

519  
åue
;

521  
Ál£
;

523  
Ál£
;

525 
	}
}

527 
boﬁ
 
	$sym_°rög_wôhö_ønge
(
symbﬁ
 *
sym
, c⁄° *
°r
)

529 
¥›îty
 *
¥›
;

530 
vÆ
;

532 
sym
->
ty≥
) {

533 
S_STRING
:

534  
	`sym_°rög_vÆid
(
sym
, 
°r
);

535 
S_INT
:

536 i‡(!
	`sym_°rög_vÆid
(
sym
, 
°r
))

537  
Ál£
;

538 
¥›
 = 
	`sym_gë_ønge_¥›
(
sym
);

539 i‡(!
¥›
)

540  
åue
;

541 
vÆ
 = 
	`°πﬁ
(
°r
, 
NULL
, 10);

542  
vÆ
 >
	`sym_gë_ønge_vÆ
(
¥›
->
ex¥
->
À·
.
sym
, 10) &&

543 
vÆ
 <
	`sym_gë_ønge_vÆ
(
¥›
->
ex¥
->
right
.
sym
, 10);

544 
S_HEX
:

545 i‡(!
	`sym_°rög_vÆid
(
sym
, 
°r
))

546  
Ál£
;

547 
¥›
 = 
	`sym_gë_ønge_¥›
(
sym
);

548 i‡(!
¥›
)

549  
åue
;

550 
vÆ
 = 
	`°πﬁ
(
°r
, 
NULL
, 16);

551  
vÆ
 >
	`sym_gë_ønge_vÆ
(
¥›
->
ex¥
->
À·
.
sym
, 16) &&

552 
vÆ
 <
	`sym_gë_ønge_vÆ
(
¥›
->
ex¥
->
right
.
sym
, 16);

553 
S_BOOLEAN
:

554 
S_TRISTATE
:

555 
°r
[0]) {

557  
	`sym_åi°©e_wôhö_ønge
(
sym
, 
yes
);

559  
	`sym_åi°©e_wôhö_ønge
(
sym
, 
mod
);

561  
	`sym_åi°©e_wôhö_ønge
(
sym
, 
no
);

563  
Ál£
;

565  
Ál£
;

567 
	}
}

569 
boﬁ
 
	$sym_£t_°rög_vÆue
(
symbﬁ
 *
sym
, c⁄° *
√wvÆ
)

571 c⁄° *
ﬁdvÆ
;

572 *
vÆ
;

573 
size
;

575 
sym
->
ty≥
) {

576 
S_BOOLEAN
:

577 
S_TRISTATE
:

578 
√wvÆ
[0]) {

580  
	`sym_£t_åi°©e_vÆue
(
sym
, 
yes
);

582  
	`sym_£t_åi°©e_vÆue
(
sym
, 
mod
);

584  
	`sym_£t_åi°©e_vÆue
(
sym
, 
no
);

586  
Ál£
;

591 i‡(!
	`sym_°rög_wôhö_ønge
(
sym
, 
√wvÆ
))

592  
Ál£
;

594 i‡(
sym
->
Êags
 & 
SYMBOL_NEW
) {

595 
sym
->
Êags
 &~
SYMBOL_NEW
;

596 
	`sym_£t_ch™ged
(
sym
);

599 
ﬁdvÆ
 = 
sym
->
u£r
.
vÆ
;

600 
size
 = 
	`°æí
(
√wvÆ
) + 1;

601 i‡(
sym
->
ty≥
 =
S_HEX
 && (
√wvÆ
[0] != '0' || (newval[1] != 'x' &&Çewval[1] != 'X'))) {

602 
size
 += 2;

603 
sym
->
u£r
.
vÆ
 = vÆ = 
	`mÆloc
(
size
);

604 *
vÆ
++ = '0';

605 *
vÆ
++ = 'x';

606 } i‡(!
ﬁdvÆ
 || 
	`°rcmp
(ﬁdvÆ, 
√wvÆ
))

607 
sym
->
u£r
.
vÆ
 = vÆ = 
	`mÆloc
(
size
);

609  
åue
;

611 
	`°r˝y
(
vÆ
, 
√wvÆ
);

612 
	`‰ì
((*)
ﬁdvÆ
);

613 
	`sym_˛ór_Æl_vÆid
();

615  
åue
;

616 
	}
}

618 c⁄° *
	$sym_gë_°rög_vÆue
(
symbﬁ
 *
sym
)

620 
åi°©e
 
vÆ
;

622 
sym
->
ty≥
) {

623 
S_BOOLEAN
:

624 
S_TRISTATE
:

625 
vÆ
 = 
	`sym_gë_åi°©e_vÆue
(
sym
);

626 
vÆ
) {

627 
no
:

629 
mod
:

631 
yes
:

638  (c⁄° *)
sym
->
cuº
.
vÆ
;

639 
	}
}

641 
boﬁ
 
	$sym_is_ch™gabÀ
(
symbﬁ
 *
sym
)

643  
sym
->
visibÀ
 > sym->
ªv_dï
.
åi
;

644 
	}
}

646 
symbﬁ
 *
	$sym_lookup
(c⁄° *
«me
, 
isc⁄°
)

648 
symbﬁ
 *symbol;

649 c⁄° *
±r
;

650 *
√w_«me
;

651 
hash
 = 0;

653 i‡(
«me
) {

654 i‡(
«me
[0] && !name[1]) {

655 
«me
[0]) {

656 'y':  &
symbﬁ_yes
;

657 'm':  &
symbﬁ_mod
;

658 'n':  &
symbﬁ_no
;

661 
±r
 = 
«me
; *ptr;Ötr++)

662 
hash
 +*
±r
;

663 
hash
 &= 0xff;

665 
symbﬁ
 = 
symbﬁ_hash
[
hash
]; symbﬁ; symbﬁ = symbﬁ->
√xt
) {

666 i‡(!
	`°rcmp
(
symbﬁ
->
«me
,Çame)) {

667 i‡((
isc⁄°
 && 
symbﬁ
->
Êags
 & 
SYMBOL_CONST
) ||

668 (!
isc⁄°
 && !(
symbﬁ
->
Êags
 & 
SYMBOL_CONST
)))

669  
symbﬁ
;

672 
√w_«me
 = 
	`°rdup
(
«me
);

674 
√w_«me
 = 
NULL
;

675 
hash
 = 256;

678 
symbﬁ
 = 
	`mÆloc
((*symbol));

679 
	`mem£t
(
symbﬁ
, 0, (*symbol));

680 
symbﬁ
->
«me
 = 
√w_«me
;

681 
symbﬁ
->
ty≥
 = 
S_UNKNOWN
;

682 
symbﬁ
->
Êags
 = 
SYMBOL_NEW
;

683 i‡(
isc⁄°
)

684 
symbﬁ
->
Êags
 |
SYMBOL_CONST
;

686 
symbﬁ
->
√xt
 = 
symbﬁ_hash
[
hash
];

687 
symbﬁ_hash
[
hash
] = 
symbﬁ
;

689  
symbﬁ
;

690 
	}
}

692 
symbﬁ
 *
	$sym_föd
(c⁄° *
«me
)

694 
symbﬁ
 *symbﬁ = 
NULL
;

695 c⁄° *
±r
;

696 
hash
 = 0;

698 i‡(!
«me
)

699  
NULL
;

701 i‡(
«me
[0] && !name[1]) {

702 
«me
[0]) {

703 'y':  &
symbﬁ_yes
;

704 'm':  &
symbﬁ_mod
;

705 'n':  &
symbﬁ_no
;

708 
±r
 = 
«me
; *ptr;Ötr++)

709 
hash
 +*
±r
;

710 
hash
 &= 0xff;

712 
symbﬁ
 = 
symbﬁ_hash
[
hash
]; symbﬁ; symbﬁ = symbﬁ->
√xt
) {

713 i‡(!
	`°rcmp
(
symbﬁ
->
«me
,Çame) &&

714 !(
symbﬁ
->
Êags
 & 
SYMBOL_CONST
))

718  
symbﬁ
;

719 
	}
}

721 
symbﬁ
 **
	$sym_ª_£¨ch
(c⁄° *
∑âîn
)

723 
symbﬁ
 *
sym
, **
sym_¨r
 = 
NULL
;

724 
i
, 
˙t
, 
size
;

725 
ªgex_t
 
ª
;

727 
˙t
 = 
size
 = 0;

729 i‡(
	`°æí
(
∑âîn
) == 0)

730  
NULL
;

731 i‡(
	`ªgcomp
(&
ª
, 
∑âîn
, 
REG_EXTENDED
|
REG_NOSUB
|
REG_ICASE
))

732  
NULL
;

734 
	`f‹_Æl_symbﬁs
(
i
, 
sym
) {

735 i‡(
sym
->
Êags
 & 
SYMBOL_CONST
 || !sym->
«me
)

737 i‡(
	`ªgexec
(&
ª
, 
sym
->
«me
, 0, 
NULL
, 0))

739 i‡(
˙t
 + 1 >
size
) {

740 *
tmp
 = 
sym_¨r
;

741 
size
 += 16;

742 
sym_¨r
 = 
	`ªÆloc
(sym_¨r, 
size
 * (
symbﬁ
 *));

743 i‡(!
sym_¨r
) {

744 
	`‰ì
(
tmp
);

745  
NULL
;

748 
sym_¨r
[
˙t
++] = 
sym
;

750 i‡(
sym_¨r
)

751 
sym_¨r
[
˙t
] = 
NULL
;

752 
	`ªg‰ì
(&
ª
);

754  
sym_¨r
;

755 
	}
}

758 
symbﬁ
 *
sym_check_dïs
(symbﬁ *
sym
);

760 
symbﬁ
 *
	$sym_check_ex¥_dïs
(
ex¥
 *
e
)

762 
symbﬁ
 *
sym
;

764 i‡(!
e
)

765  
NULL
;

766 
e
->
ty≥
) {

767 
E_OR
:

768 
E_AND
:

769 
sym
 = 
	`sym_check_ex¥_dïs
(
e
->
À·
.
ex¥
);

770 i‡(
sym
)

771  
sym
;

772  
	`sym_check_ex¥_dïs
(
e
->
right
.
ex¥
);

773 
E_NOT
:

774  
	`sym_check_ex¥_dïs
(
e
->
À·
.
ex¥
);

775 
E_EQUAL
:

776 
E_UNEQUAL
:

777 
sym
 = 
	`sym_check_dïs
(
e
->
À·
.sym);

778 i‡(
sym
)

779  
sym
;

780  
	`sym_check_dïs
(
e
->
right
.
sym
);

781 
E_SYMBOL
:

782  
	`sym_check_dïs
(
e
->
À·
.
sym
);

786 
	`¥ötf
("O›s! HowÅÿcheck %d?\n", 
e
->
ty≥
);

787  
NULL
;

788 
	}
}

790 
symbﬁ
 *
	$sym_check_dïs
(
symbﬁ
 *
sym
)

792 
symbﬁ
 *
sym2
;

793 
¥›îty
 *
¥›
;

795 i‡(
sym
->
Êags
 & 
SYMBOL_CHECK
) {

796 
	`¥ötf
("W¨nög! FoundÑecursivêdïídícy: %s", 
sym
->
«me
);

797  
sym
;

799 i‡(
sym
->
Êags
 & 
SYMBOL_CHECKED
)

800  
NULL
;

802 
sym
->
Êags
 |(
SYMBOL_CHECK
 | 
SYMBOL_CHECKED
);

803 
sym2
 = 
	`sym_check_ex¥_dïs
(
sym
->
ªv_dï
.
ex¥
);

804 i‡(
sym2
)

805 
out
;

807 
¥›
 = 
sym
->¥›;Ör›;Ör› =Ör›->
√xt
) {

808 i‡(
¥›
->
ty≥
 =
P_CHOICE
 ||Ör›->ty≥ =
P_SELECT
)

810 
sym2
 = 
	`sym_check_ex¥_dïs
(
¥›
->
visibÀ
.
ex¥
);

811 i‡(
sym2
)

812 
out
;

813 i‡(
¥›
->
ty≥
 !
P_DEFAULT
 || 
	`sym_is_choi˚
(
sym
))

815 
sym2
 = 
	`sym_check_ex¥_dïs
(
¥›
->
ex¥
);

816 i‡(
sym2
)

817 
out
;

819 
out
:

820 i‡(
sym2
) {

821 
	`¥ötf
(" %s", 
sym
->
«me
);

822 i‡(
sym2
 =
sym
) {

823 
	`¥ötf
("\n");

824 
sym2
 = 
NULL
;

827 
sym
->
Êags
 &~
SYMBOL_CHECK
;

828  
sym2
;

829 
	}
}

831 
¥›îty
 *
	$¥›_Æloc
(
¥›_ty≥
 
ty≥
, 
symbﬁ
 *
sym
)

833 
¥›îty
 *
¥›
;

834 
¥›îty
 **
¥›p
;

836 
¥›
 = 
	`mÆloc
((*prop));

837 
	`mem£t
(
¥›
, 0, (*prop));

838 
¥›
->
ty≥
 =Åype;

839 
¥›
->
sym
 = sym;

840 
¥›
->
fûe
 = 
cuºít_fûe
;

841 
¥›
->
löío
 = 
	`zc⁄f_löío
();

844 i‡(
sym
) {

845 
¥›p
 = &
sym
->
¥›
; *¥›p;Ör›∞&(*¥›p)->
√xt
)

847 *
¥›p
 = 
¥›
;

850  
¥›
;

851 
	}
}

853 
symbﬁ
 *
	$¥›_gë_symbﬁ
(
¥›îty
 *
¥›
)

855 i‡(
¥›
->
ex¥
 && (¥›->ex¥->
ty≥
 =
E_SYMBOL
 ||

856 
¥›
->
ex¥
->
ty≥
 =
E_CHOICE
))

857  
¥›
->
ex¥
->
À·
.
sym
;

858  
NULL
;

859 
	}
}

861 c⁄° *
	$¥›_gë_ty≥_«me
(
¥›_ty≥
 
ty≥
)

863 
ty≥
) {

864 
P_PROMPT
:

866 
P_COMMENT
:

868 
P_MENU
:

870 
P_DEFAULT
:

872 
P_CHOICE
:

874 
P_SELECT
:

876 
P_RANGE
:

878 
P_UNKNOWN
:

882 
	}
}

	@util.c

8 
	~<°rög.h
>

9 
	~"lkc.h
"

12 
fûe
 *
	$fûe_lookup
(c⁄° *
«me
)

14 
fûe
 *file;

16 
fûe
 = 
fûe_li°
; fûe; fûêfûe->
√xt
) {

17 i‡(!
	`°rcmp
(
«me
, 
fûe
->name))

18  
fûe
;

21 
fûe
 = 
	`mÆloc
((*file));

22 
	`mem£t
(
fûe
, 0, (*file));

23 
fûe
->
«me
 = 
	`°rdup
(name);

24 
fûe
->
√xt
 = 
fûe_li°
;

25 
fûe_li°
 = 
fûe
;

26  
fûe
;

27 
	}
}

30 
	$fûe_wrôe_dï
(c⁄° *
«me
)

32 
fûe
 *file;

33 
FILE
 *
out
;

35 i‡(!
«me
)

36 
«me
 = ".kconfig.d";

37 
out
 = 
	`f›í
("..config.tmp", "w");

38 i‡(!
out
)

40 
	`Ârötf
(
out
, "deps_config := \\\n");

41 
fûe
 = 
fûe_li°
; fûe; fûêfûe->
√xt
) {

42 i‡(
fûe
->
√xt
)

43 
	`Ârötf
(
out
, "\t%†\\\n", 
fûe
->
«me
);

45 
	`Ârötf
(
out
, "\t%s\n", 
fûe
->
«me
);

47 
	`Ârötf
(
out
, "\n.config include/linux/autoconf.h: $(deps_config)\n\n$(deps_config):\n");

48 
	`f˛o£
(
out
);

49 
	`ª«me
("..c⁄fig.tmp", 
«me
);

51 
	}
}

55 
g°r
 
	$°r_√w
()

57 
g°r
 
gs
;

58 
gs
.
s
 = 
	`mÆloc
(() * 64);

59 
gs
.
Àn
 = 16;

60 
	`°r˝y
(
gs
.
s
, "\0");

61  
gs
;

62 
	}
}

65 
g°r
 
	$°r_assign
(c⁄° *
s
)

67 
g°r
 
gs
;

68 
gs
.
s
 = 
	`°rdup
(s);

69 
gs
.
Àn
 = 
	`°æí
(
s
) + 1;

70  
gs
;

71 
	}
}

74 
	$°r_‰ì
(
g°r
 *
gs
)

76 i‡(
gs
->
s
)

77 
	`‰ì
(
gs
->
s
);

78 
gs
->
s
 = 
NULL
;

79 
gs
->
Àn
 = 0;

80 
	}
}

83 
	$°r_≠≥nd
(
g°r
 *
gs
, c⁄° *
s
)

85 
size_t
 
l
 = 
	`°æí
(
gs
->
s
) + strlen(s) + 1;

86 i‡(
l
 > 
gs
->
Àn
) {

87 
gs
->
s
 = 
	`ªÆloc
(gs->s, 
l
);

88 
gs
->
Àn
 = 
l
;

90 
	`°rˇt
(
gs
->
s
, s);

91 
	}
}

94 
	$°r_¥ötf
(
g°r
 *
gs
, c⁄° *
fmt
, ...)

96 
va_li°
 
≠
;

97 
s
[10000];

98 
	`va_°¨t
(
≠
, 
fmt
);

99 
	`v¢¥ötf
(
s
, (s), 
fmt
, 
≠
);

100 
	`°r_≠≥nd
(
gs
, 
s
);

101 
	`va_íd
(
≠
);

102 
	}
}

105 c⁄° *
	$°r_gë
(
g°r
 *
gs
)

107  
gs
->
s
;

108 
	}
}

	@zconf.hash.c

32 
kc⁄f_id
;

35 #ifde‡
__GNUC__


36 
	g__ölöe


38 #ifde‡
__˝lu•lus


39 
	gölöe


43 
	$kc⁄f_id_hash
 (c⁄° *
°r
, 
Àn
)

45 
asso_vÆues
[] =

74 
hvÆ
 = 
Àn
;

76 
hvÆ
)

79 
hvÆ
 +
asso_vÆues
[()
°r
[2]];

83 
hvÆ
 +
asso_vÆues
[()
°r
[0]];

86  
hvÆ
;

87 
	}
}

89 
	skc⁄f_id_°rögs_t


91 
	mkc⁄f_id_°rögs_°r2
[("if")];

92 
	mkc⁄f_id_°rögs_°r3
[("int")];

93 
	mkc⁄f_id_°rögs_°r4
[("help")];

94 
	mkc⁄f_id_°rögs_°r5
[("endif")];

95 
	mkc⁄f_id_°rögs_°r6
[("select")];

96 
	mkc⁄f_id_°rögs_°r7
[("endmenu")];

97 
	mkc⁄f_id_°rögs_°r8
[("tristate")];

98 
	mkc⁄f_id_°rögs_°r9
[("endchoice")];

99 
	mkc⁄f_id_°rögs_°r10
[("range")];

100 
	mkc⁄f_id_°rögs_°r11
[("string")];

101 
	mkc⁄f_id_°rögs_°r12
[("default")];

102 
	mkc⁄f_id_°rögs_°r13
[("def_bool")];

103 
	mkc⁄f_id_°rögs_°r14
[("menu")];

104 
	mkc⁄f_id_°rögs_°r16
[("def_boolean")];

105 
	mkc⁄f_id_°rögs_°r17
[("def_tristate")];

106 
	mkc⁄f_id_°rögs_°r18
[("mainmenu")];

107 
	mkc⁄f_id_°rögs_°r20
[("menuconfig")];

108 
	mkc⁄f_id_°rögs_°r21
[("config")];

109 
	mkc⁄f_id_°rögs_°r22
[("on")];

110 
	mkc⁄f_id_°rögs_°r23
[("hex")];

111 
	mkc⁄f_id_°rögs_°r26
[("source")];

112 
	mkc⁄f_id_°rögs_°r27
[("depends")];

113 
	mkc⁄f_id_°rögs_°r28
[("optional")];

114 
	mkc⁄f_id_°rögs_°r31
[("enable")];

115 
	mkc⁄f_id_°rögs_°r32
[("comment")];

116 
	mkc⁄f_id_°rögs_°r33
[("requires")];

117 
	mkc⁄f_id_°rögs_°r34
[("bool")];

118 
	mkc⁄f_id_°rögs_°r37
[("boolean")];

119 
	mkc⁄f_id_°rögs_°r41
[("choice")];

120 
	mkc⁄f_id_°rögs_°r46
[("prompt")];

122 
kc⁄f_id_°rögs_t
 
	gkc⁄f_id_°rögs_c⁄ã¡s
 =

155 
	#kc⁄f_id_°rögs
 ((c⁄° *Ë&
kc⁄f_id_°rögs_c⁄ã¡s
)

	)

156 #ifde‡
__GNUC__


157 
	g__ölöe


159 
kc⁄f_id
 *

160 
	$kc⁄f_id_lookup
 (c⁄° *
°r
, 
Àn
)

164 
TOTAL_KEYWORDS
 = 30,

165 
MIN_WORD_LENGTH
 = 2,

166 
MAX_WORD_LENGTH
 = 12,

167 
MIN_HASH_VALUE
 = 2,

168 
MAX_HASH_VALUE
 = 46

171 
kc⁄f_id
 
w‹dli°
[] =

174 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r2
, 
T_IF
, 
TF_COMMAND
|
TF_PARAM
},

175 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r3
, 
T_TYPE
, 
TF_COMMAND
, 
S_INT
},

176 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r4
, 
T_HELP
, 
TF_COMMAND
},

177 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r5
, 
T_ENDIF
, 
TF_COMMAND
},

178 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r6
, 
T_SELECT
, 
TF_COMMAND
},

179 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r7
, 
T_ENDMENU
, 
TF_COMMAND
},

180 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r8
, 
T_TYPE
, 
TF_COMMAND
, 
S_TRISTATE
},

181 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r9
, 
T_ENDCHOICE
, 
TF_COMMAND
},

182 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r10
, 
T_RANGE
, 
TF_COMMAND
},

183 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r11
, 
T_TYPE
, 
TF_COMMAND
, 
S_STRING
},

184 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r12
, 
T_DEFAULT
, 
TF_COMMAND
, 
S_UNKNOWN
},

185 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r13
, 
T_DEFAULT
, 
TF_COMMAND
, 
S_BOOLEAN
},

186 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r14
, 
T_MENU
, 
TF_COMMAND
},

188 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r16
, 
T_DEFAULT
, 
TF_COMMAND
, 
S_BOOLEAN
},

189 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r17
, 
T_DEFAULT
, 
TF_COMMAND
, 
S_TRISTATE
},

190 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r18
, 
T_MAINMENU
, 
TF_COMMAND
},

192 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r20
, 
T_MENUCONFIG
, 
TF_COMMAND
},

193 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r21
, 
T_CONFIG
, 
TF_COMMAND
},

194 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r22
, 
T_ON
, 
TF_PARAM
},

195 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r23
, 
T_TYPE
, 
TF_COMMAND
, 
S_HEX
},

197 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r26
, 
T_SOURCE
, 
TF_COMMAND
},

198 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r27
, 
T_DEPENDS
, 
TF_COMMAND
},

199 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r28
, 
T_OPTIONAL
, 
TF_COMMAND
},

201 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r31
, 
T_SELECT
, 
TF_COMMAND
},

202 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r32
, 
T_COMMENT
, 
TF_COMMAND
},

203 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r33
, 
T_REQUIRES
, 
TF_COMMAND
},

204 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r34
, 
T_TYPE
, 
TF_COMMAND
, 
S_BOOLEAN
},

206 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r37
, 
T_TYPE
, 
TF_COMMAND
, 
S_BOOLEAN
},

208 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r41
, 
T_CHOICE
, 
TF_COMMAND
},

210 {()()&((
kc⁄f_id_°rögs_t
 *)0)->
kc⁄f_id_°rögs_°r46
, 
T_PROMPT
, 
TF_COMMAND
}

213 i‡(
Àn
 <
MAX_WORD_LENGTH
 &&Üí >
MIN_WORD_LENGTH
)

215 
key
 = 
	`kc⁄f_id_hash
 (
°r
, 
Àn
);

217 i‡(
key
 <
MAX_HASH_VALUE
 && key >= 0)

219 
o
 = 
w‹dli°
[
key
].
«me
;

220 i‡(
o
 >= 0)

222 c⁄° *
s
 = 
o
 + 
kc⁄f_id_°rögs
;

224 i‡(*
°r
 =*
s
 && !
	`°∫cmp
 (°∏+ 1, s + 1, 
Àn
 - 1) && s[len] == '\0')

225  &
w‹dli°
[
key
];

230 
	}
}

	@zconf.l

1 %
›ti⁄
 
backup
 
no°döô
 
noyywøp
 
√vî
-
öãø˘ive
 
fuŒ
 
ecs


2 %
›ti⁄
 8b
ô
 
backup
 
nodeÁu…
 
≥rf
-
ªp‹t
Öerf-report

3 %
x
 
COMMAND
 
HELP
 
STRING
 
PARAM


10 
	~<limôs.h
>

11 
	~<°dio.h
>

12 
	~<°dlib.h
>

13 
	~<°rög.h
>

14 
	~<uni°d.h
>

16 
	#LKC_DIRECT_LINK


	)

17 
	~"lkc.h
"

19 
	#START_STRSIZE
 16

	)

22 
fûe
 *
	mfûe
;

23 
	mlöío
;

24 } 
	gcuºít_pos
;

26 *
	gãxt
;

27 
	gãxt_size
, 
	gãxt_asize
;

29 
	sbuf„r
 {

30 
buf„r
 *
	m∑ª¡
;

31 
YY_BUFFER_STATE
 
	m°©e
;

34 
buf„r
 *
	gcuºít_buf
;

36 
	gœ°_ts
, 
	gfú°_ts
;

38 
zc⁄f_ídhñp
();

39 
zc⁄f_ídfûe
();

41 
	$√w_°rög
()

43 
ãxt
 = 
	`mÆloc
(
START_STRSIZE
);

44 
ãxt_asize
 = 
START_STRSIZE
;

45 
ãxt_size
 = 0;

46 *
ãxt
 = 0;

47 
	}
}

49 
	$≠≥nd_°rög
(c⁄° *
°r
, 
size
)

51 
√w_size
 = 
ãxt_size
 + 
size
 + 1;

52 i‡(
√w_size
 > 
ãxt_asize
) {

53 
√w_size
 +
START_STRSIZE
 - 1;

54 
√w_size
 &-
START_STRSIZE
;

55 
ãxt
 = 
	`ªÆloc
—ext, 
√w_size
);

56 
ãxt_asize
 = 
√w_size
;

58 
	`mem˝y
(
ãxt
 + 
ãxt_size
, 
°r
, 
size
);

59 
ãxt_size
 +
size
;

60 
ãxt
[
ãxt_size
] = 0;

61 
	}
}

63 
	$Æloc_°rög
(c⁄° *
°r
, 
size
)

65 
ãxt
 = 
	`mÆloc
(
size
 + 1);

66 
	`mem˝y
(
ãxt
, 
°r
, 
size
);

67 
ãxt
[
size
] = 0;

68 
	}
}

71 
ws
 [ \
n
\
t
]

72 
n
 [
A
-
Za
-
z0
-9
_
]

74 %% /* 
	$yyÀx
 */

75 
°r
 = 0;

76 
ts
, 
i
;

78 [ \
t
]*#.*\
n
 |

79 [ \
t
]*\
n
 {

80 
cuºít_fûe
->
löío
++;

81  
T_EOL
;

83 [ \
t
]*#.*

86 [ \
t
]+ {

87 
	`BEGIN
(
COMMAND
);

91 
	`u≈ut
(
yyãxt
[0]);

92 
	`BEGIN
(
COMMAND
);

96 <
COMMAND
>{

97 {
n
}+ {

98 
kc⁄f_id
 *
id
 = 
	`kc⁄f_id_lookup
(
yyãxt
, 
yyÀng
);

99 
	`BEGIN
(
PARAM
);

100 
cuºít_pos
.
fûe
 = 
cuºít_fûe
;

101 
cuºít_pos
.
löío
 = 
cuºít_fûe
->lineno;

102 i‡(
id
 && id->
Êags
 & 
TF_COMMAND
) {

103 
zc⁄ÊvÆ
.
id
 = id;

104  
id
->
tokí
;

106 
	`Æloc_°rög
(
yyãxt
, 
yyÀng
);

107 
zc⁄ÊvÆ
.
°rög
 = 
ãxt
;

108  
T_WORD
;

111 \
n
 {

112 
	`BEGIN
(
INITIAL
);

113 
cuºít_fûe
->
löío
++;

114  
T_EOL
;

118 <
PARAM
>{

119 "&&"  
T_AND
;

120 "||"  
T_OR
;

121 "("  
T_OPEN_PAREN
;

122 ")"  
T_CLOSE_PAREN
;

123 "!"  
T_NOT
;

124 "="  
T_EQUAL
;

125 "!="  
T_UNEQUAL
;

127 
°r
 = 
yyãxt
[0];

128 
	`√w_°rög
();

129 
	`BEGIN
(
STRING
);

131 \
n
 
	`BEGIN
(
INITIAL
); 
cuºít_fûe
->
löío
++;  
T_EOL
;

133 ({
n
}|[-/.])+ {

134 
kc⁄f_id
 *
id
 = 
	`kc⁄f_id_lookup
(
yyãxt
, 
yyÀng
);

135 i‡(
id
 && id->
Êags
 & 
TF_PARAM
) {

136 
zc⁄ÊvÆ
.
id
 = id;

137  
id
->
tokí
;

139 
	`Æloc_°rög
(
yyãxt
, 
yyÀng
);

140 
zc⁄ÊvÆ
.
°rög
 = 
ãxt
;

141  
T_WORD
;

144 \\\
n
 
cuºít_fûe
->
löío
++;

146 <<
EOF
>> {

147 
	`BEGIN
(
INITIAL
);

151 <
STRING
>{

153 
	`≠≥nd_°rög
(
yyãxt
, 
yyÀng
);

154 
zc⁄ÊvÆ
.
°rög
 = 
ãxt
;

155  
T_WORD_QUOTE
;

158 
	`≠≥nd_°rög
(
yyãxt
, 
yyÀng
);

160 \\.?/\
n
 {

161 
	`≠≥nd_°rög
(
yyãxt
 + 1, 
yyÀng
 - 1);

162 
zc⁄ÊvÆ
.
°rög
 = 
ãxt
;

163  
T_WORD_QUOTE
;

166 
	`≠≥nd_°rög
(
yyãxt
 + 1, 
yyÀng
 - 1);

169 i‡(
°r
 =
yyãxt
[0]) {

170 
	`BEGIN
(
PARAM
);

171 
zc⁄ÊvÆ
.
°rög
 = 
ãxt
;

172  
T_WORD_QUOTE
;

174 
	`≠≥nd_°rög
(
yyãxt
, 1);

176 \
n
 {

177 
	`¥ötf
("%s:%d:w¨nög: mu…i-löê°rög†nŸ suµ‹ãd\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

178 
cuºít_fûe
->
löío
++;

179 
	`BEGIN
(
INITIAL
);

180  
T_EOL
;

182 <<
EOF
>> {

183 
	`BEGIN
(
INITIAL
);

187 <
HELP
>{

188 [ \
t
]+ {

189 
ts
 = 0;

190 
i
 = 0; i < 
yyÀng
; i++) {

191 i‡(
yyãxt
[
i
] == '\t')

192 
ts
 = (ts & ~7) + 8;

194 
ts
++;

196 
œ°_ts
 = 
ts
;

197 i‡(
fú°_ts
) {

198 i‡(
ts
 < 
fú°_ts
) {

199 
	`zc⁄f_ídhñp
();

200  
T_HELPTEXT
;

202 
ts
 -
fú°_ts
;

203 
ts
 > 8) {

204 
	`≠≥nd_°rög
(" ", 8);

205 
ts
 -= 8;

207 
	`≠≥nd_°rög
(" ", 
ts
);

210 [ \
t
]*\
n
/[^ \t\n] {

211 
cuºít_fûe
->
löío
++;

212 
	`zc⁄f_ídhñp
();

213  
T_HELPTEXT
;

215 [ \
t
]*\
n
 {

216 
cuºít_fûe
->
löío
++;

217 
	`≠≥nd_°rög
("\n", 1);

219 [^ \
t
\
n
].* {

220 
	`≠≥nd_°rög
(
yyãxt
, 
yyÀng
);

221 i‡(!
fú°_ts
)

222 
fú°_ts
 = 
œ°_ts
;

224 <<
EOF
>> {

225 
	`zc⁄f_ídhñp
();

226  
T_HELPTEXT
;

230 <<
EOF
>> {

231 i‡(
cuºít_fûe
) {

232 
	`zc⁄f_ídfûe
();

233  
T_EOL
;

235 
	`f˛o£
(
yyö
);

236 
	`yyãrmö©e
();

239 
	}
%%

240 
	$zc⁄f_°¨thñp
()

242 
	`√w_°rög
();

243 
œ°_ts
 = 
fú°_ts
 = 0;

244 
	`BEGIN
(
HELP
);

245 
	}
}

247 
	$zc⁄f_ídhñp
()

249 
zc⁄ÊvÆ
.
°rög
 = 
ãxt
;

250 
	`BEGIN
(
INITIAL
);

251 
	}
}

262 
FILE
 *
	$zc⁄f_f›í
(c⁄° *
«me
)

264 *
ív
, 
fuŒ«me
[
PATH_MAX
+1];

265 
FILE
 *
f
;

267 
f
 = 
	`f›í
(
«me
, "r");

268 i‡(!
f
 && 
«me
[0] != '/') {

269 
ív
 = 
	`gëív
(
SRCTREE
);

270 i‡(
ív
) {

271 
	`•rötf
(
fuŒ«me
, "%s/%s", 
ív
, 
«me
);

272 
f
 = 
	`f›í
(
fuŒ«me
, "r");

275  
f
;

276 
	}
}

278 
	$zc⁄f_öôsˇn
(c⁄° *
«me
)

280 
yyö
 = 
	`zc⁄f_f›í
(
«me
);

281 i‡(!
yyö
) {

282 
	`¥ötf
("ˇn'àföd fûê%s\n", 
«me
);

283 
	`exô
(1);

286 
cuºít_buf
 = 
	`mÆloc
((*current_buf));

287 
	`mem£t
(
cuºít_buf
, 0, (*current_buf));

289 
cuºít_fûe
 = 
	`fûe_lookup
(
«me
);

290 
cuºít_fûe
->
löío
 = 1;

291 
cuºít_fûe
->
Êags
 = 
FILE_BUSY
;

292 
	}
}

294 
	$zc⁄f_√xtfûe
(c⁄° *
«me
)

296 
fûe
 *fûê
	`fûe_lookup
(
«me
);

297 
buf„r
 *
buf
 = 
	`mÆloc
((*buf));

298 
	`mem£t
(
buf
, 0, (*buf));

300 
cuºít_buf
->
°©e
 = 
YY_CURRENT_BUFFER
;

301 
yyö
 = 
	`zc⁄f_f›í
(
«me
);

302 i‡(!
yyö
) {

303 
	`¥ötf
("%s:%d: c™'à›í fûê\"%s\"\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
(), 
«me
);

304 
	`exô
(1);

306 
	`yy_swôch_to_buf„r
(
	`yy_¸óã_buf„r
(
yyö
, 
YY_BUF_SIZE
));

307 
buf
->
∑ª¡
 = 
cuºít_buf
;

308 
cuºít_buf
 = 
buf
;

310 i‡(
fûe
->
Êags
 & 
FILE_BUSY
) {

311 
	`¥ötf
("ªcursivêsˇ¿(%s)?\n", 
«me
);

312 
	`exô
(1);

314 i‡(
fûe
->
Êags
 & 
FILE_SCANNED
) {

315 
	`¥ötf
("fûê%†Æªady sˇ¬ed?\n", 
«me
);

316 
	`exô
(1);

318 
fûe
->
Êags
 |
FILE_BUSY
;

319 
fûe
->
löío
 = 1;

320 
fûe
->
∑ª¡
 = 
cuºít_fûe
;

321 
cuºít_fûe
 = 
fûe
;

322 
	}
}

324 
	$zc⁄f_ídfûe
()

326 
buf„r
 *
∑ª¡
;

328 
cuºít_fûe
->
Êags
 |
FILE_SCANNED
;

329 
cuºít_fûe
->
Êags
 &~
FILE_BUSY
;

330 
cuºít_fûe
 = cuºít_fûe->
∑ª¡
;

332 
∑ª¡
 = 
cuºít_buf
->parent;

333 i‡(
∑ª¡
) {

334 
	`f˛o£
(
yyö
);

335 
	`yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
);

336 
	`yy_swôch_to_buf„r
(
∑ª¡
->
°©e
);

338 
	`‰ì
(
cuºít_buf
);

339 
cuºít_buf
 = 
∑ª¡
;

340 
	}
}

342 
	$zc⁄f_löío
()

344  
cuºít_pos
.
löío
;

345 
	}
}

347 *
	$zc⁄f_cu∫ame
()

349  
cuºít_pos
.
fûe
 ? cuºít_pos.fûe->
«me
 : "<none>";

350 
	}
}

	@zconf.tab.c

37 
	#YYBISON
 1

	)

40 
	#YYSKELETON_NAME
 "yacc.c"

	)

43 
	#YYPURE
 0

	)

46 
	#YYLSP_NEEDED
 0

	)

49 
	#yy∑r£
 
zc⁄Â¨£


	)

50 
	#yyÀx
 
zc⁄Êex


	)

51 
	#yyîr‹
 
zc⁄„º‹


	)

52 
	#yylvÆ
 
zc⁄ÊvÆ


	)

53 
	#yych¨
 
zc⁄fch¨


	)

54 
	#yydebug
 
zc⁄fdebug


	)

55 
	#yy√ºs
 
zc⁄‚îrs


	)

59 #i‚de‡
YYTOKENTYPE


60 
	#YYTOKENTYPE


	)

63 
	eyytokíty≥
 {

64 
	mT_MAINMENU
 = 258,

65 
	mT_MENU
 = 259,

66 
	mT_ENDMENU
 = 260,

67 
	mT_SOURCE
 = 261,

68 
	mT_CHOICE
 = 262,

69 
	mT_ENDCHOICE
 = 263,

70 
	mT_COMMENT
 = 264,

71 
	mT_CONFIG
 = 265,

72 
	mT_MENUCONFIG
 = 266,

73 
	mT_HELP
 = 267,

74 
	mT_HELPTEXT
 = 268,

75 
	mT_IF
 = 269,

76 
	mT_ENDIF
 = 270,

77 
	mT_DEPENDS
 = 271,

78 
	mT_REQUIRES
 = 272,

79 
	mT_OPTIONAL
 = 273,

80 
	mT_PROMPT
 = 274,

81 
	mT_TYPE
 = 275,

82 
	mT_DEFAULT
 = 276,

83 
	mT_SELECT
 = 277,

84 
	mT_RANGE
 = 278,

85 
	mT_ON
 = 279,

86 
	mT_WORD
 = 280,

87 
	mT_WORD_QUOTE
 = 281,

88 
	mT_UNEQUAL
 = 282,

89 
	mT_CLOSE_PAREN
 = 283,

90 
	mT_OPEN_PAREN
 = 284,

91 
	mT_EOL
 = 285,

92 
	mT_OR
 = 286,

93 
	mT_AND
 = 287,

94 
	mT_EQUAL
 = 288,

95 
	mT_NOT
 = 289

98 
	#T_MAINMENU
 258

	)

99 
	#T_MENU
 259

	)

100 
	#T_ENDMENU
 260

	)

101 
	#T_SOURCE
 261

	)

102 
	#T_CHOICE
 262

	)

103 
	#T_ENDCHOICE
 263

	)

104 
	#T_COMMENT
 264

	)

105 
	#T_CONFIG
 265

	)

106 
	#T_MENUCONFIG
 266

	)

107 
	#T_HELP
 267

	)

108 
	#T_HELPTEXT
 268

	)

109 
	#T_IF
 269

	)

110 
	#T_ENDIF
 270

	)

111 
	#T_DEPENDS
 271

	)

112 
	#T_REQUIRES
 272

	)

113 
	#T_OPTIONAL
 273

	)

114 
	#T_PROMPT
 274

	)

115 
	#T_TYPE
 275

	)

116 
	#T_DEFAULT
 276

	)

117 
	#T_SELECT
 277

	)

118 
	#T_RANGE
 278

	)

119 
	#T_ON
 279

	)

120 
	#T_WORD
 280

	)

121 
	#T_WORD_QUOTE
 281

	)

122 
	#T_UNEQUAL
 282

	)

123 
	#T_CLOSE_PAREN
 283

	)

124 
	#T_OPEN_PAREN
 284

	)

125 
	#T_EOL
 285

	)

126 
	#T_OR
 286

	)

127 
	#T_AND
 287

	)

128 
	#T_EQUAL
 288

	)

129 
	#T_NOT
 289

	)

142 
	~<˘y≥.h
>

143 
	~<°d¨g.h
>

144 
	~<°dio.h
>

145 
	~<°dlib.h
>

146 
	~<°rög.h
>

147 
	~<°dboﬁ.h
>

149 
	#LKC_DIRECT_LINK


	)

150 
	~"lkc.h
"

152 
	~"zc⁄f.hash.c
"

154 
	#¥ötd
(
mask
, 
fmt
...Ëi‡(
cdebug
 & (mask)Ë
	`¥ötf
(fmt)

	)

156 
	#PRINTD
 0x0001

	)

157 
	#DEBUG_PARSE
 0x0002

	)

159 
	gcdebug
 = 
PRINTD
;

161 
zc⁄Êex
();

162 
zc⁄Âröt
(c⁄° *
îr
, ...);

163 
zc⁄f_îr‹
(c⁄° *
îr
, ...);

164 
zc⁄„º‹
(c⁄° *
îr
);

165 
boﬁ
 
zc⁄f_ídtokí
(
kc⁄f_id
 *
id
, 
°¨âokí
, 
ídtokí
);

167 
symbﬁ
 *
	gsymbﬁ_hash
[257];

169 
míu
 *
	gcuºít_míu
, *
	gcuºít_íåy
;

171 
	#YYDEBUG
 0

	)

172 #i‡
YYDEBUG


173 
	#YYERROR_VERBOSE


	)

178 #i‚de‡
YYDEBUG


179 
	#YYDEBUG
 0

	)

183 #ifde‡
YYERROR_VERBOSE


184 #unde‡
YYERROR_VERBOSE


185 
	#YYERROR_VERBOSE
 1

	)

187 
	#YYERROR_VERBOSE
 0

	)

190 #i‡! 
deföed
 (
YYSTYPE
Ë&& ! deföed (
YYSTYPE_IS_DECLARED
)

192 
	uYYSTYPE
 {

193 *
	m°rög
;

194 
fûe
 *
	mfûe
;

195 
symbﬁ
 *
	msymbﬁ
;

196 
ex¥
 *
	mex¥
;

197 
míu
 *
	mmíu
;

198 
kc⁄f_id
 *
	mid
;

199 } 
	tYYSTYPE
;

202 
	#yy°y≥
 
YYSTYPE


	)

203 
	#YYSTYPE_IS_DECLARED
 1

	)

204 
	#YYSTYPE_IS_TRIVIAL
 1

	)

215 #i‡! 
deföed
 (
yyovîÊow
Ë|| 
YYERROR_VERBOSE


217 #i‚de‡
YYFREE


218 
	#YYFREE
 
‰ì


	)

220 #i‚de‡
YYMALLOC


221 
	#YYMALLOC
 
mÆloc


	)

226 #ifde‡
YYSTACK_USE_ALLOCA


227 #i‡
YYSTACK_USE_ALLOCA


228 #ifde‡
__GNUC__


229 
	#YYSTACK_ALLOC
 
__buûtö_Æloˇ


	)

231 
	#YYSTACK_ALLOC
 
Æloˇ


	)

236 #ifde‡
YYSTACK_ALLOC


238 
	#YYSTACK_FREE
(
På
Ëdÿ{ ; } 0)

	)

240 #i‡
deföed
 (
__STDC__
Ë|| deföed (
__˝lu•lus
)

241 
	~<°dlib.h
>

242 
	#YYSIZE_T
 
size_t


	)

244 
	#YYSTACK_ALLOC
 
YYMALLOC


	)

245 
	#YYSTACK_FREE
 
YYFREE


	)

250 #i‡(! 
deföed
 (
yyovîÊow
) \

251 && (! 
deföed
 (
__˝lu•lus
) \

252 || (
deföed
 (
YYSTYPE_IS_TRIVIAL
Ë&& 
	gYYSTYPE_IS_TRIVIAL
)))

255 
	uyyÆloc


257 
	myyss
;

258 
YYSTYPE
 
	myyvs
;

262 
	#YYSTACK_GAP_MAXIMUM
 ( (
yyÆloc
Ë- 1)

	)

266 
	#YYSTACK_BYTES
(
N
) \

267 ((
N
Ë* ( (Ë+  (
YYSTYPE
)) \

268 + 
YYSTACK_GAP_MAXIMUM
)

	)

272 #i‚de‡
YYCOPY


273 #i‡
deföed
 (
__GNUC__
) && 1 < __GNUC__

274 
	#YYCOPY
(
To
, 
From
, 
Cou¡
) \

275 
	`__buûtö_mem˝y
 (
To
, 
From
, (
Cou¡
Ë*  (*(From)))

	)

277 
	#YYCOPY
(
To
, 
From
, 
Cou¡
) \

280 
YYSIZE_T
 
yyi
; \

281 
yyi
 = 0; yyò< (
Cou¡
); yyi++) \

282 (
To
)[
yyi
] = (
From
)[yyi]; \

284 0)

	)

293 
	#YYSTACK_RELOCATE
(
Sèck
) \

296 
YYSIZE_T
 
yy√wbyãs
; \

297 
	`YYCOPY
 (&
yy±r
->
Sèck
, Sèck, 
yysize
); \

298 
Sèck
 = &
yy±r
->Stack; \

299 
yy√wbyãs
 = 
yy°acksize
 *  (*
Sèck
Ë+ 
YYSTACK_GAP_MAXIMUM
; \

300 
yy±r
 +
yy√wbyãs
 /  (*yyptr); \

302 0)

	)

306 #i‡
deföed
 (
__STDC__
Ë|| deföed (
__˝lu•lus
)

307 sig√d 
	tyysig√d_ch¨
;

309 
	tyysig√d_ch¨
;

313 
	#YYFINAL
 3

	)

315 
	#YYLAST
 264

	)

318 
	#YYNTOKENS
 35

	)

320 
	#YYNNTS
 42

	)

322 
	#YYNRULES
 104

	)

324 
	#YYNSTATES
 175

	)

327 
	#YYUNDEFTOK
 2

	)

328 
	#YYMAXUTOK
 289

	)

330 
	#YYTRANSLATE
(
YYX
) \

331 ((Ë(
YYX
Ë<
YYMAXUTOK
 ? 
yyå™¶©e
[YYX] : 
YYUNDEFTOK
)

	)

334 c⁄° 
	gyyå™¶©e
[] =

367 #i‡
YYDEBUG


370 c⁄° 
	gyy¥hs
[] =

386 c⁄° 
yysig√d_ch¨
 
	gyyrhs
[] =

423 c⁄° 
	gyyæöe
[] =

439 #i‡
YYDEBUG
 || 
YYERROR_VERBOSE


442 c⁄° *c⁄° 
	gyyäame
[] =

462 #ifde‡
YYPRINT


465 c⁄° 
	gyytoknum
[] =

475 c⁄° 
	gyyr1
[] =

491 c⁄° 
	gyyr2
[] =

509 c⁄° 
	gyydeÁ˘
[] =

532 c⁄° 
	gyydefgŸo
[] =

543 
	#YYPACT_NINF
 -78

	)

544 c⁄° 
	gyy∑˘
[] =

567 c⁄° 
	gyypgŸo
[] =

580 
	#YYTABLE_NINF
 -76

	)

581 c⁄° 
	gyyèbÀ
[] =

612 c⁄° 
	gyycheck
[] =

645 c⁄° 
	gyy°os
[] =

667 #i‡! 
deföed
 (
YYSIZE_T
Ë&& deföed (
__SIZE_TYPE__
)

668 
	#YYSIZE_T
 
__SIZE_TYPE__


	)

670 #i‡! 
deföed
 (
YYSIZE_T
Ë&& deföed (
size_t
)

671 
	#YYSIZE_T
 
size_t


	)

673 #i‡! 
deföed
 (
YYSIZE_T
)

674 #i‡
deföed
 (
__STDC__
Ë|| deföed (
__˝lu•lus
)

675 
	~<°ddef.h
>

676 
	#YYSIZE_T
 
size_t


	)

679 #i‡! 
deföed
 (
YYSIZE_T
)

680 
	#YYSIZE_T
 

	)

683 
	#yyîrok
 (
yyîr°©us
 = 0)

	)

684 
	#yy˛órö
 (
yych¨
 = 
YYEMPTY
)

	)

685 
	#YYEMPTY
 (-2)

	)

686 
	#YYEOF
 0

	)

688 
	#YYACCEPT
 
yyac˚±œb


	)

689 
	#YYABORT
 
yyab‹éab


	)

690 
	#YYERROR
 
yyîr‹œb


	)

697 
	#YYFAIL
 
yyîæab


	)

699 
	#YYRECOVERING
(Ë(!!
yyîr°©us
)

	)

701 
	#YYBACKUP
(
Tokí
, 
VÆue
) \

703 i‡(
yych¨
 =
YYEMPTY
 && 
yyÀn
 == 1) \

705 
yych¨
 = (
Tokí
); \

706 
yylvÆ
 = (
VÆue
); \

707 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
); \

708 
YYPOPSTACK
; \

709 
yybackup
; \

713 
	`yyîr‹
 ("syntaxÉrror: cannot back up");\

714 
YYERROR
; \

716 0)

	)

719 
	#YYTERROR
 1

	)

720 
	#YYERRCODE
 256

	)

727 
	#YYRHSLOC
(
Rhs
, 
K
Ë((Rhs)[K])

	)

728 #i‚de‡
YYLLOC_DEFAULT


729 
	#YYLLOC_DEFAULT
(
Cuºít
, 
Rhs
, 
N
) \

731 i‡(
N
) \

733 (
Cuºít
).
fú°_löe
 = 
	`YYRHSLOC
 (
Rhs
, 1).first_line; \

734 (
Cuºít
).
fú°_cﬁumn
 = 
	`YYRHSLOC
 (
Rhs
, 1).first_column; \

735 (
Cuºít
).
œ°_löe
 = 
	`YYRHSLOC
 (
Rhs
, 
N
).last_line; \

736 (
Cuºít
).
œ°_cﬁumn
 = 
	`YYRHSLOC
 (
Rhs
, 
N
).last_column; \

740 (
Cuºít
).
fú°_löe
 = (Cuºít).
œ°_löe
 = \

741 
	`YYRHSLOC
 (
Rhs
, 0).
œ°_löe
; \

742 (
Cuºít
).
fú°_cﬁumn
 = (Cuºít).
œ°_cﬁumn
 = \

743 
	`YYRHSLOC
 (
Rhs
, 0).
œ°_cﬁumn
; \

745 0)

	)

753 #i‚de‡
YY_LOCATION_PRINT


754 #i‡
YYLTYPE_IS_TRIVIAL


755 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
) \

756 
	`Ârötf
 (
Fûe
, "%d.%d-%d.%d", \

757 (
Loc
).
fú°_löe
, (Loc).
fú°_cﬁumn
, \

758 (
Loc
).
œ°_löe
, (Loc).
œ°_cﬁumn
)

	)

760 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
Ë((Ë0)

	)

767 #ifde‡
YYLEX_PARAM


768 
	#YYLEX
 
	`yyÀx
 (
YYLEX_PARAM
)

	)

770 
	#YYLEX
 
	`yyÀx
 ()

	)

774 #i‡
YYDEBUG


776 #i‚de‡
YYFPRINTF


777 
	~<°dio.h
>

778 
	#YYFPRINTF
 
Ârötf


	)

781 
	#YYDPRINTF
(
Args
) \

783 i‡(
yydebug
) \

784 
YYFPRINTF
 
Args
; \

785 } 0)

	)

787 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
) \

789 i‡(
yydebug
) \

791 
	`YYFPRINTF
 (
°dîr
, "%†", 
TôÀ
); \

792 
	`yysym¥öt
 (
°dîr
, \

793 
Ty≥
, 
VÆue
); \

794 
	`YYFPRINTF
 (
°dîr
, "\n"); \

796 } 0)

	)

803 #i‡
deföed
 (
__STDC__
Ë|| deföed (
__˝lu•lus
)

805 
	$yy_°ack_¥öt
 (*
bŸtom
, *
t›
)

808 
	$yy_°ack_¥öt
 (
bŸtom
, 
t›
)

809 *
bŸtom
;

810 *
t›
;

813 
	`YYFPRINTF
 (
°dîr
, "StackÇow");

814  ; 
bŸtom
 <
t›
; ++bottom)

815 
	`YYFPRINTF
 (
°dîr
, " %d", *
bŸtom
);

816 
	`YYFPRINTF
 (
°dîr
, "\n");

817 
	}
}

819 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
) \

821 i‡(
yydebug
) \

822 
	`yy_°ack_¥öt
 ((
BŸtom
), (
T›
)); \

823 } 0)

	)

830 #i‡
deföed
 (
__STDC__
Ë|| deföed (
__˝lu•lus
)

832 
	$yy_ªdu˚_¥öt
 (
yyruÀ
)

835 
	$yy_ªdu˚_¥öt
 (
yyruÀ
)

836 
yyruÀ
;

839 
yyi
;

840 
yy o
 = 
yyæöe
[
yyruÀ
];

841 
	`YYFPRINTF
 (
°dîr
, "Reducing stack byÑule %d (line %u), ",

842 
yyruÀ
 - 1, 
yy o
);

844 
yyi
 = 
yy¥hs
[
yyruÀ
]; 0 <
yyrhs
[yyi]; yyi++)

845 
	`YYFPRINTF
 (
°dîr
, "%†", 
yyäame
 [
yyrhs
[
yyi
]]);

846 
	`YYFPRINTF
 (
°dîr
, "-> %s\n", 
yyäame
 [
yyr1
[
yyruÀ
]]);

847 
	}
}

849 
	#YY_REDUCE_PRINT
(
RuÀ
) \

851 i‡(
yydebug
) \

852 
	`yy_ªdu˚_¥öt
 (
RuÀ
); \

853 } 0)

	)

857 
	gyydebug
;

859 
	#YYDPRINTF
(
Args
)

	)

860 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
)

	)

861 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
)

	)

862 
	#YY_REDUCE_PRINT
(
RuÀ
)

	)

867 #i‚def 
YYINITDEPTH


868 
	#YYINITDEPTH
 200

	)

878 #i‚de‡
YYMAXDEPTH


879 
	#YYMAXDEPTH
 10000

	)

884 #i‡
YYERROR_VERBOSE


886 #i‚de‡
yy°æí


887 #i‡
deföed
 (
__GLIBC__
Ë&& deföed (
_STRING_H
)

888 
	#yy°æí
 
°æí


	)

891 
	gYYSIZE_T


892 #i‡
deföed
 (
__STDC__
Ë|| deföed (
__˝lu•lus
)

893 
	$yy°æí
 (c⁄° *
yy°r
)

895 
	$yy°æí
 (
yy°r
)

896 c⁄° *
yy°r
;

899 c⁄° *
yys
 = 
yy°r
;

901 *
yys
++ != '\0')

904  
yys
 - 
yy°r
 - 1;

905 
	}
}

909 #i‚de‡
yy°p˝y


910 #i‡
deföed
 (
__GLIBC__
Ë&& deföed (
_STRING_H
Ë&& deföed (
_GNU_SOURCE
)

911 
	#yy°p˝y
 
°p˝y


	)

916 #i‡
deföed
 (
__STDC__
Ë|| deföed (
__˝lu•lus
)

917 
	$yy°p˝y
 (*
yyde°
, c⁄° *
yy§c
)

919 
	$yy°p˝y
 (
yyde°
, 
yy§c
)

920 *
yyde°
;

921 c⁄° *
yy§c
;

924 *
yyd
 = 
yyde°
;

925 c⁄° *
yys
 = 
yy§c
;

927 (*
yyd
++ = *
yys
++) != '\0')

930  
yyd
 - 1;

931 
	}
}

939 #i‡
YYDEBUG


944 #i‡
deföed
 (
__STDC__
Ë|| deföed (
__˝lu•lus
)

946 
	$yysym¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 *
yyvÆuï
)

949 
	$yysym¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
)

950 
FILE
 *
yyouçut
;

951 
yyty≥
;

952 
YYSTYPE
 *
yyvÆuï
;

956 (Ë
yyvÆuï
;

958 i‡(
yyty≥
 < 
YYNTOKENS
)

959 
	`YYFPRINTF
 (
yyouçut
, "tokí %†(", 
yyäame
[
yyty≥
]);

961 
	`YYFPRINTF
 (
yyouçut
, "¡îm %†(", 
yyäame
[
yyty≥
]);

964 #ifde‡
YYPRINT


965 i‡(
yyty≥
 < 
YYNTOKENS
)

966 
	`YYPRINT
 (
yyouçut
, 
yytoknum
[
yyty≥
], *
yyvÆuï
);

968 
yyty≥
)

973 
	`YYFPRINTF
 (
yyouçut
, ")");

974 
	}
}

981 #i‡
deföed
 (
__STDC__
Ë|| deföed (
__˝lu•lus
)

983 
	$yyde°ru˘
 (c⁄° *
yymsg
, 
yyty≥
, 
YYSTYPE
 *
yyvÆuï
)

986 
	$yyde°ru˘
 (
yymsg
, 
yyty≥
, 
yyvÆuï
)

987 c⁄° *
yymsg
;

988 
yyty≥
;

989 
YYSTYPE
 *
yyvÆuï
;

993 (Ë
yyvÆuï
;

995 i‡(!
yymsg
)

996 
yymsg
 = "Deleting";

997 
	`YY_SYMBOL_PRINT
 (
yymsg
, 
yyty≥
, 
yyvÆuï
, 
yyloˇti⁄p
);

999 
yyty≥
)

1004 
	`Ârötf
(
°dîr
, "%s:%d: missingÉnd statement forÅhisÉntry\n",

1005 (
yyvÆuï
->
míu
)->
fûe
->
«me
, (yyvÆuï->míu)->
löío
);

1006 i‡(
cuºít_míu
 =(
yyvÆuï
->
míu
))

1007 
	`míu_íd_míu
();

1014 
	`Ârötf
(
°dîr
, "%s:%d: missingÉnd statement forÅhisÉntry\n",

1015 (
yyvÆuï
->
míu
)->
fûe
->
«me
, (yyvÆuï->míu)->
löío
);

1016 i‡(
cuºít_míu
 =(
yyvÆuï
->
míu
))

1017 
	`míu_íd_míu
();

1024 
	`Ârötf
(
°dîr
, "%s:%d: missingÉnd statement forÅhisÉntry\n",

1025 (
yyvÆuï
->
míu
)->
fûe
->
«me
, (yyvÆuï->míu)->
löío
);

1026 i‡(
cuºít_míu
 =(
yyvÆuï
->
míu
))

1027 
	`míu_íd_míu
();

1035 
	}
}

1040 #ifde‡
YYPARSE_PARAM


1041 #i‡
deföed
 (
__STDC__
Ë|| deföed (
__˝lu•lus
)

1042 
yy∑r£
 (*
YYPARSE_PARAM
);

1044 
yy∑r£
 ();

1047 #i‡
deföed
 (
__STDC__
Ë|| deföed (
__˝lu•lus
)

1048 
yy∑r£
 ();

1050 
yy∑r£
 ();

1057 
	gyych¨
;

1060 
YYSTYPE
 
	gyylvÆ
;

1063 
	gyy√ºs
;

1071 #ifde‡
YYPARSE_PARAM


1072 #i‡
deföed
 (
__STDC__
Ë|| deföed (
__˝lu•lus
)

1073 
	$yy∑r£
 (*
YYPARSE_PARAM
)

1075 
	$yy∑r£
 (
YYPARSE_PARAM
)

1076 *
YYPARSE_PARAM
;

1079 #i‡
	`deföed
 (
__STDC__
Ë|| deföed (
__˝lu•lus
)

1081 
	$yy∑r£
 ()

1084 
	$yy∑r£
 ()

1090 
yy°©e
;

1091 
yyn
;

1092 
yyªsu…
;

1094 
yyîr°©us
;

1096 
yytokí
 = 0;

1107 
yysß
[
YYINITDEPTH
];

1108 *
yyss
 = 
yysß
;

1109 *
yys•
;

1112 
YYSTYPE
 
yyvß
[
YYINITDEPTH
];

1113 
YYSTYPE
 *
yyvs
 = 
yyvß
;

1114 
YYSTYPE
 *
yyv•
;

1118 
	#YYPOPSTACK
 (
yyv•
--, 
yys•
--)

	)

1120 
YYSIZE_T
 
yy°acksize
 = 
YYINITDEPTH
;

1124 
YYSTYPE
 
yyvÆ
;

1129 
yyÀn
;

1131 
	`YYDPRINTF
 ((
°dîr
, "StartingÖarse\n"));

1133 
yy°©e
 = 0;

1134 
yyîr°©us
 = 0;

1135 
yy√ºs
 = 0;

1136 
yych¨
 = 
YYEMPTY
;

1143 
yys•
 = 
yyss
;

1144 
yyv•
 = 
yyvs
;

1147 
yyv•
[0] = 
yylvÆ
;

1149 
yy£t°©e
;

1154 
yy√w°©e
:

1158 
yys•
++;

1160 
yy£t°©e
:

1161 *
yys•
 = 
yy°©e
;

1163 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1166 
YYSIZE_T
 
yysize
 = 
yys•
 - 
yyss
 + 1;

1168 #ifde‡
yyovîÊow


1173 
YYSTYPE
 *
yyvs1
 = 
yyvs
;

1174 *
yyss1
 = 
yyss
;

1181 
	`yyovîÊow
 ("parser stack overflow",

1182 &
yyss1
, 
yysize
 *  (*
yys•
),

1183 &
yyvs1
, 
yysize
 *  (*
yyv•
),

1185 &
yy°acksize
);

1187 
yyss
 = 
yyss1
;

1188 
yyvs
 = 
yyvs1
;

1191 #i‚de‡
YYSTACK_RELOCATE


1192 
yyovîÊowœb
;

1195 i‡(
YYMAXDEPTH
 <
yy°acksize
)

1196 
yyovîÊowœb
;

1197 
yy°acksize
 *= 2;

1198 i‡(
YYMAXDEPTH
 < 
yy°acksize
)

1199 
yy°acksize
 = 
YYMAXDEPTH
;

1202 *
yyss1
 = 
yyss
;

1203 
yyÆloc
 *
yy±r
 =

1204 (
yyÆloc
 *Ë
	`YYSTACK_ALLOC
 (
	`YYSTACK_BYTES
 (
yy°acksize
));

1205 i‡(! 
yy±r
)

1206 
yyovîÊowœb
;

1207 
	`YYSTACK_RELOCATE
 (
yyss
);

1208 
	`YYSTACK_RELOCATE
 (
yyvs
);

1210 #unde‡
YYSTACK_RELOCATE


1211 i‡(
yyss1
 !
yysß
)

1212 
	`YYSTACK_FREE
 (
yyss1
);

1217 
yys•
 = 
yyss
 + 
yysize
 - 1;

1218 
yyv•
 = 
yyvs
 + 
yysize
 - 1;

1221 
	`YYDPRINTF
 ((
°dîr
, "Stack size increasedÅo %lu\n",

1222 (Ë
yy°acksize
));

1224 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1225 
YYABORT
;

1228 
	`YYDPRINTF
 ((
°dîr
, "E¡îög sèã %d\n", 
yy°©e
));

1230 
yybackup
;

1235 
yybackup
:

1243 
yyn
 = 
yy∑˘
[
yy°©e
];

1244 i‡(
yyn
 =
YYPACT_NINF
)

1245 
yydeÁu…
;

1250 i‡(
yych¨
 =
YYEMPTY
)

1252 
	`YYDPRINTF
 ((
°dîr
, "ReadingáÅoken: "));

1253 
yych¨
 = 
YYLEX
;

1256 i‡(
yych¨
 <
YYEOF
)

1258 
yych¨
 = 
yytokí
 = 
YYEOF
;

1259 
	`YYDPRINTF
 ((
°dîr
, "NowátÉnd of input.\n"));

1263 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

1264 
	`YY_SYMBOL_PRINT
 ("Nexàtokí is", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1269 
yyn
 +
yytokí
;

1270 i‡(
yyn
 < 0 || 
YYLAST
 < yy¿|| 
yycheck
[yyn] !
yytokí
)

1271 
yydeÁu…
;

1272 
yyn
 = 
yyèbÀ
[yyn];

1273 i‡(
yyn
 <= 0)

1275 i‡(
yyn
 =0 || yy¿=
YYTABLE_NINF
)

1276 
yyîæab
;

1277 
yyn
 = -yyn;

1278 
yyªdu˚
;

1281 i‡(
yyn
 =
YYFINAL
)

1282 
YYACCEPT
;

1285 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1288 i‡(
yych¨
 !
YYEOF
)

1289 
yych¨
 = 
YYEMPTY
;

1291 *++
yyv•
 = 
yylvÆ
;

1296 i‡(
yyîr°©us
)

1297 
yyîr°©us
--;

1299 
yy°©e
 = 
yyn
;

1300 
yy√w°©e
;

1306 
yydeÁu…
:

1307 
yyn
 = 
yydeÁ˘
[
yy°©e
];

1308 i‡(
yyn
 == 0)

1309 
yyîæab
;

1310 
yyªdu˚
;

1316 
yyªdu˚
:

1318 
yyÀn
 = 
yyr2
[
yyn
];

1328 
yyvÆ
 = 
yyv•
[1-
yyÀn
];

1331 
	`YY_REDUCE_PRINT
 (
yyn
);

1332 
yyn
)

1336 { 
	`zc⁄f_îr‹
("unexpectedÉnd statement"); ;}

1341 { 
	`zc⁄f_îr‹
("unknow¿°©emíà\"%s\"", (
yyv•
[-2].
°rög
)); ;}

1347 
	`zc⁄f_îr‹
("u√x≥˘ed o±i⁄ \"%s\"", 
kc⁄f_id_°rögs
 + (
yyv•
[-2].
id
)->
«me
);

1353 { 
	`zc⁄f_îr‹
("invalid statement"); ;}

1358 { 
	`zc⁄f_îr‹
("unknow¿›ti⁄ \"%s\"", (
yyv•
[-2].
°rög
)); ;}

1363 { 
	`zc⁄f_îr‹
("invalid option"); ;}

1369 
symbﬁ
 *
sym
 = 
	`sym_lookup
((
yyv•
[-1].
°rög
), 0);

1370 
sym
->
Êags
 |
SYMBOL_OPTIONAL
;

1371 
	`míu_add_íåy
(
sym
);

1372 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:c⁄fig %s\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
(), (
yyv•
[-1].
°rög
));

1379 
	`míu_íd_íåy
();

1380 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:ídc⁄fig\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1387 
symbﬁ
 *
sym
 = 
	`sym_lookup
((
yyv•
[-1].
°rög
), 0);

1388 
sym
->
Êags
 |
SYMBOL_OPTIONAL
;

1389 
	`míu_add_íåy
(
sym
);

1390 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:míuc⁄fig %s\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
(), (
yyv•
[-1].
°rög
));

1397 i‡(
cuºít_íåy
->
¥om±
)

1398 
cuºít_íåy
->
¥om±
->
ty≥
 = 
P_MENU
;

1400 
	`zc⁄Âröt
("warning: menuconfig statement withoutÖrompt");

1401 
	`míu_íd_íåy
();

1402 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:ídc⁄fig\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1409 
	`míu_£t_ty≥
((
yyv•
[-2].
id
)->
°y≥
);

1410 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:type(%u)\n",

1411 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
(),

1412 (
yyv•
[-2].
id
)->
°y≥
);

1419 
	`míu_add_¥om±
(
P_PROMPT
, (
yyv•
[-2].
°rög
), (yyv•[-1].
ex¥
));

1420 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:¥om±\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1427 
	`míu_add_ex¥
(
P_DEFAULT
, (
yyv•
[-2].
ex¥
), (yyvsp[-1].expr));

1428 i‡((
yyv•
[-3].
id
)->
°y≥
 !
S_UNKNOWN
)

1429 
	`míu_£t_ty≥
((
yyv•
[-3].
id
)->
°y≥
);

1430 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:default(%u)\n",

1431 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
(),

1432 (
yyv•
[-3].
id
)->
°y≥
);

1439 
	`míu_add_symbﬁ
(
P_SELECT
, 
	`sym_lookup
((
yyv•
[-2].
°rög
), 0), (yyv•[-1].
ex¥
));

1440 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:£À˘\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1447 
	`míu_add_ex¥
(
P_RANGE
, 
	`ex¥_Æloc_comp
(
E_RANGE
,(
yyv•
[-3].
symbﬁ
), (yyv•[-2].symbﬁ)), (yyv•[-1].
ex¥
));

1448 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:ønge\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1455 
symbﬁ
 *
sym
 = 
	`sym_lookup
(
NULL
, 0);

1456 
sym
->
Êags
 |
SYMBOL_CHOICE
;

1457 
	`míu_add_íåy
(
sym
);

1458 
	`míu_add_ex¥
(
P_CHOICE
, 
NULL
, NULL);

1459 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:choi˚\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1466 (
yyvÆ
.
míu
Ë
	`míu_add_míu
();

1473 i‡(
	`zc⁄f_ídtokí
((
yyv•
[0].
id
), 
T_CHOICE
, 
T_ENDCHOICE
)) {

1474 
	`míu_íd_míu
();

1475 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:ídchoi˚\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1483 
	`míu_add_¥om±
(
P_PROMPT
, (
yyv•
[-2].
°rög
), (yyv•[-1].
ex¥
));

1484 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:¥om±\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1491 i‡((
yyv•
[-2].
id
)->
°y≥
 =
S_BOOLEAN
 || (yyv•[-2].id)->°y≥ =
S_TRISTATE
) {

1492 
	`míu_£t_ty≥
((
yyv•
[-2].
id
)->
°y≥
);

1493 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:type(%u)\n",

1494 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
(),

1495 (
yyv•
[-2].
id
)->
°y≥
);

1497 
YYERROR
;

1504 
cuºít_íåy
->
sym
->
Êags
 |
SYMBOL_OPTIONAL
;

1505 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:›ti⁄Æ\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1512 i‡((
yyv•
[-3].
id
)->
°y≥
 =
S_UNKNOWN
) {

1513 
	`míu_add_symbﬁ
(
P_DEFAULT
, 
	`sym_lookup
((
yyv•
[-2].
°rög
), 0), (yyv•[-1].
ex¥
));

1514 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:default\n",

1515 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1517 
YYERROR
;

1524 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:if\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1525 
	`míu_add_íåy
(
NULL
);

1526 
	`míu_add_dï
((
yyv•
[-1].
ex¥
));

1527 (
yyvÆ
.
míu
Ë
	`míu_add_míu
();

1534 i‡(
	`zc⁄f_ídtokí
((
yyv•
[0].
id
), 
T_IF
, 
T_ENDIF
)) {

1535 
	`míu_íd_míu
();

1536 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:ídif\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1544 
	`míu_add_íåy
(
NULL
);

1545 
	`míu_add_¥om±
(
P_MENU
, (
yyv•
[-1].
°rög
), 
NULL
);

1546 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:míu\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1553 (
yyvÆ
.
míu
Ë
	`míu_add_míu
();

1560 i‡(
	`zc⁄f_ídtokí
((
yyv•
[0].
id
), 
T_MENU
, 
T_ENDMENU
)) {

1561 
	`míu_íd_míu
();

1562 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:ídmíu\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1570 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:sour˚ %s\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
(), (
yyv•
[-1].
°rög
));

1571 
	`zc⁄f_√xtfûe
((
yyv•
[-1].
°rög
));

1578 
	`míu_add_íåy
(
NULL
);

1579 
	`míu_add_¥om±
(
P_COMMENT
, (
yyv•
[-1].
°rög
), 
NULL
);

1580 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:commít\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1587 
	`míu_íd_íåy
();

1594 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:hñp\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1595 
	`zc⁄f_°¨thñp
();

1602 
cuºít_íåy
->
sym
->
hñp
 = (
yyv•
[0].
°rög
);

1609 
	`míu_add_dï
((
yyv•
[-1].
ex¥
));

1610 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:dïíd†⁄\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1617 
	`míu_add_dï
((
yyv•
[-1].
ex¥
));

1618 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:dïíds\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1625 
	`míu_add_dï
((
yyv•
[-1].
ex¥
));

1626 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:ªquúes\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1633 
	`míu_add_¥om±
(
P_PROMPT
, (
yyv•
[-1].
°rög
), (yyv•[0].
ex¥
));

1639 { (
yyvÆ
.
id
Ë(
yyv•
[-1].id); ;}

1644 { (
yyvÆ
.
id
Ë(
yyv•
[-1].id); ;}

1649 { (
yyvÆ
.
id
Ë(
yyv•
[-1].id); ;}

1654 { (
yyvÆ
.
ex¥
Ë
NULL
; ;}

1659 { (
yyvÆ
.
ex¥
Ë(
yyv•
[0].expr); ;}

1664 { (
yyvÆ
.
ex¥
Ë
	`ex¥_Æloc_symbﬁ
((
yyv•
[0].
symbﬁ
)); ;}

1669 { (
yyvÆ
.
ex¥
Ë
	`ex¥_Æloc_comp
(
E_EQUAL
, (
yyv•
[-2].
symbﬁ
), (yyvsp[0].symbol)); ;}

1674 { (
yyvÆ
.
ex¥
Ë
	`ex¥_Æloc_comp
(
E_UNEQUAL
, (
yyv•
[-2].
symbﬁ
), (yyvsp[0].symbol)); ;}

1679 { (
yyvÆ
.
ex¥
Ë(
yyv•
[-1].expr); ;}

1684 { (
yyvÆ
.
ex¥
Ë
	`ex¥_Æloc_⁄e
(
E_NOT
, (
yyv•
[0].expr)); ;}

1689 { (
yyvÆ
.
ex¥
Ë
	`ex¥_Æloc_two
(
E_OR
, (
yyv•
[-2].expr), (yyvsp[0].expr)); ;}

1694 { (
yyvÆ
.
ex¥
Ë
	`ex¥_Æloc_two
(
E_AND
, (
yyv•
[-2].expr), (yyvsp[0].expr)); ;}

1699 { (
yyvÆ
.
symbﬁ
Ë
	`sym_lookup
((
yyv•
[0].
°rög
), 0); 
	`‰ì
((yyvsp[0].string)); ;}

1704 { (
yyvÆ
.
symbﬁ
Ë
	`sym_lookup
((
yyv•
[0].
°rög
), 1); 
	`‰ì
((yyvsp[0].string)); ;}

1713 
yyv•
 -
yyÀn
;

1714 
yys•
 -
yyÀn
;

1717 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1719 *++
yyv•
 = 
yyvÆ
;

1726 
yyn
 = 
yyr1
[yyn];

1728 
yy°©e
 = 
yypgŸo
[
yyn
 - 
YYNTOKENS
] + *
yys•
;

1729 i‡(0 <
yy°©e
 && yy°©ê<
YYLAST
 && 
yycheck
[yy°©e] =*
yys•
)

1730 
yy°©e
 = 
yyèbÀ
[yystate];

1732 
yy°©e
 = 
yydefgŸo
[
yyn
 - 
YYNTOKENS
];

1734 
yy√w°©e
;

1740 
yyîæab
:

1742 i‡(!
yyîr°©us
)

1744 ++
yy√ºs
;

1745 #i‡
YYERROR_VERBOSE


1746 
yyn
 = 
yy∑˘
[
yy°©e
];

1748 i‡(
YYPACT_NINF
 < 
yyn
 && yy¿< 
YYLAST
)

1750 
YYSIZE_T
 
yysize
 = 0;

1751 
yyty≥
 = 
	`YYTRANSLATE
 (
yych¨
);

1752 c⁄° * 
yy¥efix
;

1753 *
yymsg
;

1754 
yyx
;

1758 
yyxbegö
 = 
yyn
 < 0 ? -yyn : 0;

1761 
yychecklim
 = 
YYLAST
 - 
yyn
;

1762 
yyxíd
 = 
yychecklim
 < 
YYNTOKENS
 ? yychecklim : YYNTOKENS;

1763 
yycou¡
 = 0;

1765 
yy¥efix
 = ",Éxpecting ";

1766 
yyx
 = 
yyxbegö
; yyx < 
yyxíd
; ++yyx)

1767 i‡(
yycheck
[
yyx
 + 
yyn
] =yyx && yyx !
YYTERROR
)

1769 
yysize
 +
	`yy°æí
 (
yy¥efix
Ë+ yy°æí (
yyäame
 [
yyx
]);

1770 
yycou¡
 += 1;

1771 i‡(
yycou¡
 == 5)

1773 
yysize
 = 0;

1777 
yysize
 += ( ("syntaxÉrror, unexpected ")

1778 + 
	`yy°æí
 (
yyäame
[
yyty≥
]));

1779 
yymsg
 = (*Ë
	`YYSTACK_ALLOC
 (
yysize
);

1780 i‡(
yymsg
 != 0)

1782 *
yyp
 = 
	`yy°p˝y
 (
yymsg
, "syntaxÉrror, unexpected ");

1783 
yyp
 = 
	`yy°p˝y
 (yyp, 
yyäame
[
yyty≥
]);

1785 i‡(
yycou¡
 < 5)

1787 
yy¥efix
 = ",Éxpecting ";

1788 
yyx
 = 
yyxbegö
; yyx < 
yyxíd
; ++yyx)

1789 i‡(
yycheck
[
yyx
 + 
yyn
] =yyx && yyx !
YYTERROR
)

1791 
yyp
 = 
	`yy°p˝y
 (yyp, 
yy¥efix
);

1792 
yyp
 = 
	`yy°p˝y
 (yyp, 
yyäame
[
yyx
]);

1793 
yy¥efix
 = " or ";

1796 
	`yyîr‹
 (
yymsg
);

1797 
	`YYSTACK_FREE
 (
yymsg
);

1800 
	`yyîr‹
 ("syntaxÉrror;álso virtual memoryÉxhausted");

1804 
	`yyîr‹
 ("syntaxÉrror");

1809 i‡(
yyîr°©us
 == 3)

1814 i‡(
yych¨
 <
YYEOF
)

1818 i‡(
yych¨
 =
YYEOF
)

1822 
YYPOPSTACK
;

1823 i‡(
yys•
 =
yyss
)

1824 
YYABORT
;

1825 
	`yyde°ru˘
 ("Error:Öopping",

1826 
yy°os
[*
yys•
], 
yyv•
);

1831 
	`yyde°ru˘
 ("Eº‹: disˇrdög", 
yytokí
, &
yylvÆ
);

1832 
yych¨
 = 
YYEMPTY
;

1838 
yyîæab1
;

1844 
yyîr‹œb
:

1846 #ifde‡
__GNUC__


1850 
yyîr‹œb
;

1853 
yyv•
 -
yyÀn
;

1854 
yys•
 -
yyÀn
;

1855 
yy°©e
 = *
yys•
;

1856 
yyîæab1
;

1862 
yyîæab1
:

1863 
yyîr°©us
 = 3;

1867 
yyn
 = 
yy∑˘
[
yy°©e
];

1868 i‡(
yyn
 !
YYPACT_NINF
)

1870 
yyn
 +
YYTERROR
;

1871 i‡(0 <
yyn
 && yy¿<
YYLAST
 && 
yycheck
[yyn] =
YYTERROR
)

1873 
yyn
 = 
yyèbÀ
[yyn];

1874 i‡(0 < 
yyn
)

1880 i‡(
yys•
 =
yyss
)

1881 
YYABORT
;

1884 
	`yyde°ru˘
 ("Eº‹:Ö›pög", 
yy°os
[
yy°©e
], 
yyv•
);

1885 
YYPOPSTACK
;

1886 
yy°©e
 = *
yys•
;

1887 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1890 i‡(
yyn
 =
YYFINAL
)

1891 
YYACCEPT
;

1893 *++
yyv•
 = 
yylvÆ
;

1897 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yy°os
[
yyn
], 
yyv•
, 
yyl•
);

1899 
yy°©e
 = 
yyn
;

1900 
yy√w°©e
;

1906 
yyac˚±œb
:

1907 
yyªsu…
 = 0;

1908 
yyªtu∫
;

1913 
yyab‹éab
:

1914 
	`yyde°ru˘
 ("Error: discardingÜookahead",

1915 
yytokí
, &
yylvÆ
);

1916 
yych¨
 = 
YYEMPTY
;

1917 
yyªsu…
 = 1;

1918 
yyªtu∫
;

1920 #i‚de‡
yyovîÊow


1924 
yyovîÊowœb
:

1925 
	`yyîr‹
 ("parser stack overflow");

1926 
yyªsu…
 = 2;

1930 
yyªtu∫
:

1931 #i‚de‡
yyovîÊow


1932 i‡(
yyss
 !
yysß
)

1933 
	`YYSTACK_FREE
 (
yyss
);

1935  
yyªsu…
;

1936 
	}
}

1942 
	$c⁄f_∑r£
(c⁄° *
«me
)

1944 
symbﬁ
 *
sym
;

1945 
i
;

1947 
	`zc⁄f_öôsˇn
(
«me
);

1949 
	`sym_öô
();

1950 
	`míu_öô
();

1951 
moduÀs_sym
 = 
	`sym_lookup
("MODULES", 0);

1952 
roŸmíu
.
¥om±
 = 
	`míu_add_¥om±
(
P_MENU
, "Löux Kî√»C⁄figuøti⁄", 
NULL
);

1954 #i‡
YYDEBUG


1955 i‡(
	`gëív
("ZCONF_DEBUG"))

1956 
zc⁄fdebug
 = 1;

1958 
	`zc⁄Â¨£
();

1959 i‡(
zc⁄‚îrs
)

1960 
	`exô
(1);

1961 
	`míu_föÆize
(&
roŸmíu
);

1962 
	`f‹_Æl_symbﬁs
(
i
, 
sym
) {

1963 
	`sym_check_dïs
(
sym
);

1966 
sym_ch™ge_cou¡
 = 1;

1967 
	}
}

1969 c⁄° *
	$zc⁄f_tokí«me
(
tokí
)

1971 
tokí
) {

1972 
T_MENU
:  "menu";

1973 
T_ENDMENU
:  "endmenu";

1974 
T_CHOICE
:  "choice";

1975 
T_ENDCHOICE
:  "endchoice";

1976 
T_IF
:  "if";

1977 
T_ENDIF
:  "endif";

1978 
T_DEPENDS
:  "depends";

1981 
	}
}

1983 
boﬁ
 
	$zc⁄f_ídtokí
(
kc⁄f_id
 *
id
, 
°¨âokí
, 
ídtokí
)

1985 i‡(
id
->
tokí
 !
ídtokí
) {

1986 
	`zc⁄f_îr‹
("unexpected '%s' within %s block",

1987 
kc⁄f_id_°rögs
 + 
id
->
«me
, 
	`zc⁄f_tokí«me
(
°¨âokí
));

1988 
zc⁄‚îrs
++;

1989  
Ál£
;

1991 i‡(
cuºít_míu
->
fûe
 !
cuºít_fûe
) {

1992 
	`zc⁄f_îr‹
("'%s' in different fileÅhan '%s'",

1993 
kc⁄f_id_°rögs
 + 
id
->
«me
, 
	`zc⁄f_tokí«me
(
°¨âokí
));

1994 
	`Ârötf
(
°dîr
, "%s:%d:Üocation ofÅhe '%s'\n",

1995 
cuºít_míu
->
fûe
->
«me
, cuºít_míu->
löío
,

1996 
	`zc⁄f_tokí«me
(
°¨âokí
));

1997 
zc⁄‚îrs
++;

1998  
Ál£
;

2000  
åue
;

2001 
	}
}

2003 
	$zc⁄Âröt
(c⁄° *
îr
, ...)

2005 
va_li°
 
≠
;

2007 
	`Ârötf
(
°dîr
, "%s:%d: ", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

2008 
	`va_°¨t
(
≠
, 
îr
);

2009 
	`vÂrötf
(
°dîr
, 
îr
, 
≠
);

2010 
	`va_íd
(
≠
);

2011 
	`Ârötf
(
°dîr
, "\n");

2012 
	}
}

2014 
	$zc⁄f_îr‹
(c⁄° *
îr
, ...)

2016 
va_li°
 
≠
;

2018 
zc⁄‚îrs
++;

2019 
	`Ârötf
(
°dîr
, "%s:%d: ", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

2020 
	`va_°¨t
(
≠
, 
îr
);

2021 
	`vÂrötf
(
°dîr
, 
îr
, 
≠
);

2022 
	`va_íd
(
≠
);

2023 
	`Ârötf
(
°dîr
, "\n");

2024 
	}
}

2026 
	$zc⁄„º‹
(c⁄° *
îr
)

2028 #i‡
YYDEBUG


2029 
	`Ârötf
(
°dîr
, "%s:%d: %s\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
(Ë+ 1, 
îr
);

2031 
	}
}

2033 
	$¥öt_quŸed_°rög
(
FILE
 *
out
, c⁄° *
°r
)

2035 c⁄° *
p
;

2036 
Àn
;

2038 
	`putc
('"', 
out
);

2039 (
p
 = 
	`°rchr
(
°r
, '"'))) {

2040 
Àn
 = 
p
 - 
°r
;

2041 i‡(
Àn
)

2042 
	`Ârötf
(
out
, "%.*s", 
Àn
, 
°r
);

2043 
	`Âuts
("\\\"", 
out
);

2044 
°r
 = 
p
 + 1;

2046 
	`Âuts
(
°r
, 
out
);

2047 
	`putc
('"', 
out
);

2048 
	}
}

2050 
	$¥öt_symbﬁ
(
FILE
 *
out
, 
míu
 *menu)

2052 
symbﬁ
 *
sym
 = 
míu
->sym;

2053 
¥›îty
 *
¥›
;

2055 i‡(
	`sym_is_choi˚
(
sym
))

2056 
	`Ârötf
(
out
, "choice\n");

2058 
	`Ârötf
(
out
, "c⁄fig %s\n", 
sym
->
«me
);

2059 
sym
->
ty≥
) {

2060 
S_BOOLEAN
:

2061 
	`Âuts
(" boﬁón\n", 
out
);

2063 
S_TRISTATE
:

2064 
	`Âuts
("Åri°©e\n", 
out
);

2066 
S_STRING
:

2067 
	`Âuts
(" såög\n", 
out
);

2069 
S_INT
:

2070 
	`Âuts
(" i¡egî\n", 
out
);

2072 
S_HEX
:

2073 
	`Âuts
(" hex\n", 
out
);

2076 
	`Âuts
(" ???\n", 
out
);

2079 
¥›
 = 
sym
->¥›;Ör›;Ör› =Ör›->
√xt
) {

2080 i‡(
¥›
->
míu
 != menu)

2082 
¥›
->
ty≥
) {

2083 
P_PROMPT
:

2084 
	`Âuts
("Örom± ", 
out
);

2085 
	`¥öt_quŸed_°rög
(
out
, 
¥›
->
ãxt
);

2086 i‡(!
	`ex¥_is_yes
(
¥›
->
visibÀ
.
ex¥
)) {

2087 
	`Âuts
(" i‡", 
out
);

2088 
	`ex¥_Âröt
(
¥›
->
visibÀ
.
ex¥
, 
out
);

2090 
	`Âutc
('\n', 
out
);

2092 
P_DEFAULT
:

2093 
	`Âuts
–" deÁu… ", 
out
);

2094 
	`ex¥_Âröt
(
¥›
->
ex¥
, 
out
);

2095 i‡(!
	`ex¥_is_yes
(
¥›
->
visibÀ
.
ex¥
)) {

2096 
	`Âuts
(" i‡", 
out
);

2097 
	`ex¥_Âröt
(
¥›
->
visibÀ
.
ex¥
, 
out
);

2099 
	`Âutc
('\n', 
out
);

2101 
P_CHOICE
:

2102 
	`Âuts
(" #choi˚ vÆue\n", 
out
);

2105 
	`Ârötf
(
out
, " unknow¿¥› %d!\n", 
¥›
->
ty≥
);

2109 i‡(
sym
->
hñp
) {

2110 
Àn
 = 
	`°æí
(
sym
->
hñp
);

2111 
sym
->
hñp
[--
Àn
] == '\n')

2112 
sym
->
hñp
[
Àn
] = 0;

2113 
	`Ârötf
(
out
, " hñp\n%s\n", 
sym
->
hñp
);

2115 
	`Âutc
('\n', 
out
);

2116 
	}
}

2118 
	$zc⁄fdump
(
FILE
 *
out
)

2120 
¥›îty
 *
¥›
;

2121 
symbﬁ
 *
sym
;

2122 
míu
 *menu;

2124 
míu
 = 
roŸmíu
.
li°
;

2125 
míu
) {

2126 i‡((
sym
 = 
míu
->sym))

2127 
	`¥öt_symbﬁ
(
out
, 
míu
);

2128 i‡((
¥›
 = 
míu
->
¥om±
)) {

2129 
¥›
->
ty≥
) {

2130 
P_COMMENT
:

2131 
	`Âuts
("\ncommíà", 
out
);

2132 
	`¥öt_quŸed_°rög
(
out
, 
¥›
->
ãxt
);

2133 
	`Âuts
("\n", 
out
);

2135 
P_MENU
:

2136 
	`Âuts
("\nmíu ", 
out
);

2137 
	`¥öt_quŸed_°rög
(
out
, 
¥›
->
ãxt
);

2138 
	`Âuts
("\n", 
out
);

2143 i‡(!
	`ex¥_is_yes
(
¥›
->
visibÀ
.
ex¥
)) {

2144 
	`Âuts
(" dïíd†", 
out
);

2145 
	`ex¥_Âröt
(
¥›
->
visibÀ
.
ex¥
, 
out
);

2146 
	`Âutc
('\n', 
out
);

2148 
	`Âuts
("\n", 
out
);

2151 i‡(
míu
->
li°
)

2152 
míu
 = míu->
li°
;

2153 i‡(
míu
->
√xt
)

2154 
míu
 = míu->
√xt
;

2155 (
míu
 = míu->
∑ª¡
)) {

2156 i‡(
míu
->
¥om±
 && míu->¥om±->
ty≥
 =
P_MENU
)

2157 
	`Âuts
("\√ndmíu\n", 
out
);

2158 i‡(
míu
->
√xt
) {

2159 
míu
 = míu->
√xt
;

2164 
	}
}

2166 
	~"Àx.zc⁄f.c
"

2167 
	~"utû.c
"

2168 
	~"c⁄fd©a.c
"

2169 
	~"ex¥.c
"

2170 
	~"symbﬁ.c
"

2171 
	~"míu.c
"

	@zconf.y

7 
	~<˘y≥.h
>

8 
	~<°d¨g.h
>

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~<°rög.h
>

12 
	~<°dboﬁ.h
>

14 
	#LKC_DIRECT_LINK


	)

15 
	~"lkc.h
"

17 
	~"zc⁄f.hash.c
"

19 
	#¥ötd
(
mask
, 
fmt
...Ëi‡(
cdebug
 & (mask)Ë
	`¥ötf
(fmt)

	)

21 
	#PRINTD
 0x0001

	)

22 
	#DEBUG_PARSE
 0x0002

	)

24 
	gcdebug
 = 
PRINTD
;

26 
zc⁄Êex
();

27 
zc⁄Âröt
(c⁄° *
îr
, ...);

28 
zc⁄f_îr‹
(c⁄° *
îr
, ...);

29 
zc⁄„º‹
(c⁄° *
îr
);

30 
boﬁ
 
zc⁄f_ídtokí
(
kc⁄f_id
 *
id
, 
°¨âokí
, 
ídtokí
);

32 
symbﬁ
 *
	gsymbﬁ_hash
[257];

34 
míu
 *
	gcuºít_míu
, *
	gcuºít_íåy
;

36 
	#YYDEBUG
 0

	)

37 #i‡
YYDEBUG


38 
	#YYERROR_VERBOSE


	)

41 %
ex≥˘
 26

45 *
°rög
;

46 
fûe
 *file;

47 
symbﬁ
 *symbol;

48 
ex¥
 *expr;

49 
míu
 *menu;

50 
kc⁄f_id
 *
id
;

53 %
tokí
 <
id
>
T_MAINMENU


54 %
tokí
 <
id
>
T_MENU


55 %
tokí
 <
id
>
T_ENDMENU


56 %
tokí
 <
id
>
T_SOURCE


57 %
tokí
 <
id
>
T_CHOICE


58 %
tokí
 <
id
>
T_ENDCHOICE


59 %
tokí
 <
id
>
T_COMMENT


60 %
tokí
 <
id
>
T_CONFIG


61 %
tokí
 <
id
>
T_MENUCONFIG


62 %
tokí
 <
id
>
T_HELP


63 %
tokí
 <
°rög
> 
T_HELPTEXT


64 %
tokí
 <
id
>
T_IF


65 %
tokí
 <
id
>
T_ENDIF


66 %
tokí
 <
id
>
T_DEPENDS


67 %
tokí
 <
id
>
T_REQUIRES


68 %
tokí
 <
id
>
T_OPTIONAL


69 %
tokí
 <
id
>
T_PROMPT


70 %
tokí
 <
id
>
T_TYPE


71 %
tokí
 <
id
>
T_DEFAULT


72 %
tokí
 <
id
>
T_SELECT


73 %
tokí
 <
id
>
T_RANGE


74 %
tokí
 <
id
>
T_ON


75 %
tokí
 <
°rög
> 
T_WORD


76 %
tokí
 <
°rög
> 
T_WORD_QUOTE


77 %
tokí
 
T_UNEQUAL


78 %
tokí
 
T_CLOSE_PAREN


79 %
tokí
 
T_OPEN_PAREN


80 %
tokí
 
T_EOL


82 %
À·
 
T_OR


83 %
À·
 
T_AND


84 %
À·
 
T_EQUAL
 
T_UNEQUAL


85 %
n⁄assoc
 
T_NOT


87 %
ty≥
 <
°rög
> 
¥om±


88 %
ty≥
 <
symbﬁ
> symbol

89 %
ty≥
 <
ex¥
>Éxpr

90 %
ty≥
 <
ex¥
> 
if_ex¥


91 %
ty≥
 <
id
> 
íd


92 %
ty≥
 <
id
> 
›ti⁄_«me


93 %
ty≥
 <
míu
> 
if_íåy
 
míu_íåy
 
choi˚_íåy


95 %
de°ru˘‹
 {

96 
Ârötf
(
°dîr
, "%s:%d: missingÉnd statement forÅhisÉntry\n",

97 
$$
->
fûe
->
«me
, $$->
löío
);

98 i‡(
cuºít_míu
 =
$$
)

99 
míu_íd_míu
();

100 } 
if_íåy
 
míu_íåy
 
choi˚_íåy


102 %% /* 
	$yy∑r£
 */ 
	`yyÀx
()

103 
öput
: 
°mt_li°
;

105 
°mt_li°
:

107 | 
°mt_li°
 
comm⁄_°mt


108 | 
°mt_li°
 
choi˚_°mt


109 | 
°mt_li°
 
míu_°mt


110 | 
°mt_li°
 
T_MAINMENU
 
¥om±
 
∆


111 | 
°mt_li°
 
íd
 { 
	`zc⁄f_îr‹
("unexpectedÉnd statement"); }

112 | 
°mt_li°
 
T_WORD
 
îr‹
 
T_EOL
 { 
	`zc⁄f_îr‹
("unknow¿°©emíà\"%s\"", 
$2
); }

113 | 
°mt_li°
 
›ti⁄_«me
 
îr‹
 
T_EOL


115 
	`zc⁄f_îr‹
("u√x≥˘ed o±i⁄ \"%s\"", 
kc⁄f_id_°rögs
 + 
$2
->
«me
);

117 | 
°mt_li°
 
îr‹
 
T_EOL
 { 
	`zc⁄f_îr‹
("invalid statement"); }

120 
›ti⁄_«me
:

121 
T_DEPENDS
 | 
T_PROMPT
 | 
T_TYPE
 | 
T_SELECT
 | 
T_OPTIONAL
 | 
T_RANGE
 | 
T_DEFAULT


124 
comm⁄_°mt
:

125 
T_EOL


126 | 
if_°mt


127 | 
commít_°mt


128 | 
c⁄fig_°mt


129 | 
míuc⁄fig_°mt


130 | 
sour˚_°mt


133 
›ti⁄_îr‹
:

134 
T_WORD
 
îr‹
 
T_EOL
 { 
	`zc⁄f_îr‹
("unknow¿›ti⁄ \"%s\"", 
$1
); }

135 | 
îr‹
 
T_EOL
 { 
	`zc⁄f_îr‹
("invalid option"); }

141 
c⁄fig_íåy_°¨t
: 
T_CONFIG
 
T_WORD
 
T_EOL


143 
symbﬁ
 *
sym
 = 
	`sym_lookup
(
$2
, 0);

144 
sym
->
Êags
 |
SYMBOL_OPTIONAL
;

145 
	`míu_add_íåy
(
sym
);

146 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:c⁄fig %s\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
(), 
$2
);

149 
c⁄fig_°mt
: 
c⁄fig_íåy_°¨t
 
c⁄fig_›ti⁄_li°


151 
	`míu_íd_íåy
();

152 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:ídc⁄fig\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

155 
míuc⁄fig_íåy_°¨t
: 
T_MENUCONFIG
 
T_WORD
 
T_EOL


157 
symbﬁ
 *
sym
 = 
	`sym_lookup
(
$2
, 0);

158 
sym
->
Êags
 |
SYMBOL_OPTIONAL
;

159 
	`míu_add_íåy
(
sym
);

160 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:míuc⁄fig %s\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
(), 
$2
);

163 
míuc⁄fig_°mt
: 
míuc⁄fig_íåy_°¨t
 
c⁄fig_›ti⁄_li°


165 i‡(
cuºít_íåy
->
¥om±
)

166 
cuºít_íåy
->
¥om±
->
ty≥
 = 
P_MENU
;

168 
	`zc⁄Âröt
("warning: menuconfig statement withoutÖrompt");

169 
	`míu_íd_íåy
();

170 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:ídc⁄fig\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

173 
c⁄fig_›ti⁄_li°
:

175 | 
c⁄fig_›ti⁄_li°
 
c⁄fig_›ti⁄


176 | 
c⁄fig_›ti⁄_li°
 
dïíds


177 | 
c⁄fig_›ti⁄_li°
 
hñp


178 | 
c⁄fig_›ti⁄_li°
 
›ti⁄_îr‹


179 | 
c⁄fig_›ti⁄_li°
 
T_EOL


182 
c⁄fig_›ti⁄
: 
T_TYPE
 
¥om±_°mt_›t
 
T_EOL


184 
	`míu_£t_ty≥
(
$1
->
°y≥
);

185 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:type(%u)\n",

186 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
(),

187 
$1
->
°y≥
);

190 
c⁄fig_›ti⁄
: 
T_PROMPT
 
¥om±
 
if_ex¥
 
T_EOL


192 
	`míu_add_¥om±
(
P_PROMPT
, 
$2
, 
$3
);

193 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:¥om±\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

196 
c⁄fig_›ti⁄
: 
T_DEFAULT
 
ex¥
 
if_ex¥
 
T_EOL


198 
	`míu_add_ex¥
(
P_DEFAULT
, 
$2
, 
$3
);

199 i‡(
$1
->
°y≥
 !
S_UNKNOWN
)

200 
	`míu_£t_ty≥
(
$1
->
°y≥
);

201 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:default(%u)\n",

202 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
(),

203 
$1
->
°y≥
);

206 
c⁄fig_›ti⁄
: 
T_SELECT
 
T_WORD
 
if_ex¥
 
T_EOL


208 
	`míu_add_symbﬁ
(
P_SELECT
, 
	`sym_lookup
(
$2
, 0), 
$3
);

209 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:£À˘\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

212 
c⁄fig_›ti⁄
: 
T_RANGE
 
symbﬁ
 symbﬁ 
if_ex¥
 
T_EOL


214 
	`míu_add_ex¥
(
P_RANGE
, 
	`ex¥_Æloc_comp
(
E_RANGE
,
$2
, 
$3
), 
$4
);

215 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:ønge\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

220 
choi˚
: 
T_CHOICE
 
T_EOL


222 
symbﬁ
 *
sym
 = 
	`sym_lookup
(
NULL
, 0);

223 
sym
->
Êags
 |
SYMBOL_CHOICE
;

224 
	`míu_add_íåy
(
sym
);

225 
	`míu_add_ex¥
(
P_CHOICE
, 
NULL
, NULL);

226 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:choi˚\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

229 
choi˚_íåy
: 
choi˚
 
choi˚_›ti⁄_li°


231 
$$
 = 
	`míu_add_míu
();

234 
choi˚_íd
: 
íd


236 i‡(
	`zc⁄f_ídtokí
(
$1
, 
T_CHOICE
, 
T_ENDCHOICE
)) {

237 
	`míu_íd_míu
();

238 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:ídchoi˚\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

242 
choi˚_°mt
: 
choi˚_íåy
 
choi˚_block
 
choi˚_íd


245 
choi˚_›ti⁄_li°
:

247 | 
choi˚_›ti⁄_li°
 
choi˚_›ti⁄


248 | 
choi˚_›ti⁄_li°
 
dïíds


249 | 
choi˚_›ti⁄_li°
 
hñp


250 | 
choi˚_›ti⁄_li°
 
T_EOL


251 | 
choi˚_›ti⁄_li°
 
›ti⁄_îr‹


254 
choi˚_›ti⁄
: 
T_PROMPT
 
¥om±
 
if_ex¥
 
T_EOL


256 
	`míu_add_¥om±
(
P_PROMPT
, 
$2
, 
$3
);

257 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:¥om±\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

260 
choi˚_›ti⁄
: 
T_TYPE
 
¥om±_°mt_›t
 
T_EOL


262 i‡(
$1
->
°y≥
 =
S_BOOLEAN
 || $1->°y≥ =
S_TRISTATE
) {

263 
	`míu_£t_ty≥
(
$1
->
°y≥
);

264 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:type(%u)\n",

265 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
(),

266 
$1
->
°y≥
);

268 
YYERROR
;

271 
choi˚_›ti⁄
: 
T_OPTIONAL
 
T_EOL


273 
cuºít_íåy
->
sym
->
Êags
 |
SYMBOL_OPTIONAL
;

274 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:›ti⁄Æ\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

277 
choi˚_›ti⁄
: 
T_DEFAULT
 
T_WORD
 
if_ex¥
 
T_EOL


279 i‡(
$1
->
°y≥
 =
S_UNKNOWN
) {

280 
	`míu_add_symbﬁ
(
P_DEFAULT
, 
	`sym_lookup
(
$2
, 0), 
$3
);

281 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:default\n",

282 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

284 
YYERROR
;

287 
choi˚_block
:

289 | 
choi˚_block
 
comm⁄_°mt


294 
if_íåy
: 
T_IF
 
ex¥
 
∆


296 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:if\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

297 
	`míu_add_íåy
(
NULL
);

298 
	`míu_add_dï
(
$2
);

299 
$$
 = 
	`míu_add_míu
();

302 
if_íd
: 
íd


304 i‡(
	`zc⁄f_ídtokí
(
$1
, 
T_IF
, 
T_ENDIF
)) {

305 
	`míu_íd_míu
();

306 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:ídif\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

310 
if_°mt
: 
if_íåy
 
if_block
 
if_íd


313 
if_block
:

315 | 
if_block
 
comm⁄_°mt


316 | 
if_block
 
míu_°mt


317 | 
if_block
 
choi˚_°mt


322 
míu
: 
T_MENU
 
¥om±
 
T_EOL


324 
	`míu_add_íåy
(
NULL
);

325 
	`míu_add_¥om±
(
P_MENU
, 
$2
, 
NULL
);

326 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:míu\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

329 
míu_íåy
: 
míu
 
dïíds_li°


331 
$$
 = 
	`míu_add_míu
();

334 
míu_íd
: 
íd


336 i‡(
	`zc⁄f_ídtokí
(
$1
, 
T_MENU
, 
T_ENDMENU
)) {

337 
	`míu_íd_míu
();

338 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:ídmíu\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

342 
míu_°mt
: 
míu_íåy
 
míu_block
 
míu_íd


345 
míu_block
:

347 | 
míu_block
 
comm⁄_°mt


348 | 
míu_block
 
míu_°mt


349 | 
míu_block
 
choi˚_°mt


352 
sour˚_°mt
: 
T_SOURCE
 
¥om±
 
T_EOL


354 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:sour˚ %s\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
(), 
$2
);

355 
	`zc⁄f_√xtfûe
(
$2
);

360 
commít
: 
T_COMMENT
 
¥om±
 
T_EOL


362 
	`míu_add_íåy
(
NULL
);

363 
	`míu_add_¥om±
(
P_COMMENT
, 
$2
, 
NULL
);

364 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:commít\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

367 
commít_°mt
: 
commít
 
dïíds_li°


369 
	`míu_íd_íåy
();

374 
hñp_°¨t
: 
T_HELP
 
T_EOL


376 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:hñp\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

377 
	`zc⁄f_°¨thñp
();

380 
hñp
: 
hñp_°¨t
 
T_HELPTEXT


382 
cuºít_íåy
->
sym
->
hñp
 = 
$2
;

387 
dïíds_li°
:

389 | 
dïíds_li°
 
dïíds


390 | 
dïíds_li°
 
T_EOL


391 | 
dïíds_li°
 
›ti⁄_îr‹


394 
dïíds
: 
T_DEPENDS
 
T_ON
 
ex¥
 
T_EOL


396 
	`míu_add_dï
(
$3
);

397 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:dïíd†⁄\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

399 | 
T_DEPENDS
 
ex¥
 
T_EOL


401 
	`míu_add_dï
(
$2
);

402 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:dïíds\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

404 | 
T_REQUIRES
 
ex¥
 
T_EOL


406 
	`míu_add_dï
(
$2
);

407 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:ªquúes\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

412 
¥om±_°mt_›t
:

414 | 
¥om±
 
if_ex¥


416 
	`míu_add_¥om±
(
P_PROMPT
, 
$1
, 
$2
);

419 
¥om±
: 
T_WORD


420 | 
T_WORD_QUOTE


423 
íd
: 
T_ENDMENU
 
T_EOL
 { 
$$
 = 
$1
; }

424 | 
T_ENDCHOICE
 
T_EOL
 { 
$$
 = 
$1
; }

425 | 
T_ENDIF
 
T_EOL
 { 
$$
 = 
$1
; }

428 
∆
:

429 
T_EOL


430 | 
∆
 
T_EOL


433 
if_ex¥
: { 
$$
 = 
NULL
; }

434 | 
T_IF
 
ex¥
 { 
$$
 = 
$2
; }

437 
ex¥
: 
symbﬁ
 { 
$$
 = 
	`ex¥_Æloc_symbﬁ
(
$1
); }

438 | 
symbﬁ
 
T_EQUAL
 symbﬁ { 
$$
 = 
	`ex¥_Æloc_comp
(
E_EQUAL
, 
$1
, 
$3
); }

439 | 
symbﬁ
 
T_UNEQUAL
 symbﬁ { 
$$
 = 
	`ex¥_Æloc_comp
(
E_UNEQUAL
, 
$1
, 
$3
); }

440 | 
T_OPEN_PAREN
 
ex¥
 
T_CLOSE_PAREN
 { 
$$
 = 
$2
; }

441 | 
T_NOT
 
ex¥
 { 
$$
 = 
	`ex¥_Æloc_⁄e
(
E_NOT
, 
$2
); }

442 | 
ex¥
 
T_OR
Éx¥ { 
$$
 = 
	`ex¥_Æloc_two
(
E_OR
, 
$1
, 
$3
); }

443 | 
ex¥
 
T_AND
Éx¥ { 
$$
 = 
	`ex¥_Æloc_two
(
E_AND
, 
$1
, 
$3
); }

446 
symbﬁ
: 
T_WORD
 { 
$$
 = 
	`sym_lookup
(
$1
, 0); 
	`‰ì
($1); }

447 | 
T_WORD_QUOTE
 { 
$$
 = 
	`sym_lookup
(
$1
, 1); 
	`‰ì
($1); }

450 
	}
%%

452 
	$c⁄f_∑r£
(c⁄° *
«me
)

454 
symbﬁ
 *
sym
;

455 
i
;

457 
	`zc⁄f_öôsˇn
(
«me
);

459 
	`sym_öô
();

460 
	`míu_öô
();

461 
moduÀs_sym
 = 
	`sym_lookup
("MODULES", 0);

462 
roŸmíu
.
¥om±
 = 
	`míu_add_¥om±
(
P_MENU
, "Löux Kî√»C⁄figuøti⁄", 
NULL
);

464 #i‡
YYDEBUG


465 i‡(
	`gëív
("ZCONF_DEBUG"))

466 
zc⁄fdebug
 = 1;

468 
	`zc⁄Â¨£
();

469 i‡(
zc⁄‚îrs
)

470 
	`exô
(1);

471 
	`míu_föÆize
(&
roŸmíu
);

472 
	`f‹_Æl_symbﬁs
(
i
, 
sym
) {

473 
	`sym_check_dïs
(
sym
);

476 
sym_ch™ge_cou¡
 = 1;

477 
	}
}

479 c⁄° *
	$zc⁄f_tokí«me
(
tokí
)

481 
tokí
) {

482 
T_MENU
:  "menu";

483 
T_ENDMENU
:  "endmenu";

484 
T_CHOICE
:  "choice";

485 
T_ENDCHOICE
:  "endchoice";

486 
T_IF
:  "if";

487 
T_ENDIF
:  "endif";

488 
T_DEPENDS
:  "depends";

491 
	}
}

493 
boﬁ
 
	$zc⁄f_ídtokí
(
kc⁄f_id
 *
id
, 
°¨âokí
, 
ídtokí
)

495 i‡(
id
->
tokí
 !
ídtokí
) {

496 
	`zc⁄f_îr‹
("unexpected '%s' within %s block",

497 
kc⁄f_id_°rögs
 + 
id
->
«me
, 
	`zc⁄f_tokí«me
(
°¨âokí
));

498 
zc⁄‚îrs
++;

499  
Ál£
;

501 i‡(
cuºít_míu
->
fûe
 !
cuºít_fûe
) {

502 
	`zc⁄f_îr‹
("'%s' in different fileÅhan '%s'",

503 
kc⁄f_id_°rögs
 + 
id
->
«me
, 
	`zc⁄f_tokí«me
(
°¨âokí
));

504 
	`Ârötf
(
°dîr
, "%s:%d:Üocation ofÅhe '%s'\n",

505 
cuºít_míu
->
fûe
->
«me
, cuºít_míu->
löío
,

506 
	`zc⁄f_tokí«me
(
°¨âokí
));

507 
zc⁄‚îrs
++;

508  
Ál£
;

510  
åue
;

511 
	}
}

513 
	$zc⁄Âröt
(c⁄° *
îr
, ...)

515 
va_li°
 
≠
;

517 
	`Ârötf
(
°dîr
, "%s:%d: ", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

518 
	`va_°¨t
(
≠
, 
îr
);

519 
	`vÂrötf
(
°dîr
, 
îr
, 
≠
);

520 
	`va_íd
(
≠
);

521 
	`Ârötf
(
°dîr
, "\n");

522 
	}
}

524 
	$zc⁄f_îr‹
(c⁄° *
îr
, ...)

526 
va_li°
 
≠
;

528 
zc⁄‚îrs
++;

529 
	`Ârötf
(
°dîr
, "%s:%d: ", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

530 
	`va_°¨t
(
≠
, 
îr
);

531 
	`vÂrötf
(
°dîr
, 
îr
, 
≠
);

532 
	`va_íd
(
≠
);

533 
	`Ârötf
(
°dîr
, "\n");

534 
	}
}

536 
	$zc⁄„º‹
(c⁄° *
îr
)

538 #i‡
YYDEBUG


539 
	`Ârötf
(
°dîr
, "%s:%d: %s\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
(Ë+ 1, 
îr
);

541 
	}
}

543 
	$¥öt_quŸed_°rög
(
FILE
 *
out
, c⁄° *
°r
)

545 c⁄° *
p
;

546 
Àn
;

548 
	`putc
('"', 
out
);

549 (
p
 = 
	`°rchr
(
°r
, '"'))) {

550 
Àn
 = 
p
 - 
°r
;

551 i‡(
Àn
)

552 
	`Ârötf
(
out
, "%.*s", 
Àn
, 
°r
);

553 
	`Âuts
("\\\"", 
out
);

554 
°r
 = 
p
 + 1;

556 
	`Âuts
(
°r
, 
out
);

557 
	`putc
('"', 
out
);

558 
	}
}

560 
	$¥öt_symbﬁ
(
FILE
 *
out
, 
míu
 *menu)

562 
symbﬁ
 *
sym
 = 
míu
->sym;

563 
¥›îty
 *
¥›
;

565 i‡(
	`sym_is_choi˚
(
sym
))

566 
	`Ârötf
(
out
, "choice\n");

568 
	`Ârötf
(
out
, "c⁄fig %s\n", 
sym
->
«me
);

569 
sym
->
ty≥
) {

570 
S_BOOLEAN
:

571 
	`Âuts
(" boﬁón\n", 
out
);

573 
S_TRISTATE
:

574 
	`Âuts
("Åri°©e\n", 
out
);

576 
S_STRING
:

577 
	`Âuts
(" såög\n", 
out
);

579 
S_INT
:

580 
	`Âuts
(" i¡egî\n", 
out
);

582 
S_HEX
:

583 
	`Âuts
(" hex\n", 
out
);

586 
	`Âuts
(" ???\n", 
out
);

589 
¥›
 = 
sym
->¥›;Ör›;Ör› =Ör›->
√xt
) {

590 i‡(
¥›
->
míu
 != menu)

592 
¥›
->
ty≥
) {

593 
P_PROMPT
:

594 
	`Âuts
("Örom± ", 
out
);

595 
	`¥öt_quŸed_°rög
(
out
, 
¥›
->
ãxt
);

596 i‡(!
	`ex¥_is_yes
(
¥›
->
visibÀ
.
ex¥
)) {

597 
	`Âuts
(" i‡", 
out
);

598 
	`ex¥_Âröt
(
¥›
->
visibÀ
.
ex¥
, 
out
);

600 
	`Âutc
('\n', 
out
);

602 
P_DEFAULT
:

603 
	`Âuts
–" deÁu… ", 
out
);

604 
	`ex¥_Âröt
(
¥›
->
ex¥
, 
out
);

605 i‡(!
	`ex¥_is_yes
(
¥›
->
visibÀ
.
ex¥
)) {

606 
	`Âuts
(" i‡", 
out
);

607 
	`ex¥_Âröt
(
¥›
->
visibÀ
.
ex¥
, 
out
);

609 
	`Âutc
('\n', 
out
);

611 
P_CHOICE
:

612 
	`Âuts
(" #choi˚ vÆue\n", 
out
);

615 
	`Ârötf
(
out
, " unknow¿¥› %d!\n", 
¥›
->
ty≥
);

619 i‡(
sym
->
hñp
) {

620 
Àn
 = 
	`°æí
(
sym
->
hñp
);

621 
sym
->
hñp
[--
Àn
] == '\n')

622 
sym
->
hñp
[
Àn
] = 0;

623 
	`Ârötf
(
out
, " hñp\n%s\n", 
sym
->
hñp
);

625 
	`Âutc
('\n', 
out
);

626 
	}
}

628 
	$zc⁄fdump
(
FILE
 *
out
)

630 
¥›îty
 *
¥›
;

631 
symbﬁ
 *
sym
;

632 
míu
 *menu;

634 
míu
 = 
roŸmíu
.
li°
;

635 
míu
) {

636 i‡((
sym
 = 
míu
->sym))

637 
	`¥öt_symbﬁ
(
out
, 
míu
);

638 i‡((
¥›
 = 
míu
->
¥om±
)) {

639 
¥›
->
ty≥
) {

640 
P_COMMENT
:

641 
	`Âuts
("\ncommíà", 
out
);

642 
	`¥öt_quŸed_°rög
(
out
, 
¥›
->
ãxt
);

643 
	`Âuts
("\n", 
out
);

645 
P_MENU
:

646 
	`Âuts
("\nmíu ", 
out
);

647 
	`¥öt_quŸed_°rög
(
out
, 
¥›
->
ãxt
);

648 
	`Âuts
("\n", 
out
);

653 i‡(!
	`ex¥_is_yes
(
¥›
->
visibÀ
.
ex¥
)) {

654 
	`Âuts
(" dïíd†", 
out
);

655 
	`ex¥_Âröt
(
¥›
->
visibÀ
.
ex¥
, 
out
);

656 
	`Âutc
('\n', 
out
);

658 
	`Âuts
("\n", 
out
);

661 i‡(
míu
->
li°
)

662 
míu
 = míu->
li°
;

663 i‡(
míu
->
√xt
)

664 
míu
 = míu->
√xt
;

665 (
míu
 = míu->
∑ª¡
)) {

666 i‡(
míu
->
¥om±
 && míu->¥om±->
ty≥
 =
P_MENU
)

667 
	`Âuts
("\√ndmíu\n", 
out
);

668 i‡(
míu
->
√xt
) {

669 
míu
 = míu->
√xt
;

674 
	}
}

676 
	~"Àx.zc⁄f.c
"

677 
	~"utû.c
"

678 
	~"c⁄fd©a.c
"

679 
	~"ex¥.c
"

680 
	~"symbﬁ.c
"

681 
	~"míu.c
"

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_GNU


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/dialog.h

28 #i‚de‡
DIALOG_H_ö˛uded


29 
	#DIALOG_H_ö˛uded
 1

	)

31 
	~<dlg_c⁄fig.h
>

33 
	~<sys/ty≥s.h
>

34 
	~<f˙é.h
>

35 
	~<uni°d.h
>

36 
	~<˘y≥.h
>

37 
	~<°dlib.h
>

38 
	~<°d¨g.h
>

39 
	~<°rög.h
>

40 
	~<sig«l.h
>

41 
	~<m©h.h
>

43 #i‡
deföed
(
DLG_HAVE_NCURSESW_NCURSES_H
)

44 
	~<ncur£sw/ncur£s.h
>

45 #ñi‡
deföed
(
HAVE_NCURSES_NCURSES_H
)

46 
	~<ncur£s/ncur£s.h
>

47 #ñi‡
deföed
(
HAVE_NCURSES_CURSES_H
)

48 
	~<ncur£s/cur£s.h
>

49 #ñi‡
deföed
(
HAVE_NCURSES_H
)

50 
	~<ncur£s.h
>

51 #ñi‡
deföed
(
u…rix
)

52 
	~<cur£sX.h
>

54 
	~<cur£s.h
>

58 #ifde‡
cﬁ‹_«mes


59 #unde‡
cﬁ‹_«mes


62 #ifde‡
buâ⁄s


63 #unde‡
buâ⁄s


66 #ifde‡
DLG_ENABLE_NLS


67 
	~<liböé.h
>

68 
	~<œngöfo.h
>

69 
	#_
(
s
Ë
	`gëãxt
(s)

	)

71 #unde‡
_


72 
	#_
(
s
Ë
	)
s

75 #i‚de‡
GCC_NORETURN


76 
	#GCC_NORETURN


	)

79 #i‚de‡
GCC_UNUSED


80 
	#GCC_UNUSED


	)

83 #i‚de‡
DLG_HAVE_WGET_WCH


84 #unde‡
DLG_USE_WIDE_CURSES


90 #ifde‡
__hpux


91 #unde‡
ACS_UARROW


92 #unde‡
ACS_DARROW


98 
	#USE_SHADOW
 
TRUE


	)

99 
	#USE_COLORS
 
TRUE


	)

101 #ifde‡
DLG_HAVE_COLOR


102 
	#SCOLS
 (
COLS
 - (
dülog_°©e
.
u£_shadow
 ? 2 : 0))

	)

103 
	#SLINES
 (
LINES
 - (
dülog_°©e
.
u£_shadow
 ? 1 : 0))

	)

105 
	#SCOLS
 
COLS


	)

106 
	#SLINES
 
LINES


	)

109 
	#DLG_EXIT_ESC
 255

	)

110 
	#DLG_EXIT_UNKNOWN
 -2

	)

111 
	#DLG_EXIT_ERROR
 -1

	)

112 
	#DLG_EXIT_OK
 0

	)

113 
	#DLG_EXIT_CANCEL
 1

	)

114 
	#DLG_EXIT_HELP
 2

	)

115 
	#DLG_EXIT_EXTRA
 3

	)

116 
	#DLG_EXIT_ITEM_HELP
 4

	)

118 
	#CHR_BACKSPACE
 8

	)

119 
	#CHR_REPAINT
 12

	)

120 
	#CHR_DELETE
 127

	)

121 
	#CHR_NEXT
 ('n' & 0x1f)

	)

122 
	#CHR_PREVIOUS
 ('p' & 0x1f)

	)

124 
	#ESC
 27

	)

125 
	#TAB
 9

	)

127 
	#MARGIN
 1

	)

128 
	#GUTTER
 2

	)

129 
	#SHADOW_ROWS
 1

	)

130 
	#SHADOW_COLS
 2

	)

132 
	#MAX_LEN
 2048

	)

133 
	#BUF_SIZE
 (10*1024)

	)

135 #unde‡
MIN


136 
	#MIN
(
x
,
y
Ë((xË< (yË? (xË: (y))

	)

138 #unde‡
MAX


139 
	#MAX
(
x
,
y
Ë((xË> (yË? (xË: (y))

	)

141 
	#DEFAULT_SEPARATE_STR
 "\t"

	)

142 
	#DEFAULT_ASPECT_RATIO
 9

	)

144 
	#TAB_LEN
 8

	)

145 
	#WTIMEOUT_VAL
 10

	)

147 #i‚de‡
A_CHARTEXT


148 
	#A_CHARTEXT
 0xff

	)

151 
	#Ch¨Of
(
ch
Ë((chË& 
A_CHARTEXT
)

	)

153 #i‚de‡
ACS_ULCORNER


154 
	#ACS_ULCORNER
 '+'

	)

156 #i‚de‡
ACS_LLCORNER


157 
	#ACS_LLCORNER
 '+'

	)

159 #i‚de‡
ACS_URCORNER


160 
	#ACS_URCORNER
 '+'

	)

162 #i‚de‡
ACS_LRCORNER


163 
	#ACS_LRCORNER
 '+'

	)

165 #i‚de‡
ACS_HLINE


166 
	#ACS_HLINE
 '-'

	)

168 #i‚de‡
ACS_VLINE


169 
	#ACS_VLINE
 '|'

	)

171 #i‚de‡
ACS_LTEE


172 
	#ACS_LTEE
 '+'

	)

174 #i‚de‡
ACS_RTEE


175 
	#ACS_RTEE
 '+'

	)

177 #i‚de‡
ACS_UARROW


178 
	#ACS_UARROW
 '^'

	)

180 #i‚de‡
ACS_DARROW


181 
	#ACS_DARROW
 'v'

	)

185 #i‚de‡
DLG_HAVE_GETBEGYX


186 #unde‡
gëbegyx


187 
	#gëbegyx
(
wö
,
y
,
x
Ë(y = (wö)?(wö)->
_begy
:
ERR
, x = (wö)?(wö)->
_begx
:ERR)

	)

190 #i‚de‡
DLG_HAVE_GETMAXYX


191 #unde‡
gëmaxyx


192 
	#gëmaxyx
(
wö
,
y
,
x
Ë(y = (wö)?(wö)->
_maxy
:
ERR
, x = (wö)?(wö)->
_maxx
:ERR)

	)

195 #i‚de‡
DLG_HAVE_GETPARYX


196 #unde‡
gë∑ryx


197 
	#gë∑ryx
(
wö
,
y
,
x
Ë(y = (wö)?(wö)->
_∑ry
:
ERR
, x = (wö)?(wö)->
_∑rx
:ERR)

	)

200 #ifde‡
__˝lu•lus


205 #i‡!(
deföed
(
DLG_HAVE_GETBEGX
Ë&& deföed(
DLG_HAVE_GETBEGY
))

206 #unde‡
gëbegx


207 #unde‡
gëbegy


208 
	#gëbegx
(
wö
Ë
	`dlg_gëbegx
(wö)

	)

209 
	#gëbegy
(
wö
Ë
	`dlg_gëbegy
(wö)

	)

210 
dlg_gëbegx
(
WINDOW
 * );

211 
dlg_gëbegy
(
WINDOW
 * );

214 #i‡!(
deföed
(
DLG_HAVE_GETCURX
Ë&& deföed(
DLG_HAVE_GETCURY
))

215 #unde‡
gëcurx


216 #unde‡
gëcury


217 
	#gëcurx
(
wö
Ë
	`dlg_gëcurx
(wö)

	)

218 
	#gëcury
(
wö
Ë
	`dlg_gëcury
(wö)

	)

219 
dlg_gëcurx
(
WINDOW
 * );

220 
dlg_gëcury
(
WINDOW
 * );

223 #i‡!(
deföed
(
DLG_HAVE_GETMAXX
Ë&& deföed(
DLG_HAVE_GETMAXY
))

224 #unde‡
gëmaxx


225 #unde‡
gëmaxy


226 
	#gëmaxx
(
wö
Ë
	`dlg_gëmaxx
(wö)

	)

227 
	#gëmaxy
(
wö
Ë
	`dlg_gëmaxy
(wö)

	)

228 
dlg_gëmaxx
(
WINDOW
 * );

229 
dlg_gëmaxy
(
WINDOW
 * );

232 #i‡!(
deföed
(
DLG_HAVE_GETPARX
Ë&& deföed(
DLG_HAVE_GETPARY
))

233 #unde‡
gë∑rx


234 #unde‡
gë∑ry


235 
	#gë∑rx
(
wö
Ë
	`dlg_gë∑rx
(wö)

	)

236 
	#gë∑ry
(
wö
Ë
	`dlg_gë∑ry
(wö)

	)

237 
dlg_gë∑rx
(
WINDOW
 * );

238 
dlg_gë∑ry
(
WINDOW
 * );

247 #ifde‡
__DIALOG_OLD_NAMES__


248 
	#cﬁ‹_èbÀ
 
dlg_cﬁ‹_èbÀ


	)

249 
	#©å_˛ór
(
wö
,
h
,
w
,
a
Ë
	`dlg_©å_˛ór
(wö,h,w,a)

	)

250 
	#auto_size
(
t
,
s
,
h
,
w
,
xl
,
mc
Ë
	`dlg_auto_size
—,s,h,w,xl,mc)

	)

251 
	#auto_sizefûe
(
t
,
f
,
h
,
w
,
xl
,
mc
Ë
	`dlg_auto_sizefûe
—,f,h,w,xl,mc)

	)

252 
	#bìpög
(Ë
	`dlg_bìpög
()

	)

253 
	#box_x_‹dö©e
(
w
Ë
	`dlg_box_x_‹dö©e
(w)

	)

254 
	#box_y_‹dö©e
(
h
Ë
	`dlg_box_y_‹dö©e
(h)

	)

255 
	#ˇlc_li°h
(
h
,
lh
,
ö
Ë
	`dlg_ˇlc_li°h
(h,lh,ö)

	)

256 
	#ˇlc_li°w
(
ö
,
ôems
,
group
Ë
	`dlg_ˇlc_li°w
(ö,ôems,group)

	)

257 
	#cﬁ‹_£tup
(Ë
	`dlg_cﬁ‹_£tup
()

	)

258 
	#¸óã_rc
(
f
Ë
	`dlg_¸óã_rc
(f)

	)

259 
	#˘l_size
(
h
,
w
Ë
	`dlg_˘l_size
(h,w)

	)

260 
	#dñ_wödow
(
wö
Ë
	`dlg_dñ_wödow
(wö)

	)

261 
	#dülog_˛ór
(Ë
	`dlg_˛ór
()

	)

262 
	#døw_bŸtom_box
(
wö
Ë
	`dlg_døw_bŸtom_box
(wö)

	)

263 
	#døw_box
(
wö
,
y
,
x
,
h
,
w
,
xc
,
bc
Ë
	`dlg_døw_box
(wö,y,x,h,w,xc,bc)

	)

264 
	#døw_shadow
(
wö
,
h
,
w
,
y
,
x
Ë
	`dlg_døw_shadow
(wö,h,w,y,x)

	)

265 
	#døw_tôÀ
(
wö
,
t
Ë
	`dlg_døw_tôÀ
(wö,t)

	)

266 
	#exôîr
 
dlg_exôîr


	)

267 
	#kûœŒ_bg
(
n
Ë
	`dlg_kûœŒ_bg
“)

	)

268 
	#mou£_bigªgi⁄
(
y
,
x
Ë
	`dlg_mou£_bigªgi⁄
(y,x)

	)

269 
	#mou£_‰ì_ªgi⁄s
(Ë
	`dlg_mou£_‰ì_ªgi⁄s
()

	)

270 
	#mou£_mkbigªgi⁄
(
y
,
x
,
h
,
w
,
n
,
ix
,
iy
,
m
Ë
	`dlg_mou£_mkbigªgi⁄
(y,x,h,w,n,ix,iy,m)

	)

271 
	#mou£_mkªgi⁄
(
y
,
x
,
h
,
w
,
n
Ë
	`dlg_mou£_mkªgi⁄
(y,x,h,w,n)

	)

272 
	#mou£_ªgi⁄
(
y
,
x
Ë
	`dlg_mou£_ªgi⁄
(y,x)

	)

273 
	#mou£_£tba£
(
x
,
y
Ë
	`dlg_mou£_£tba£
(x,y)

	)

274 
	#mou£_wgëch
(
w
,
c
Ë
	`dlg_mou£_wgëch
(w,c)

	)

275 
	#√w_wödow
(
h
,
w
,
y
,
x
Ë
	`dlg_√w_wödow
(h,w,y,x)

	)

276 
	#∑r£_rc
(Ë
	`dlg_∑r£_rc
()

	)

277 
	#¥öt_autowøp
(
wö
,
s
,
h
,
w
Ë
	`dlg_¥öt_autowøp
(wö,s,h,w)

	)

278 
	#¥öt_size
(
h
,
w
Ë
	`dlg_¥öt_size
(h,w)

	)

279 
	#put_backtôÀ
(Ë
	`dlg_put_backtôÀ
()

	)

280 
	#°r˛⁄e
(
˝rom±
Ë
	`dlg_°r˛⁄e
(˝rom±)

	)

281 
	#sub_wödow
(
wö
,
h
,
w
,
y
,
x
Ë
	`dlg_sub_wödow
(wö,h,w,y,x)

	)

282 
	#èb_c‹ª˘_°r
(
s
Ë
	`dlg_èb_c‹ª˘_°r
(s)

	)

288 
	#DIALOG_ATR
(
n
Ë
dlg_cﬁ‹_èbÀ
[n].
©r


	)

290 
	#s¸ìn_©å
 
	`DIALOG_ATR
(0)

	)

291 
	#shadow_©å
 
	`DIALOG_ATR
(1)

	)

292 
	#dülog_©å
 
	`DIALOG_ATR
(2)

	)

293 
	#tôÀ_©å
 
	`DIALOG_ATR
(3)

	)

294 
	#b‹dî_©å
 
	`DIALOG_ATR
(4)

	)

295 
	#buâ⁄_a˘ive_©å
 
	`DIALOG_ATR
(5)

	)

296 
	#buâ⁄_öa˘ive_©å
 
	`DIALOG_ATR
(6)

	)

297 
	#buâ⁄_key_a˘ive_©å
 
	`DIALOG_ATR
(7)

	)

298 
	#buâ⁄_key_öa˘ive_©å
 
	`DIALOG_ATR
(8)

	)

299 
	#buâ⁄_œbñ_a˘ive_©å
 
	`DIALOG_ATR
(9)

	)

300 
	#buâ⁄_œbñ_öa˘ive_©å
 
	`DIALOG_ATR
(10)

	)

301 
	#öputbox_©å
 
	`DIALOG_ATR
(11)

	)

302 
	#öputbox_b‹dî_©å
 
	`DIALOG_ATR
(12)

	)

303 
	#£¨chbox_©å
 
	`DIALOG_ATR
(13)

	)

304 
	#£¨chbox_tôÀ_©å
 
	`DIALOG_ATR
(14)

	)

305 
	#£¨chbox_b‹dî_©å
 
	`DIALOG_ATR
(15)

	)

306 
	#posôi⁄_ödiˇt‹_©å
 
	`DIALOG_ATR
(16)

	)

307 
	#míubox_©å
 
	`DIALOG_ATR
(17)

	)

308 
	#míubox_b‹dî_©å
 
	`DIALOG_ATR
(18)

	)

309 
	#ôem_©å
 
	`DIALOG_ATR
(19)

	)

310 
	#ôem_£À˘ed_©å
 
	`DIALOG_ATR
(20)

	)

311 
	#èg_©å
 
	`DIALOG_ATR
(21)

	)

312 
	#èg_£À˘ed_©å
 
	`DIALOG_ATR
(22)

	)

313 
	#èg_key_©å
 
	`DIALOG_ATR
(23)

	)

314 
	#èg_key_£À˘ed_©å
 
	`DIALOG_ATR
(24)

	)

315 
	#check_©å
 
	`DIALOG_ATR
(25)

	)

316 
	#check_£À˘ed_©å
 
	`DIALOG_ATR
(26)

	)

317 
	#u¨row_©å
 
	`DIALOG_ATR
(27)

	)

318 
	#d¨row_©å
 
	`DIALOG_ATR
(28)

	)

319 
	#ôemhñp_©å
 
	`DIALOG_ATR
(29)

	)

320 
	#f‹m_a˘ive_ãxt_©å
 
	`DIALOG_ATR
(30)

	)

321 
	#f‹m_ãxt_©å
 
	`DIALOG_ATR
(31)

	)

323 
	#DLGK_max
 (
KEY_MAX
 + 256)

	)

328 
	s_dlg_ˇŒback
 {

329 
_dlg_ˇŒback
 *
	g√xt
;

330 
FILE
 *
	göput
;

331 
WINDOW
 *
	gwö
;

332 
boﬁ
 
	gkìp_bg
;

333 
boﬁ
 
	gbg_èsk
;

334 
boﬁ
 (*
h™dÀ_gëc
)(
_dlg_ˇŒback
 *
	gp
, 
	gch
, 
	gfkey
, *
	gªsu…
);

335 } 
	tDIALOG_CALLBACK
;

337 
	s_dlg_wödows
 {

338 
_dlg_wödows
 *
	g√xt
;

339 
WINDOW
 *
	gn‹mÆ
;

340 
WINDOW
 *
	gshadow
;

341 } 
	tDIALOG_WINDOWS
;

347 
DIALOG_CALLBACK
 *
	ggëc_ˇŒbacks
;

348 
DIALOG_CALLBACK
 *
	ggëc_ªdúe˘
;

349 
DIALOG_WINDOWS
 *
	gÆl_wödows
;

350 
FILE
 *
	gouçut
;

351 
FILE
 *
	gpùe_öput
;

352 
FILE
 *
	gs¸ìn_ouçut
;

353 
boﬁ
 
	gs¸ìn_öôülized
;

354 
boﬁ
 
	gu£_cﬁ‹s
;

355 
boﬁ
 
	gu£_s¸ﬁlb¨
;

356 
boﬁ
 
	gu£_shadow
;

357 
boﬁ
 
	gvisô_ôems
;

358 *
	g£∑øã_°r
;

359 
	ga•e˘_øtio
;

360 
	gouçut_cou¡
;

361 
	gèb_Àn
;

362 } 
	tDIALOG_STATE
;

364 
DIALOG_STATE
 
dülog_°©e
;

370 
boﬁ
 
	gbìp_a·î_sig«l
;

371 
boﬁ
 
	gbìp_sig«l
;

372 
boﬁ
 
	gbegö_£t
;

373 
boﬁ
 
	gˇ¡_kûl
;

374 
boﬁ
 
	gcﬁ‹s
;

375 
boﬁ
 
	g¸_wøp
;

376 
boﬁ
 
	gdeÁu…no
;

377 
boﬁ
 
	gdlg_˛ór_s¸ìn
;

378 
boﬁ
 
	gexåa_buâ⁄
;

379 
boﬁ
 
	ghñp_buâ⁄
;

380 
boﬁ
 
	ghñp_°©us
;

381 
boﬁ
 
	göput_míu
;

382 
boﬁ
 
	gö£cuª
;

383 
boﬁ
 
	gôem_hñp
;

384 
boﬁ
 
	gkìp_wödow
;

385 
boﬁ
 
	gnoˇn˚l
;

386 
boﬁ
 
	gnocﬁœp£
;

387 
boﬁ
 
	g¥öt_siz
;

388 
boﬁ
 
	g£∑øã_ouçut
;

389 
boﬁ
 
	gsögÀ_quŸed
;

390 
boﬁ
 
	gsize_îr
;

391 
boﬁ
 
	gèb_c‹ª˘
;

392 
boﬁ
 
	gåim_whôe•a˚
;

393 *
	gbacktôÀ
;

394 *
	gˇn˚l_œbñ
;

395 *
	gdeÁu…_ôem
;

396 *
	gexô_œbñ
;

397 *
	gexåa_œbñ
;

398 *
	ghñp_œbñ
;

399 *
	göput_ªsu…
;

400 *
	gno_œbñ
;

401 *
	gok_œbñ
;

402 *
	gtôÀ
;

403 *
	gyes_œbñ
;

404 
	gbegö_x
;

405 
	gbegö_y
;

406 
	gmax_öput
;

407 
	gsˇÀ_Á˘‹
;

408 
	g¶ìp_£cs
;

409 
	gtimeout_£cs
;

410 
	göput_Àngth
;

412 
	gf‹môem_ty≥
;

413 } 
	tDIALOG_VARS
;

415 
	#USE_ITEM_HELP
(
s
Ë(
dülog_v¨s
.
ôem_hñp
 && (sË!0)

	)

416 
	#CHECKBOX_TAGS
 (
dülog_v¨s
.
ôem_hñp
 ? 4 : 3)

	)

417 
	#MENUBOX_TAGS
 (
dülog_v¨s
.
ôem_hñp
 ? 3 : 2)

	)

418 
	#FORMBOX_TAGS
 (
dülog_v¨s
.
ôem_hñp
 ? 9 : 8)

	)

420 
DIALOG_VARS
 
dülog_v¨s
;

422 #i‚de‡
DLG_HAVE_TYPE_CHTYPE


423 
	#chty≥
 

	)

426 
	#UCH
(
ch
Ë(()(ch))

	)

428 
	#as£π_±r
(
±r
,
msg
Ëi‡(’åË=0Ë
	`dlg_exôîr
("ˇ¬ŸáŒoˇã mem‹y i¿" msg)

	)

434 
chty≥
 
	g©r
;

435 #ifde‡
DLG_HAVE_COLOR


436 
	gfg
;

437 
	gbg
;

438 
	ghûôe
;

440 #ifde‡
DLG_HAVE_RC_FILE


441 *
	g«me
;

442 *
	gcommít
;

444 } 
	tDIALOG_COLORS
;

446 
DIALOG_COLORS
 
dlg_cﬁ‹_èbÀ
[];

451 *
dülog_vîsi⁄
();

454 
dülog_ˇÀnd¨
(const * , const * , , , , , );

455 
dülog_checkli°
(const * , const * , , , , , ** , );

456 
dülog_f‹m
(const * , const * , , , , , ** );

457 
dülog_f£À˘
(const * , const * , , );

458 
dülog_gauge
(const * , const * , , , );

459 
dülog_öputbox
(const * , const * , , , const * , const );

460 
dülog_míu
(const * , const * , , , , , ** );

461 
dülog_msgbox
(const * , const * , , , );

462 
dülog_∑u£
(const * , const * , , , );

463 
dülog_¥ogªssbox
(const * , const * , , );

464 
dülog_èûbox
(const * , const * , , , );

465 
dülog_ãxtbox
(const * , const * , , );

466 
dülog_timebox
(const * , const * , , , , , );

467 
dülog_ye¢o
(const * , const * , , );

471 *
	g«me
;

472 *
	gãxt
;

473 *
	ghñp
;

474 
	g°©e
;

475 } 
	tDIALOG_LISTITEM
;

478 
	gty≥
;

479 *
	g«me
;

480 
	g«me_Àn
;

481 
	g«me_y
;

482 
	g«me_x
;

483 
boﬁ
 
	g«me_‰ì
;

484 *
	gãxt
;

485 
	gãxt_Àn
;

486 
	gãxt_y
;

487 
	gãxt_x
;

488 
	gãxt_Êí
;

489 
	gãxt_ûí
;

490 
boﬁ
 
	gãxt_‰ì
;

491 *
	ghñp
;

492 
boﬁ
 
	ghñp_‰ì
;

493 } 
	tDIALOG_FORMITEM
;

495 (
	gDIALOG_INPUTMENU
Ë(
	tDIALOG_LISTITEM
 * , , * );

497 
dlg_checkli°
(c⁄° * , c⁄° * , , , , , 
DIALOG_LISTITEM
 * , const * , , * );

498 
dlg_f‹m
(c⁄° * , c⁄° * , , , , , 
DIALOG_FORMITEM
 * , * );

499 
dlg_míu
(c⁄° * , c⁄° * , , , , , 
DIALOG_LISTITEM
 * , * , 
DIALOG_INPUTMENU
 );

502 
dlg_døw_¨rows
(
WINDOW
 * , , , , , );

503 
dlg_døw_¨rows2
(
WINDOW
 * , , , , , , 
chty≥
 , chtype );

506 c⁄° ** 
dlg_exô_œbñ
();

507 c⁄° ** 
dlg_ok_œbñ
();

508 c⁄° ** 
dlg_ok_œbñs
();

509 c⁄° ** 
dlg_yes_œbñs
();

510 
dlg_buâ⁄_cou¡
(const ** );

511 
dlg_buâ⁄_to_ch¨
(const * );

512 
dlg_buâ⁄_x_°ï
(const ** , , * , * , * );

513 
dlg_ch¨_to_buâ⁄
(, const ** );

514 
dlg_exô_buâ⁄code
();

515 
dlg_m©ch_ch¨
(, const * );

516 
dlg_√xt_buâ⁄
(const ** , );

517 
dlg_√xt_ok_buâ⁄ödex
(, );

518 
dlg_ok_buâ⁄code
();

519 
dlg_¥ev_buâ⁄
(const ** , );

520 
dlg_¥ev_ok_buâ⁄ödex
(, );

521 
dlg_yes_buâ⁄code
();

522 
dlg_buâ⁄_œyout
(const ** , * );

523 
dlg_buâ⁄_sizes
(const ** , , * , * );

524 
dlg_døw_buâ⁄s
(
WINDOW
 * , , , const ** , , , );

527 
dlg_deÁu…_f‹môem
(
DIALOG_FORMITEM
 * );

528 
dlg_‰ì_f‹môems
(
DIALOG_FORMITEM
 * );

531 
boﬁ
 
dlg_edô_°rög
(* , * , , , bool );

532 c⁄° * 
dlg_ödex_cﬁumns
(const * );

533 c⁄° * 
dlg_ödex_wch¨s
(const * );

534 
dlg_cou¡_cﬁumns
(const * );

535 
dlg_cou¡_wch¨s
(const * );

536 
dlg_edô_off£t
(* , , );

537 
dlg_limô_cﬁumns
(const * , , );

538 
dlg_show_°rög
(
WINDOW
 * , c⁄° * , , 
chty≥
 , , , , 
boﬁ
 , bool );

541 #ifde‡
DLG_HAVE_RC_FILE


542 
dlg_∑r£_rc
();

543 
dlg_¸óã_rc
(const * );

547 
dlg_gëc
(
WINDOW
 * , * );

548 
dlg_gëc_ˇŒbacks
(, , * );

549 
dlg_œ°_gëc
();

550 
dlg_add_ˇŒback
(
DIALOG_CALLBACK
 * );

551 
dlg_Êush_gëc
();

552 
dlg_ªmove_ˇŒback
(
DIALOG_CALLBACK
 * );

553 
dlg_kûœŒ_bg
(*
ªtvÆ
);

556 
WINDOW
 * 
dlg_√w_wödow
(, , , );

557 
WINDOW
 * 
dlg_sub_wödow
(WINDOW * , , , , );

558 * 
dlg_£t_ªsu…
(const * );

559 * 
dlg_°r˛⁄e
(const * );

560 
dlg_box_x_‹dö©e
();

561 
dlg_box_y_‹dö©e
();

562 
dlg_ˇlc_li°_width
(, 
DIALOG_LISTITEM
 * );

563 
dlg_ˇlc_li°w
(, ** , );

564 
dlg_deÁu…_ôem
(** , );

565 
dlg_deÁu…_li°ôem
(
DIALOG_LISTITEM
 * );

566 
dlg_deÁu…no_buâ⁄
();

567 
dlg_add_quŸed
(* );

568 
dlg_add_ªsu…
(* );

569 
dlg_©å_˛ór
(
WINDOW
 * , , , 
chty≥
 );

570 
dlg_auto_size
(const * , const * , * , * , , );

571 
dlg_auto_sizefûe
(const * , const * , * , * , , );

572 
dlg_bìpög
();

573 
dlg_ˇlc_li°h
(* , * , );

574 
dlg_˛ór
();

575 
dlg_˛r_ªsu…
();

576 
dlg_˘l_size
(, );

577 
dlg_dñ_wödow
(
WINDOW
 * );

578 
dlg_d€s_ouçut
();

579 
dlg_døw_bŸtom_box
(
WINDOW
 * );

580 
dlg_døw_box
(
WINDOW
 * , , , , , 
chty≥
 , chtype );

581 
dlg_døw_tôÀ
(
WINDOW
 *
wö
, c⁄° *
tôÀ
);

582 
dlg_exô
(Ë
GCC_NORETURN
;

583 
dlg_ôem_hñp
(* );

584 
dlg_¥öt_autowøp
(
WINDOW
 * , const * , , );

585 
dlg_¥öt_size
(, );

586 
dlg_¥öt_ãxt
(
WINDOW
 * , c⁄° * , , 
chty≥
 * );

587 
dlg_put_backtôÀ
();

588 
dlg_£t_focus
(
WINDOW
 * , WINDOW * );

589 
dlg_èb_c‹ª˘_°r
(* );

590 
dlg_åim_°rög
(* );

591 
íd_dülog
();

592 
öô_dülog
(
FILE
 * , FILE * );

594 
dlg_exôîr
(const *, ...)

595 #i‡
deföed
(
__GNUC__
Ë&& !deföed(
¥ötf
)

596 
__©åibuã__
((
f‹m©
(
¥ötf
,1,2)))

600 #ifde‡
DLG_HAVE_COLOR


601 
chty≥
 
dlg_cﬁ‹_∑ú
(, );

602 
dlg_cﬁ‹_cou¡
();

603 
dlg_cﬁ‹_£tup
();

604 
dlg_døw_shadow
(
WINDOW
 * , , , , );

607 #ifde‡
DLG_HAVE_STRCASECMP


608 
	#dlg_°rcmp
(
a
,
b
Ë
	`°rˇ£cmp
◊,b)

	)

610 
dlg_°rcmp
(const * , const * );

616 
	sm£Regi⁄
 {

617 
	gx
, 
	gy
, 
	gX
, 
	gY
, 
	gcode
;

618 
	gmode
, 
	g°ï_x
, 
	g°ï_y
;

619 
m£Regi⁄
 *
	g√xt
;

620 } 
	tm£Regi⁄
;

622 #i‡
deföed
(
NCURSES_MOUSE_VERSION
)

624 
	#mou£_›í
(Ë
	`mou£mask
(
BUTTON1_CLICKED
, (
mmask_t
 *Ë0)

	)

625 
	#mou£_˛o£
(Ë
	`mou£mask
(0, (
mmask_t
 *Ë0)

	)

627 
m£Regi⁄
 * 
dlg_mou£_mkªgi⁄
 (, , , , );

628 
dlg_mou£_‰ì_ªgi⁄s
 ();

629 
dlg_mou£_mkbigªgi⁄
 (, , , , , , , );

630 
dlg_mou£_£tba£
 (, );

632 
	#USE_MOUSE
 1

	)

636 
	#mou£_›í
(Ë

	)

637 
	#mou£_˛o£
(Ë

	)

638 
	#dlg_mou£_‰ì_ªgi⁄s
(Ë

	)

639 
	#dlg_mou£_mkªgi⁄
(
y
, 
x
, 
height
, 
width
, 
code
Ë

	)

640 
	#dlg_mou£_mkbigªgi⁄
(
y
, 
x
, 
height
, 
width
, 
code
, 
°ï_x
, 
°ï_y
, 
mode
Ë

	)

641 
	#dlg_mou£_£tba£
(
x
, 
y
Ë

	)

643 
	#USE_MOUSE
 0

	)

647 
m£Regi⁄
 *
dlg_mou£_ªgi⁄
 (, );

648 
m£Regi⁄
 *
dlg_mou£_bigªgi⁄
 (, );

649 
dlg_mou£_wgëch
 (
WINDOW
 * , * );

650 
dlg_mou£_wgëch_nowaô
 (
WINDOW
 * , * );

652 
	#mou£_mkbuâ⁄
(
y
,
x
,
Àn
,
code
Ë
	`dlg_mou£_mkªgi⁄
(y,x,1,Àn,code);

	)

663 
	#M_EVENT
 (
DLGK_max
 + 1)

	)

669 
	#FLAG_CHECK
 1

	)

670 
	#FLAG_RADIO
 0

	)

675 #ifde‡
NO_LEAKS


676 
_dlg_öput°r_Àaks
();

677 #i‡
deföed
(
NCURSES_VERSION
Ë&& deföed(
HAVE__NC_FREE_AND_EXIT
)

678 
_nc_‰ì_™d_exô
();

682 #ifde‡
__˝lu•lus


	@/usr/include/dlfcn.h

21 #i‚def 
_DLFCN_H


22 
	#_DLFCN_H
 1

	)

24 
	~<„©uªs.h
>

25 
	#__√ed_size_t


	)

26 
	~<°ddef.h
>

29 
	~<bôs/dlf˙.h
>

32 #ifde‡
__USE_GNU


37 
	#RTLD_NEXT
 ((*Ë-1l)

	)

42 
	#RTLD_DEFAULT
 ((*Ë0)

	)

46 
	tLmid_t
;

49 
	#LM_ID_BASE
 0

	)

50 
	#LM_ID_NEWLM
 -1

	)

54 
__BEGIN_DECLS


58 *
	$dl›í
 (
__c⁄°
 *
__fûe
, 
__mode
Ë
__THROW
;

62 
	$dl˛o£
 (*
__h™dÀ
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

66 *
	$dlsym
 (*
__ª°ri˘
 
__h™dÀ
,

67 
__c⁄°
 *
__ª°ri˘
 
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

69 #ifde‡
__USE_GNU


71 *
	$dlm›í
 (
Lmid_t
 
__nsid
, 
__c⁄°
 *
__fûe
, 
__mode
Ë
__THROW
;

75 *
	$dlvsym
 (*
__ª°ri˘
 
__h™dÀ
,

76 
__c⁄°
 *
__ª°ri˘
 
__«me
,

77 
__c⁄°
 *
__ª°ri˘
 
__vîsi⁄
)

78 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

84 *
	$dÀº‹
 (Ë
__THROW
;

87 #ifde‡
__USE_GNU


92 
__c⁄°
 *
dli_‚ame
;

93 *
dli_fba£
;

94 
__c⁄°
 *
dli_¢ame
;

95 *
dli_ßddr
;

96 } 
	tDl_öfo
;

100 
	$dœddr
 (
__c⁄°
 *
__addªss
, 
Dl_öfo
 *
__öfo
)

101 
__THROW
 
	`__n⁄nuŒ
 ((2));

104 
	$dœddr1
 (
__c⁄°
 *
__addªss
, 
Dl_öfo
 *
__öfo
,

105 **
__exåa_öfo
, 
__Êags
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

113 
RTLD_DL_SYMENT
 = 1,

116 
RTLD_DL_LINKMAP
 = 2

125 
	$dlöfo
 (*
__ª°ri˘
 
__h™dÀ
,

126 
__ªque°
, *
__ª°ri˘
 
__¨g
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

133 
RTLD_DI_LMID
 = 1,

137 
RTLD_DI_LINKMAP
 = 2,

139 
RTLD_DI_CONFIGADDR
 = 3,

146 
RTLD_DI_SERINFO
 = 4,

147 
RTLD_DI_SERINFOSIZE
 = 5,

151 
RTLD_DI_ORIGIN
 = 6,

153 
RTLD_DI_PROFILENAME
 = 7,

154 
RTLD_DI_PROFILEOUT
 = 8,

159 
RTLD_DI_TLS_MODID
 = 9,

165 
RTLD_DI_TLS_DATA
 = 10,

167 
RTLD_DI_MAX
 = 10,

175 *
dls_«me
;

176 
dls_Êags
;

177 } 
	tDl_£Ω©h
;

183 
size_t
 
dls_size
;

184 
dls_˙t
;

185 
Dl_£Ω©h
 
dls_£Ω©h
[1];

186 } 
	tDl_£röfo
;

190 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #ifde‡
__USE_XOPEN


38 
	~<sys/°©.h
>

41 #ifdef 
__USE_MISC


42 #i‚de‡
R_OK


45 
	#R_OK
 4

	)

46 
	#W_OK
 2

	)

47 
	#X_OK
 1

	)

48 
	#F_OK
 0

	)

53 #ifde‡
__USE_XOPEN


54 
	#SEEK_SET
 0

	)

55 
	#SEEK_CUR
 1

	)

56 
	#SEEK_END
 2

	)

59 #ifde‡
__USE_ATFILE


60 
	#AT_FDCWD
 -100

	)

63 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

64 
	#AT_REMOVEDIR
 0x200

	)

66 
	#AT_SYMLINK_FOLLOW
 0x400

	)

67 
	#AT_EACCESS
 0x200

	)

76 
f˙é
 (
__fd
, 
__cmd
, ...);

84 #i‚de‡
__USE_FILE_OFFSET64


85 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

87 #ifde‡
__REDIRECT


88 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

89 
	`__n⁄nuŒ
 ((1));

91 
	#›í
 
›í64


	)

94 #ifde‡
__USE_LARGEFILE64


95 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

98 #ifde‡
__USE_ATFILE


108 #i‚de‡
__USE_FILE_OFFSET64


109 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

110 
	`__n⁄nuŒ
 ((2));

112 #ifde‡
__REDIRECT


113 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

114 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

116 
	#›í©
 
›í©64


	)

120 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

121 
	`__n⁄nuŒ
 ((2));

129 #i‚de‡
__USE_FILE_OFFSET64


130 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

132 #ifde‡
__REDIRECT


133 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

134 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

136 
	#¸ót
 
¸ót64


	)

139 #ifde‡
__USE_LARGEFILE64


140 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

143 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

144 && !
deföed
 
__USE_POSIX
))

153 
	#F_ULOCK
 0

	)

154 
	#F_LOCK
 1

	)

155 
	#F_TLOCK
 2

	)

156 
	#F_TEST
 3

	)

158 #i‚de‡
__USE_FILE_OFFSET64


159 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

161 #ifde‡
__REDIRECT


162 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

164 
	#lockf
 
lockf64


	)

167 #ifde‡
__USE_LARGEFILE64


168 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

172 #ifde‡
__USE_XOPEN2K


175 #i‚de‡
__USE_FILE_OFFSET64


176 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

177 
__advi£
Ë
__THROW
;

179 #ifde‡
__REDIRECT_NTH


180 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

181 
__off64_t
 
__Àn
, 
__advi£
),

182 
posix_Ádvi£64
);

184 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

187 #ifde‡
__USE_LARGEFILE64


188 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

189 
__advi£
Ë
__THROW
;

197 #i‚de‡
__USE_FILE_OFFSET64


198 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

200 #ifde‡
__REDIRECT


201 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

202 
__off64_t
 
__Àn
),

203 
posix_ÁŒoˇã64
);

205 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

208 #ifde‡
__USE_LARGEFILE64


209 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

213 
__END_DECLS


	@/usr/include/inttypes.h

23 #i‚de‡
_INTTYPES_H


24 
	#_INTTYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<°döt.h
>

31 #i‚de‡
____gwch¨_t_deföed


32 #ifde‡
__˝lu•lus


33 
	#__gwch¨_t
 
wch¨_t


	)

34 #ñi‡
deföed
 
__WCHAR_TYPE__


35 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

37 
	#__√ed_wch¨_t


	)

38 
	~<°ddef.h
>

39 
wch¨_t
 
	t__gwch¨_t
;

41 
	#____gwch¨_t_deföed
 1

	)

47 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_FORMAT_MACROS


49 #i‡
__WORDSIZE
 == 64

50 
	#__PRI64_PREFIX
 "l"

	)

51 
	#__PRIPTR_PREFIX
 "l"

	)

53 
	#__PRI64_PREFIX
 "Œ"

	)

54 
	#__PRIPTR_PREFIX


	)

60 
	#PRId8
 "d"

	)

61 
	#PRId16
 "d"

	)

62 
	#PRId32
 "d"

	)

63 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

65 
	#PRIdLEAST8
 "d"

	)

66 
	#PRIdLEAST16
 "d"

	)

67 
	#PRIdLEAST32
 "d"

	)

68 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIdFAST8
 "d"

	)

71 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

72 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

73 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

76 
	#PRIi8
 "i"

	)

77 
	#PRIi16
 "i"

	)

78 
	#PRIi32
 "i"

	)

79 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

81 
	#PRIiLEAST8
 "i"

	)

82 
	#PRIiLEAST16
 "i"

	)

83 
	#PRIiLEAST32
 "i"

	)

84 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIiFAST8
 "i"

	)

87 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

88 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

89 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

92 
	#PRIo8
 "o"

	)

93 
	#PRIo16
 "o"

	)

94 
	#PRIo32
 "o"

	)

95 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

97 
	#PRIoLEAST8
 "o"

	)

98 
	#PRIoLEAST16
 "o"

	)

99 
	#PRIoLEAST32
 "o"

	)

100 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIoFAST8
 "o"

	)

103 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

104 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

105 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

108 
	#PRIu8
 "u"

	)

109 
	#PRIu16
 "u"

	)

110 
	#PRIu32
 "u"

	)

111 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

113 
	#PRIuLEAST8
 "u"

	)

114 
	#PRIuLEAST16
 "u"

	)

115 
	#PRIuLEAST32
 "u"

	)

116 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIuFAST8
 "u"

	)

119 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

120 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

121 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

124 
	#PRIx8
 "x"

	)

125 
	#PRIx16
 "x"

	)

126 
	#PRIx32
 "x"

	)

127 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

129 
	#PRIxLEAST8
 "x"

	)

130 
	#PRIxLEAST16
 "x"

	)

131 
	#PRIxLEAST32
 "x"

	)

132 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIxFAST8
 "x"

	)

135 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

136 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

137 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

140 
	#PRIX8
 "X"

	)

141 
	#PRIX16
 "X"

	)

142 
	#PRIX32
 "X"

	)

143 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

145 
	#PRIXLEAST8
 "X"

	)

146 
	#PRIXLEAST16
 "X"

	)

147 
	#PRIXLEAST32
 "X"

	)

148 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

150 
	#PRIXFAST8
 "X"

	)

151 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

152 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

153 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

157 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

158 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

159 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

160 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

161 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

162 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

166 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

167 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

168 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

169 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

170 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

171 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

177 
	#SCNd8
 "hhd"

	)

178 
	#SCNd16
 "hd"

	)

179 
	#SCNd32
 "d"

	)

180 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

182 
	#SCNdLEAST8
 "hhd"

	)

183 
	#SCNdLEAST16
 "hd"

	)

184 
	#SCNdLEAST32
 "d"

	)

185 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNdFAST8
 "hhd"

	)

188 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

189 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

190 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

193 
	#SCNi8
 "hhi"

	)

194 
	#SCNi16
 "hi"

	)

195 
	#SCNi32
 "i"

	)

196 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

198 
	#SCNiLEAST8
 "hhi"

	)

199 
	#SCNiLEAST16
 "hi"

	)

200 
	#SCNiLEAST32
 "i"

	)

201 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNiFAST8
 "hhi"

	)

204 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

205 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

206 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

209 
	#SCNu8
 "hhu"

	)

210 
	#SCNu16
 "hu"

	)

211 
	#SCNu32
 "u"

	)

212 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

214 
	#SCNuLEAST8
 "hhu"

	)

215 
	#SCNuLEAST16
 "hu"

	)

216 
	#SCNuLEAST32
 "u"

	)

217 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNuFAST8
 "hhu"

	)

220 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

221 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

222 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

225 
	#SCNo8
 "hho"

	)

226 
	#SCNo16
 "ho"

	)

227 
	#SCNo32
 "o"

	)

228 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

230 
	#SCNoLEAST8
 "hho"

	)

231 
	#SCNoLEAST16
 "ho"

	)

232 
	#SCNoLEAST32
 "o"

	)

233 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNoFAST8
 "hho"

	)

236 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

237 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

238 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

241 
	#SCNx8
 "hhx"

	)

242 
	#SCNx16
 "hx"

	)

243 
	#SCNx32
 "x"

	)

244 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

246 
	#SCNxLEAST8
 "hhx"

	)

247 
	#SCNxLEAST16
 "hx"

	)

248 
	#SCNxLEAST32
 "x"

	)

249 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

251 
	#SCNxFAST8
 "hhx"

	)

252 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

253 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

254 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

258 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

259 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

260 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

261 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

262 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

265 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

266 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

267 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

268 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

269 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

274 
	g__BEGIN_DECLS


276 #i‡
__WORDSIZE
 == 64

281 
	mquŸ
;

282 
	mªm
;

283 } 
	timaxdiv_t
;

290 
	mquŸ
;

291 
	mªm
;

292 } 
	timaxdiv_t
;

298 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

301 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

302 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

305 
ötmax_t
 
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

306 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

309 
uötmax_t
 
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

310 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

313 
ötmax_t
 
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

314 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

315 
__THROW
;

318 
uötmax_t
 
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

319 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

320 
__THROW
;

322 #ifde‡
__USE_EXTERN_INLINES


324 #i‡
__WORDSIZE
 == 64

327 #i‚de‡
__°πﬁ_öã∫Æ_deföed


328 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

329 **
__ª°ri˘
 
__íd±r
,

330 
__ba£
, 
__group
Ë
__THROW
;

331 
	#__°πﬁ_öã∫Æ_deföed
 1

	)

333 
__ölöe
 
ötmax_t


334 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

335 
ba£
))

337  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

338 
	}
}

341 #i‚de‡
__°πoul_öã∫Æ_deföed


342 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *

343 
__ª°ri˘
 
__≈å
,

344 ** 
__ª°ri˘
 
__íd±r
,

345 
__ba£
, 
__group
Ë
__THROW
;

346 
	#__°πoul_öã∫Æ_deföed
 1

	)

348 
__ölöe
 
uötmax_t


349 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

350 
ba£
))

352  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

353 
	}
}

356 #i‚de‡
__wc°ﬁ_öã∫Æ_deföed


357 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

358 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

359 
__ba£
, 
__group
Ë
__THROW
;

360 
	#__wc°ﬁ_öã∫Æ_deföed
 1

	)

362 
__ölöe
 
ötmax_t


363 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

364 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

366  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

367 
	}
}

371 #i‚de‡
__wc°oul_öã∫Æ_deföed


372 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

373 
__ª°ri˘
 
__≈å
,

374 
__gwch¨_t
 **

375 
__ª°ri˘
 
__íd±r
,

376 
__ba£
, 
__group
Ë
__THROW
;

377 
	#__wc°oul_öã∫Æ_deföed
 1

	)

379 
__ölöe
 
uötmax_t


380 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

381 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

383  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

384 
	}
}

389 #i‚de‡
__°πﬁl_öã∫Æ_deföed


390 
__exãnsi⁄__


391 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

392 **
__ª°ri˘
 
__íd±r
,

393 
__ba£
, 
__group
Ë
__THROW
;

394 
	#__°πﬁl_öã∫Æ_deföed
 1

	)

396 
__ölöe
 
ötmax_t


397 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

398 
ba£
))

400  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

401 
	}
}

404 #i‚de‡
__°πouŒ_öã∫Æ_deföed


405 
__exãnsi⁄__


406 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

407 
__ª°ri˘
 
__≈å
,

409 
__ª°ri˘
 
__íd±r
,

410 
__ba£
,

411 
__group
Ë
__THROW
;

412 
	#__°πouŒ_öã∫Æ_deföed
 1

	)

414 
__ölöe
 
uötmax_t


415 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

416 
ba£
))

418  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

419 
	}
}

422 #i‚de‡
__wc°ﬁl_öã∫Æ_deföed


423 
__exãnsi⁄__


424 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

425 
__ª°ri˘
 
__≈å
,

426 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

427 
__ba£
, 
__group
Ë
__THROW
;

428 
	#__wc°ﬁl_öã∫Æ_deföed
 1

	)

430 
__ölöe
 
ötmax_t


431 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

432 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

434  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

435 
	}
}

439 #i‚de‡
__wc°ouŒ_öã∫Æ_deföed


440 
__exãnsi⁄__


441 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

442 
__ª°ri˘
 
__≈å
,

443 
__gwch¨_t
 **

444 
__ª°ri˘
 
__íd±r
,

445 
__ba£
,

446 
__group
Ë
__THROW
;

447 
	#__wc°ouŒ_öã∫Æ_deföed
 1

	)

449 
__ölöe
 
uötmax_t


450 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

451 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

453  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

454 
	}
}

459 
__END_DECLS


	@/usr/include/libintl.h

21 #i‚de‡
_LIBINTL_H


22 
	#_LIBINTL_H
 1

	)

24 
	~<„©uªs.h
>

28 
	#__USE_GNU_GETTEXT
 1

	)

32 
	#__GNU_GETTEXT_SUPPORTED_REVISION
(
maj‹
) \

33 ((
maj‹
Ë=0 ? 1 : -1)

	)

35 
__BEGIN_DECLS


40 *
	$gëãxt
 (
__c⁄°
 *
__msgid
)

41 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (1);

45 *
	$dgëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid
)

46 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

47 *
	$__dgëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid
)

48 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

52 *
	$dcgëãxt
 (
__c⁄°
 *
__domaö«me
,

53 
__c⁄°
 *
__msgid
, 
__ˇãg‹y
)

54 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

55 *
	$__dcgëãxt
 (
__c⁄°
 *
__domaö«me
,

56 
__c⁄°
 *
__msgid
, 
__ˇãg‹y
)

57 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

62 *
	$ngëãxt
 (
__c⁄°
 *
__msgid1
, __c⁄° *
__msgid2
,

63 
__n
)

64 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (1Ë
	`__©åibuã_f‹m©_¨g__
 (2);

68 *
	$dngëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid1
,

69 
__c⁄°
 *
__msgid2
, 
__n
)

70 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

74 *
	$d˙gëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid1
,

75 
__c⁄°
 *
__msgid2
, 
__n
,

76 
__ˇãg‹y
)

77 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

83 *
	$ãxtdomaö
 (
__c⁄°
 *
__domaö«me
Ë
__THROW
;

87 *
	$bödãxtdomaö
 (
__c⁄°
 *
__domaö«me
,

88 
__c⁄°
 *
__dú«me
Ë
__THROW
;

92 *
	$böd_ãxtdomaö_code£t
 (
__c⁄°
 *
__domaö«me
,

93 
__c⁄°
 *
__code£t
Ë
__THROW
;

97 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


100 
	#__√ed_NULL


	)

101 
	~<°ddef.h
>

104 
	~<loˇÀ.h
>

110 
	#gëãxt
(
msgid
Ë
	`dgëãxt
 (
NULL
, msgid)

	)

112 
	#dgëãxt
(
domaö«me
, 
msgid
) \

113 
	`dcgëãxt
 (
domaö«me
, 
msgid
, 
LC_MESSAGES
)

	)

115 
	#ngëãxt
(
msgid1
, 
msgid2
, 
n
Ë
	`dngëãxt
 (
NULL
, msgid1, msgid2,Ç)

	)

117 
	#dngëãxt
(
domaö«me
, 
msgid1
, 
msgid2
, 
n
) \

118 
	`d˙gëãxt
 (
domaö«me
, 
msgid1
, 
msgid2
, 
n
, 
LC_MESSAGES
)

	)

122 
__END_DECLS


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/locale.h

23 #i‚def 
_LOCALE_H


24 
	#_LOCALE_H
 1

	)

26 
	~<„©uªs.h
>

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

30 
	~<bôs/loˇÀ.h
>

32 
	g__BEGIN_DECLS


36 
	#LC_CTYPE
 
__LC_CTYPE


	)

37 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

38 
	#LC_TIME
 
__LC_TIME


	)

39 
	#LC_COLLATE
 
__LC_COLLATE


	)

40 
	#LC_MONETARY
 
__LC_MONETARY


	)

41 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

42 
	#LC_ALL
 
__LC_ALL


	)

43 
	#LC_PAPER
 
__LC_PAPER


	)

44 
	#LC_NAME
 
__LC_NAME


	)

45 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

46 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

47 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

48 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

52 
	slc⁄v


56 *
	mdecimÆ_poöt
;

57 *
	mthoußnds_£p
;

63 *
	mgroupög
;

69 *
	möt_cuº_symbﬁ
;

70 *
	mcuºícy_symbﬁ
;

71 *
	mm⁄_decimÆ_poöt
;

72 *
	mm⁄_thoußnds_£p
;

73 *
	mm⁄_groupög
;

74 *
	mposôive_sign
;

75 *
	m√g©ive_sign
;

76 
	möt_‰ac_digôs
;

77 
	m‰ac_digôs
;

79 
	mp_cs_¥e˚des
;

81 
	mp_£p_by_•a˚
;

83 
	mn_cs_¥e˚des
;

85 
	mn_£p_by_•a˚
;

92 
	mp_sign_po¢
;

93 
	mn_sign_po¢
;

94 #ifde‡
__USE_ISOC99


96 
	möt_p_cs_¥e˚des
;

98 
	möt_p_£p_by_•a˚
;

100 
	möt_n_cs_¥e˚des
;

102 
	möt_n_£p_by_•a˚
;

109 
	möt_p_sign_po¢
;

110 
	möt_n_sign_po¢
;

112 
	m__öt_p_cs_¥e˚des
;

113 
	m__öt_p_£p_by_•a˚
;

114 
	m__öt_n_cs_¥e˚des
;

115 
	m__öt_n_£p_by_•a˚
;

116 
	m__öt_p_sign_po¢
;

117 
	m__öt_n_sign_po¢
;

122 
__BEGIN_NAMESPACE_STD


125 *
	$£éoˇÀ
 (
__ˇãg‹y
, 
__c⁄°
 *
__loˇÀ
Ë
__THROW
;

128 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

130 
__END_NAMESPACE_STD


133 #ifdef 
__USE_GNU


146 
	~<xloˇÀ.h
>

148 
__loˇÀ_t
 
	tloˇÀ_t
;

154 
__loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, 
__c⁄°
 *
__loˇÀ
,

155 
__loˇÀ_t
 
__ba£
Ë
__THROW
;

161 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

162 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

163 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

164 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

165 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

166 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

167 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

168 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

169 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

170 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

171 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

172 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

173 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

174 | 
LC_NUMERIC_MASK
 \

175 | 
LC_TIME_MASK
 \

176 | 
LC_COLLATE_MASK
 \

177 | 
LC_MONETARY_MASK
 \

178 | 
LC_MESSAGES_MASK
 \

179 | 
LC_PAPER_MASK
 \

180 | 
LC_NAME_MASK
 \

181 | 
LC_ADDRESS_MASK
 \

182 | 
LC_TELEPHONE_MASK
 \

183 | 
LC_MEASUREMENT_MASK
 \

184 | 
LC_IDENTIFICATION_MASK
 \

185 )

	)

189 
__loˇÀ_t
 
	$du∂oˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

193 
	$‰ìloˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

200 
__loˇÀ_t
 
	$u£loˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

204 
	#LC_GLOBAL_LOCALE
 ((
__loˇÀ_t
Ë-1L)

	)

208 
__END_DECLS


	@/usr/include/regex.h

22 #i‚de‡
_REGEX_H


23 
	#_REGEX_H
 1

	)

25 
	~<sys/ty≥s.h
>

28 #ifde‡
__˝lu•lus


35 #i‡!
deföed
 
_POSIX_C_SOURCE
 && !deföed 
_POSIX_SOURCE
 && deföed 
VMS


38 
	~<°ddef.h
>

45 
	ts_ªg_t
;

46 
	ta˘ive_ªg_t
;

53 
	tªg_sy¡ax_t
;

57 
	#RE_BACKSLASH_ESCAPE_IN_LISTS
 ((Ë1)

	)

62 
	#RE_BK_PLUS_QM
 (
RE_BACKSLASH_ESCAPE_IN_LISTS
 << 1)

	)

68 
	#RE_CHAR_CLASSES
 (
RE_BK_PLUS_QM
 << 1)

	)

82 
	#RE_CONTEXT_INDEP_ANCHORS
 (
RE_CHAR_CLASSES
 << 1)

	)

90 
	#RE_CONTEXT_INDEP_OPS
 (
RE_CONTEXT_INDEP_ANCHORS
 << 1)

	)

94 
	#RE_CONTEXT_INVALID_OPS
 (
RE_CONTEXT_INDEP_OPS
 << 1)

	)

98 
	#RE_DOT_NEWLINE
 (
RE_CONTEXT_INVALID_OPS
 << 1)

	)

102 
	#RE_DOT_NOT_NULL
 (
RE_DOT_NEWLINE
 << 1)

	)

106 
	#RE_HAT_LISTS_NOT_NEWLINE
 (
RE_DOT_NOT_NULL
 << 1)

	)

111 
	#RE_INTERVALS
 (
RE_HAT_LISTS_NOT_NEWLINE
 << 1)

	)

115 
	#RE_LIMITED_OPS
 (
RE_INTERVALS
 << 1)

	)

119 
	#RE_NEWLINE_ALT
 (
RE_LIMITED_OPS
 << 1)

	)

124 
	#RE_NO_BK_BRACES
 (
RE_NEWLINE_ALT
 << 1)

	)

128 
	#RE_NO_BK_PARENS
 (
RE_NO_BK_BRACES
 << 1)

	)

132 
	#RE_NO_BK_REFS
 (
RE_NO_BK_PARENS
 << 1)

	)

136 
	#RE_NO_BK_VBAR
 (
RE_NO_BK_REFS
 << 1)

	)

142 
	#RE_NO_EMPTY_RANGES
 (
RE_NO_BK_VBAR
 << 1)

	)

146 
	#RE_UNMATCHED_RIGHT_PAREN_ORD
 (
RE_NO_EMPTY_RANGES
 << 1)

	)

150 
	#RE_NO_POSIX_BACKTRACKING
 (
RE_UNMATCHED_RIGHT_PAREN_ORD
 << 1)

	)

154 
	#RE_NO_GNU_OPS
 (
RE_NO_POSIX_BACKTRACKING
 << 1)

	)

162 
	#RE_DEBUG
 (
RE_NO_GNU_OPS
 << 1)

	)

167 
	#RE_INVALID_INTERVAL_ORD
 (
RE_DEBUG
 << 1)

	)

171 
	#RE_ICASE
 (
RE_INVALID_INTERVAL_ORD
 << 1)

	)

176 
	#RE_CARET_ANCHORS_HERE
 (
RE_ICASE
 << 1)

	)

180 
	#RE_CONTEXT_INVALID_DUP
 (
RE_CARET_ANCHORS_HERE
 << 1)

	)

184 
	#RE_NO_SUB
 (
RE_CONTEXT_INVALID_DUP
 << 1)

	)

190 
ªg_sy¡ax_t
 
ª_sy¡ax_›ti⁄s
;

196 
	#RE_SYNTAX_EMACS
 0

	)

198 
	#RE_SYNTAX_AWK
 \

199 (
RE_BACKSLASH_ESCAPE_IN_LISTS
 | 
RE_DOT_NOT_NULL
 \

200 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_REFS
 \

201 | 
RE_NO_BK_VBAR
 | 
RE_NO_EMPTY_RANGES
 \

202 | 
RE_DOT_NEWLINE
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

203 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
 | 
RE_NO_GNU_OPS
)

	)

205 
	#RE_SYNTAX_GNU_AWK
 \

206 ((
RE_SYNTAX_POSIX_EXTENDED
 | 
RE_BACKSLASH_ESCAPE_IN_LISTS
 | 
RE_DEBUG
) \

207 & ~(
RE_DOT_NOT_NULL
 | 
RE_INTERVALS
 | 
RE_CONTEXT_INDEP_OPS
 \

208 | 
RE_CONTEXT_INVALID_OPS
 ))

	)

210 
	#RE_SYNTAX_POSIX_AWK
 \

211 (
RE_SYNTAX_POSIX_EXTENDED
 | 
RE_BACKSLASH_ESCAPE_IN_LISTS
 \

212 | 
RE_INTERVALS
 | 
RE_NO_GNU_OPS
)

	)

214 
	#RE_SYNTAX_GREP
 \

215 (
RE_BK_PLUS_QM
 | 
RE_CHAR_CLASSES
 \

216 | 
RE_HAT_LISTS_NOT_NEWLINE
 | 
RE_INTERVALS
 \

217 | 
RE_NEWLINE_ALT
)

	)

219 
	#RE_SYNTAX_EGREP
 \

220 (
RE_CHAR_CLASSES
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

221 | 
RE_CONTEXT_INDEP_OPS
 | 
RE_HAT_LISTS_NOT_NEWLINE
 \

222 | 
RE_NEWLINE_ALT
 | 
RE_NO_BK_PARENS
 \

223 | 
RE_NO_BK_VBAR
)

	)

225 
	#RE_SYNTAX_POSIX_EGREP
 \

226 (
RE_SYNTAX_EGREP
 | 
RE_INTERVALS
 | 
RE_NO_BK_BRACES
 \

227 | 
RE_INVALID_INTERVAL_ORD
)

	)

230 
	#RE_SYNTAX_ED
 
RE_SYNTAX_POSIX_BASIC


	)

232 
	#RE_SYNTAX_SED
 
RE_SYNTAX_POSIX_BASIC


	)

235 
	#_RE_SYNTAX_POSIX_COMMON
 \

236 (
RE_CHAR_CLASSES
 | 
RE_DOT_NEWLINE
 | 
RE_DOT_NOT_NULL
 \

237 | 
RE_INTERVALS
 | 
RE_NO_EMPTY_RANGES
)

	)

239 
	#RE_SYNTAX_POSIX_BASIC
 \

240 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_BK_PLUS_QM
 | 
RE_CONTEXT_INVALID_DUP
)

	)

245 
	#RE_SYNTAX_POSIX_MINIMAL_BASIC
 \

246 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_LIMITED_OPS
)

	)

248 
	#RE_SYNTAX_POSIX_EXTENDED
 \

249 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

250 | 
RE_CONTEXT_INDEP_OPS
 | 
RE_NO_BK_BRACES
 \

251 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_VBAR
 \

252 | 
RE_CONTEXT_INVALID_OPS
 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
)

	)

256 
	#RE_SYNTAX_POSIX_MINIMAL_EXTENDED
 \

257 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

258 | 
RE_CONTEXT_INVALID_OPS
 | 
RE_NO_BK_BRACES
 \

259 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_REFS
 \

260 | 
RE_NO_BK_VBAR
 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
)

	)

266 #ifde‡
RE_DUP_MAX


267 #unde‡
RE_DUP_MAX


270 
	#RE_DUP_MAX
 (0x7fff)

	)

277 
	#REG_EXTENDED
 1

	)

281 
	#REG_ICASE
 (
REG_EXTENDED
 << 1)

	)

286 
	#REG_NEWLINE
 (
REG_ICASE
 << 1)

	)

290 
	#REG_NOSUB
 (
REG_NEWLINE
 << 1)

	)

300 
	#REG_NOTBOL
 1

	)

303 
	#REG_NOTEOL
 (1 << 1)

	)

307 
	#REG_STARTEND
 (1 << 2)

	)

314 #ifde‡
_XOPEN_SOURCE


315 
	gREG_ENOSYS
 = -1,

318 
	gREG_NOERROR
 = 0,

319 
	gREG_NOMATCH
,

323 
	gREG_BADPAT
,

324 
	gREG_ECOLLATE
,

325 
	gREG_ECTYPE
,

326 
	gREG_EESCAPE
,

327 
	gREG_ESUBREG
,

328 
	gREG_EBRACK
,

329 
	gREG_EPAREN
,

330 
	gREG_EBRACE
,

331 
	gREG_BADBR
,

332 
	gREG_ERANGE
,

333 
	gREG_ESPACE
,

334 
	gREG_BADRPT
,

337 
	gREG_EEND
,

338 
	gREG_ESIZE
,

339 
	gREG_ERPAREN


340 } 
	tªg_îrcode_t
;

348 #i‚de‡
RE_TRANSLATE_TYPE


349 
	#RE_TRANSLATE_TYPE
 *

	)

352 
	sª_∑âîn_buf„r


357 *
	gbuf„r
;

360 
	gÆloˇãd
;

363 
	gu£d
;

366 
ªg_sy¡ax_t
 
	gsy¡ax
;

371 *
	gÁ°m≠
;

377 
RE_TRANSLATE_TYPE
 
	gå™¶©e
;

380 
size_t
 
	gª_nsub
;

386 
	gˇn_be_nuŒ
 : 1;

392 
	#REGS_UNALLOCATED
 0

	)

393 
	#REGS_REALLOCATE
 1

	)

394 
	#REGS_FIXED
 2

	)

395 
	gªgs_Æloˇãd
 : 2;

399 
	gÁ°m≠_accuøã
 : 1;

403 
	gno_sub
 : 1;

407 
	gnŸ_bﬁ
 : 1;

410 
	gnŸ_eﬁ
 : 1;

413 
	g√wlöe_™ch‹
 : 1;

416 
ª_∑âîn_buf„r
 
	tªgex_t
;

419 
	tªgoff_t
;

424 
	sª_ªgi°îs


426 
	gnum_ªgs
;

427 
ªgoff_t
 *
	g°¨t
;

428 
ªgoff_t
 *
	gíd
;

435 #i‚de‡
RE_NREGS


436 
	#RE_NREGS
 30

	)

445 
ªgoff_t
 
	grm_so
;

446 
ªgoff_t
 
	grm_eo
;

447 } 
	tªgm©ch_t
;

453 
ªg_sy¡ax_t
 
ª_£t_sy¡ax
 (ªg_sy¡ax_à
__sy¡ax
);

458 c⁄° *
ª_compûe_∑âîn
 (c⁄° *
__∑âîn
, 
size_t
 
__Àngth
,

459 
ª_∑âîn_buf„r
 *
__buf„r
);

465 
ª_compûe_Á°m≠
 (
ª_∑âîn_buf„r
 *
__buf„r
);

473 
ª_£¨ch
 (
ª_∑âîn_buf„r
 *
__buf„r
, c⁄° *
__°rög
,

474 
__Àngth
, 
__°¨t
, 
__ønge
,

475 
ª_ªgi°îs
 *
__ªgs
);

480 
ª_£¨ch_2
 (
ª_∑âîn_buf„r
 *
__buf„r
,

481 c⁄° *
__°rög1
, 
__Àngth1
,

482 c⁄° *
__°rög2
, 
__Àngth2
, 
__°¨t
,

483 
__ønge
, 
ª_ªgi°îs
 *
__ªgs
, 
__°›
);

488 
ª_m©ch
 (
ª_∑âîn_buf„r
 *
__buf„r
, c⁄° *
__°rög
,

489 
__Àngth
, 
__°¨t
, 
ª_ªgi°îs
 *
__ªgs
);

493 
ª_m©ch_2
 (
ª_∑âîn_buf„r
 *
__buf„r
,

494 c⁄° *
__°rög1
, 
__Àngth1
,

495 c⁄° *
__°rög2
, 
__Àngth2
, 
__°¨t
,

496 
ª_ªgi°îs
 *
__ªgs
, 
__°›
);

511 
ª_£t_ªgi°îs
 (
ª_∑âîn_buf„r
 *
__buf„r
,

512 
ª_ªgi°îs
 *
__ªgs
,

513 
__num_ªgs
,

514 
ªgoff_t
 *
__°¨ts
,Ñegoff_à*
__íds
);

516 #i‡
deföed
 
_REGEX_RE_COMP
 || deföed 
_LIBC


517 #i‚de‡
_CRAY


519 *
ª_comp
 (const *);

520 
ª_exec
 (const *);

526 #i‚de‡
__ª°ri˘


527 #i‡! (2 < 
__GNUC__
 || (2 =__GNUC__ && 95 <
__GNUC_MINOR__
))

528 #i‡
deföed
 
ª°ri˘
 || 199901L <
__STDC_VERSION__


529 
	#__ª°ri˘
 
ª°ri˘


	)

531 
	#__ª°ri˘


	)

536 #i‚de‡
__ª°ri˘_¨r


537 #i‡
__GNUC__
 > 3 || (__GNUC__ =3 && 
__GNUC_MINOR__
 >= 1)

538 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

540 
	#__ª°ri˘_¨r


	)

545 
ªgcomp
 (
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

546 c⁄° *
__ª°ri˘
 
__∑âîn
,

547 
__cÊags
);

549 
ªgexec
 (c⁄° 
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

550 c⁄° *
__ª°ri˘
 
__°rög
, 
size_t
 
__nm©ch
,

551 
ªgm©ch_t
 
__pm©ch
[
__ª°ri˘_¨r
],

552 
__eÊags
);

554 
size_t
 
ªgîr‹
 (
__îrcode
, c⁄° 
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

555 *
__ª°ri˘
 
__îrbuf
, 
size_t
 
__îrbuf_size
);

557 
ªg‰ì
 (
ªgex_t
 *
__¥eg
);

560 #ifde‡
__˝lu•lus


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

75 (*
	t__sigh™dÀr_t
) ();

80 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

81 
__THROW
;

82 #ifde‡
__USE_GNU


83 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

84 
__THROW
;

90 
__BEGIN_NAMESPACE_STD


91 #ifde‡
__USE_BSD


92 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

96 #ifde‡
__REDIRECT_NTH


97 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

98 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

99 
__sysv_sig«l
);

101 
	#sig«l
 
__sysv_sig«l


	)

104 
__END_NAMESPACE_STD


106 #ifde‡
__USE_XOPEN


109 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

110 
__THROW
;

116 #ifde‡
__USE_POSIX


117 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

120 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


124 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

127 
__BEGIN_NAMESPACE_STD


129 
	$øi£
 (
__sig
Ë
__THROW
;

130 
__END_NAMESPACE_STD


132 #ifde‡
__USE_SVID


134 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

135 
__THROW
;

136 
	$gsig«l
 (
__sig
Ë
__THROW
;

139 #ifde‡
__USE_MISC


141 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

155 #ifde‡
__FAVOR_BSD


158 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

160 #ifde‡
__USE_XOPEN


161 #ifde‡
__GNUC__


162 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

165 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

171 #ifde‡
__USE_BSD


178 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

181 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

184 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

187 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

191 #ifde‡
__USE_MISC


192 
	#NSIG
 
_NSIG


	)

195 #ifde‡
__USE_GNU


196 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

200 #ifde‡
__USE_BSD


201 
__sigh™dÀr_t
 
	tsig_t
;

204 #ifde‡
__USE_POSIX


206 #ifde‡
__USE_POSIX199309


208 
	#__√ed_time•ec


	)

209 
	~<time.h
>

212 
	~<bôs/sigöfo.h
>

216 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

229 
__THROW
 
	`__n⁄nuŒ
 ((1));

231 #ifde‡
__USE_GNU


233 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

236 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

237 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

240 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

241 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	~<bôs/siga˘i⁄.h
>

249 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

250 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

257 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

260 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

261 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

264 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

271 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 #ifde‡
__USE_POSIX199309


279 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

280 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

287 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

288 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

289 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

290 
	`__n⁄nuŒ
 ((1));

294 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

295 
__THROW
;

300 #ifde‡
__USE_BSD


304 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

305 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

308 
	ssigvec


310 
__sigh™dÀr_t
 
sv_h™dÀr
;

311 
sv_mask
;

313 
sv_Êags
;

314 
	#sv_⁄°ack
 
sv_Êags


	)

318 
	#SV_ONSTACK
 (1 << 0)

	)

319 
	#SV_INTERRUPT
 (1 << 1)

	)

320 
	#SV_RESETHAND
 (1 << 2)

	)

328 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

329 
sigvec
 *
__ovec
Ë
__THROW
;

333 
	~<bôs/sigc⁄ãxt.h
>

336 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

341 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


346 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

348 
	~<bôs/sig°ack.h
>

349 #ifde‡
__USE_XOPEN


351 
	~<sys/uc⁄ãxt.h
>

357 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

358 
__THROW
 
__©åibuã_dïªˇãd__
;

362 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

363 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

367 #ifde‡
__USE_XOPEN_EXTENDED


371 
	$sighﬁd
 (
__sig
Ë
__THROW
;

374 
	$sigªl£
 (
__sig
Ë
__THROW
;

377 
	$sigign‹e
 (
__sig
Ë
__THROW
;

380 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

383 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


386 
	~<bôs/±hªadty≥s.h
>

387 
	~<bôs/sigthªad.h
>

394 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

396 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

400 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
__BEGIN_NAMESPACE_STD


46 
_IO_FILE
 
	tFILE
;

47 
	g__END_NAMESPACE_STD


48 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

49 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

50 || 
deföed
 
__USE_POSIX2


51 
	$__USING_NAMESPACE_STD
(
FILE
)

54 
	#__FILE_deföed
 1

	)

56 #unde‡
__√ed_FILE


59 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


62 
_IO_FILE
 
	t__FILE
;

64 
	#____FILE_deföed
 1

	)

66 #unde‡
__√ed___FILE


69 #ifdef 
_STDIO_H


70 
	#_STDIO_USES_IOSTREAM


	)

72 
	~<libio.h
>

74 #ifde‡
__USE_XOPEN


75 #ifde‡
__GNUC__


76 #i‚de‡
_VA_LIST_DEFINED


77 
_G_va_li°
 
	tva_li°
;

78 
	#_VA_LIST_DEFINED


	)

81 
	~<°d¨g.h
>

86 
__BEGIN_NAMESPACE_STD


87 #i‚de‡
__USE_FILE_OFFSET64


88 
_G_Âos_t
 
	tÂos_t
;

90 
_G_Âos64_t
 
	tÂos_t
;

92 
__END_NAMESPACE_STD


93 #ifde‡
__USE_LARGEFILE64


94 
_G_Âos64_t
 
	tÂos64_t
;

98 
	#_IOFBF
 0

	)

99 
	#_IOLBF
 1

	)

100 
	#_IONBF
 2

	)

104 #i‚de‡
BUFSIZ


105 
	#BUFSIZ
 
_IO_BUFSIZ


	)

111 #i‚de‡
EOF


112 
	#EOF
 (-1)

	)

118 
	#SEEK_SET
 0

	)

119 
	#SEEK_CUR
 1

	)

120 
	#SEEK_END
 2

	)

123 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


125 
	#P_tmpdú
 "/tmp"

	)

138 
	~<bôs/°dio_lim.h
>

142 
_IO_FILE
 *
°dö
;

143 
_IO_FILE
 *
°dout
;

144 
_IO_FILE
 *
°dîr
;

146 
	#°dö
 
°dö


	)

147 
	#°dout
 
°dout


	)

148 
	#°dîr
 
°dîr


	)

150 
__BEGIN_NAMESPACE_STD


152 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

154 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

155 
__END_NAMESPACE_STD


157 #ifde‡
__USE_ATFILE


159 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

160 
__c⁄°
 *
__√w
Ë
__THROW
;

163 
__BEGIN_NAMESPACE_STD


168 #i‚de‡
__USE_FILE_OFFSET64


169 
FILE
 *
	`tmpfûe
 ();

171 #ifde‡
__REDIRECT


172 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
);

174 
	#tmpfûe
 
tmpfûe64


	)

178 #ifde‡
__USE_LARGEFILE64


179 
FILE
 *
	`tmpfûe64
 ();

183 *
	$tm≤am
 (*
__s
Ë
__THROW
;

184 
__END_NAMESPACE_STD


186 #ifde‡
__USE_MISC


189 *
	$tm≤am_r
 (*
__s
Ë
__THROW
;

193 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


201 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

202 
__THROW
 
__©åibuã_mÆloc__
;

206 
__BEGIN_NAMESPACE_STD


211 
	`f˛o£
 (
FILE
 *
__°ªam
);

216 
	`fÊush
 (
FILE
 *
__°ªam
);

217 
__END_NAMESPACE_STD


219 #ifde‡
__USE_MISC


226 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

229 #ifde‡
__USE_GNU


236 
	`f˛o£Æl
 ();

240 
__BEGIN_NAMESPACE_STD


241 #i‚de‡
__USE_FILE_OFFSET64


246 
FILE
 *
	`f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

247 
__c⁄°
 *
__ª°ri˘
 
__modes
);

252 
FILE
 *
	`‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

253 
__c⁄°
 *
__ª°ri˘
 
__modes
,

254 
FILE
 *
__ª°ri˘
 
__°ªam
);

256 #ifde‡
__REDIRECT


257 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

258 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
);

259 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

260 
__c⁄°
 *
__ª°ri˘
 
__modes
,

261 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
);

263 
	#f›í
 
f›í64


	)

264 
	#‰e›í
 
‰e›í64


	)

267 
__END_NAMESPACE_STD


268 #ifde‡
__USE_LARGEFILE64


269 
FILE
 *
	`f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

270 
__c⁄°
 *
__ª°ri˘
 
__modes
);

271 
FILE
 *
	`‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

272 
__c⁄°
 *
__ª°ri˘
 
__modes
,

273 
FILE
 *
__ª°ri˘
 
__°ªam
);

276 #ifdef 
__USE_POSIX


278 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
;

281 #ifdef 
__USE_GNU


284 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

285 
__c⁄°
 *
__ª°ri˘
 
__modes
,

286 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
;

289 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
Ë
__THROW
;

294 
FILE
 *
	$›í_mem°ªam
 (**
__ª°ri˘
 
__buÊoc
,

295 
size_t
 *
__ª°ri˘
 
__sizñoc
Ë
__THROW
;

299 
FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__ª°ri˘
 
__buÊoc
,

300 
size_t
 *
__ª°ri˘
 
__sizñoc
Ë
__THROW
;

304 
__BEGIN_NAMESPACE_STD


307 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

311 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

312 
__modes
, 
size_t
 
__n
Ë
__THROW
;

313 
__END_NAMESPACE_STD


315 #ifdef 
__USE_BSD


318 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

319 
size_t
 
__size
Ë
__THROW
;

322 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

326 
__BEGIN_NAMESPACE_STD


331 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

332 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

337 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

339 
	$•rötf
 (*
__ª°ri˘
 
__s
,

340 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

346 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

347 
_G_va_li°
 
__¨g
);

352 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

354 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

355 
_G_va_li°
 
__¨g
Ë
__THROW
;

356 
__END_NAMESPACE_STD


358 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


359 
__BEGIN_NAMESPACE_C99


361 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

362 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

363 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

365 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

366 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

367 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

368 
__END_NAMESPACE_C99


371 #ifde‡
__USE_GNU


374 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

375 
_G_va_li°
 
__¨g
)

376 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

377 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

378 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

379 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

380 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

381 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

382 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

390 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

391 
_G_va_li°
 
__¨g
)

392 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

393 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

394 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

398 
__BEGIN_NAMESPACE_STD


403 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

404 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

409 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

411 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

412 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

413 
__END_NAMESPACE_STD


415 #ifdef 
__USE_ISOC99


416 
__BEGIN_NAMESPACE_C99


421 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

422 
_G_va_li°
 
__¨g
)

423 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

429 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

430 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

433 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

434 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

435 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

436 
__END_NAMESPACE_C99


440 
__BEGIN_NAMESPACE_STD


445 
	`fgëc
 (
FILE
 *
__°ªam
);

446 
	`gëc
 (
FILE
 *
__°ªam
);

452 
	`gëch¨
 ();

453 
__END_NAMESPACE_STD


457 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

459 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


464 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

465 
	`gëch¨_u∆ocked
 ();

468 #ifde‡
__USE_MISC


475 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

479 
__BEGIN_NAMESPACE_STD


487 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

488 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

494 
	`putch¨
 (
__c
);

495 
__END_NAMESPACE_STD


499 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

501 #ifde‡
__USE_MISC


508 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

511 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


516 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

517 
	`putch¨_u∆ocked
 (
__c
);

521 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

522 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

524 
	`gëw
 (
FILE
 *
__°ªam
);

527 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

531 
__BEGIN_NAMESPACE_STD


536 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

537 
__wur
;

544 *
	$gës
 (*
__s
Ë
__wur
;

545 
__END_NAMESPACE_STD


547 #ifde‡
__USE_GNU


554 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

555 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

559 #ifdef 
__USE_GNU


570 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

571 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

572 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

573 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

574 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

575 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

583 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

584 
size_t
 *
__ª°ri˘
 
__n
,

585 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

589 
__BEGIN_NAMESPACE_STD


594 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

600 
	`puts
 (
__c⁄°
 *
__s
);

607 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

614 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

615 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

620 
size_t
 
	$fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

621 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
Ë
__wur
;

622 
__END_NAMESPACE_STD


624 #ifde‡
__USE_GNU


631 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

632 
FILE
 *
__ª°ri˘
 
__°ªam
);

635 #ifde‡
__USE_MISC


642 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

643 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

644 
size_t
 
	$fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

645 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

649 
__BEGIN_NAMESPACE_STD


654 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

659 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

664 
	`ªwöd
 (
FILE
 *
__°ªam
);

665 
__END_NAMESPACE_STD


672 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


673 #i‚de‡
__USE_FILE_OFFSET64


678 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

683 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

685 #ifde‡
__REDIRECT


686 
	`__REDIRECT
 (
f£eko
,

687 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

688 
f£eko64
);

689 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

691 
	#f£eko
 
f£eko64


	)

692 
	#·ñlo
 
·ñlo64


	)

697 
__BEGIN_NAMESPACE_STD


698 #i‚de‡
__USE_FILE_OFFSET64


703 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

708 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

710 #ifde‡
__REDIRECT


711 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

712 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

713 
	`__REDIRECT
 (
f£ços
,

714 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

716 
	#fgëpos
 
fgëpos64


	)

717 
	#f£ços
 
f£ços64


	)

720 
__END_NAMESPACE_STD


722 #ifde‡
__USE_LARGEFILE64


723 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

724 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

725 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

726 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

729 
__BEGIN_NAMESPACE_STD


731 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

733 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

735 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

736 
__END_NAMESPACE_STD


738 #ifde‡
__USE_MISC


740 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

741 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

742 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

746 
__BEGIN_NAMESPACE_STD


751 
	`≥º‹
 (
__c⁄°
 *
__s
);

752 
__END_NAMESPACE_STD


758 
	~<bôs/sys_îæi°.h
>

761 #ifdef 
__USE_POSIX


763 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

766 #ifde‡
__USE_MISC


768 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

772 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

773 
deföed
 
__USE_MISC
)

778 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

784 
	`p˛o£
 (
FILE
 *
__°ªam
);

788 #ifdef 
__USE_POSIX


790 *
	$˘îmid
 (*
__s
Ë
__THROW
;

794 #ifde‡
__USE_XOPEN


796 *
	`cu£rid
 (*
__s
);

800 #ifdef 
__USE_GNU


801 
ob°ack
;

804 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

805 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

806 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

807 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

808 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

809 
_G_va_li°
 
__¨gs
)

810 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

814 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


818 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

822 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

825 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


832 
	#__√ed_gë›t


	)

833 
	~<gë›t.h
>

838 #ifde‡
__USE_EXTERN_INLINES


839 
	~<bôs/°dio.h
>

841 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


842 
	~<bôs/°dio2.h
>

844 #ifde‡
__LDBL_COMPAT


845 
	~<bôs/°dio-ldbl.h
>

848 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 ({ uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; } 
__u
; \

53 
__u
.
__ö
 = (
°©us
); __u.
__i
; }))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
(
	`__WAIT_INT
(°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
(
	`__WAIT_INT
(°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
(
	`__WAIT_INT
(°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
(
	`__WAIT_INT
(°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
(
	`__WAIT_INT
(°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
(
	`__WAIT_INT
(°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
(
	`__WAIT_INT
(°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

279 
	$__°πod_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

280 **
__ª°ri˘
 
__íd±r
, 
__group
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

282 
	$__°πof_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

283 **
__ª°ri˘
 
__íd±r
, 
__group
)

284 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

285 
	$__°πﬁd_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

286 **
__ª°ri˘
 
__íd±r
,

287 
__group
)

288 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

289 #i‚de‡
__°πﬁ_öã∫Æ_deföed


290 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

291 **
__ª°ri˘
 
__íd±r
,

292 
__ba£
, 
__group
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

294 
	#__°πﬁ_öã∫Æ_deföed
 1

	)

296 #i‚de‡
__°πoul_öã∫Æ_deföed


297 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
,

299 
__ba£
, 
__group
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

301 
	#__°πoul_öã∫Æ_deföed
 1

	)

303 #i‡
deföed
 
__GNUC__
 || deföed 
__USE_ISOC99


304 #i‚de‡
__°πﬁl_öã∫Æ_deföed


305 
__exãnsi⁄__


306 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

307 **
__ª°ri˘
 
__íd±r
,

308 
__ba£
, 
__group
)

309 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

310 
	#__°πﬁl_öã∫Æ_deföed
 1

	)

312 #i‚de‡
__°πouŒ_öã∫Æ_deföed


313 
__exãnsi⁄__


314 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

315 
__ª°ri˘
 
__≈å
,

316 **
__ª°ri˘
 
__íd±r
,

317 
__ba£
, 
__group
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 
	#__°πouŒ_öã∫Æ_deföed
 1

	)

323 #ifde‡
__USE_EXTERN_INLINES


326 
__BEGIN_NAMESPACE_STD


327 
__ölöe
 

328 
	`__NTH
 (
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
))

330  
	`__°πod_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

331 
	}
}

332 
__ölöe
 

333 
__NTH
 (
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

334 
__ba£
))

336  
	`__°πﬁ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

337 
	}
}

338 
__ölöe
 

339 
__NTH
 (
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

340 
__ba£
))

342  
	`__°πoul_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

343 
	}
}

344 
__END_NAMESPACE_STD


346 #ifde‡
__USE_ISOC99


347 
__BEGIN_NAMESPACE_C99


348 
__ölöe
 

349 
__NTH
 (
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
))

351  
	`__°πof_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

352 
	}
}

353 #i‚de‡
__LDBL_COMPAT


354 
__ölöe
 

355 
__NTH
 (
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
))

357  
	`__°πﬁd_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

358 
	}
}

360 
__END_NAMESPACE_C99


363 #ifde‡
__USE_BSD


364 
__exãnsi⁄__
 
__ölöe
 

365 
__NTH
 (
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

366 
__ba£
))

368  
	`__°πﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

369 
	}
}

370 
__exãnsi⁄__
 
__ölöe
 

371 
__NTH
 (
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

372 
__ba£
))

374  
	`__°πouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

375 
	}
}

378 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


379 
__BEGIN_NAMESPACE_C99


380 
__exãnsi⁄__
 
__ölöe
 

381 
__NTH
 (
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

382 
__ba£
))

384  
	`__°πﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

385 
	}
}

386 
__exãnsi⁄__
 
__ölöe
 

387 
__NTH
 (
	$°πouŒ
 (
__c⁄°
 * 
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

388 
__ba£
))

390  
	`__°πouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

391 
	}
}

392 
__END_NAMESPACE_C99


395 
__BEGIN_NAMESPACE_STD


396 
__ölöe
 

397 
__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

399  
	`°πod
 (
__≈å
, (**Ë
NULL
);

400 
	}
}

401 
__ölöe
 

402 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

404  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

405 
	}
}

406 
__ölöe
 

407 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

409  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

410 
	}
}

411 
__END_NAMESPACE_STD


413 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


414 
__BEGIN_NAMESPACE_C99


415 
__exãnsi⁄__
 
__ölöe
 

416 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

418  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

419 
	}
}

420 
__END_NAMESPACE_C99


425 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


429 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

432 
	$a64l
 (
__c⁄°
 *
__s
)

433 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

437 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


438 
	~<sys/ty≥s.h
>

445 
	$øndom
 (Ë
__THROW
;

448 
	$§™dom
 (
__£ed
Ë
__THROW
;

454 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

455 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

459 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 #ifde‡
__USE_MISC


467 
	søndom_d©a


469 
öt32_t
 *
Âå
;

470 
öt32_t
 *
Ωå
;

471 
öt32_t
 *
°©e
;

472 
ønd_ty≥
;

473 
ønd_deg
;

474 
ønd_£p
;

475 
öt32_t
 *
íd_±r
;

478 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

479 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

481 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

482 
__THROW
 
	`__n⁄nuŒ
 ((2));

484 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

485 
size_t
 
__°©ñí
,

486 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

487 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

489 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

490 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

491 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

496 
__BEGIN_NAMESPACE_STD


498 
	$ønd
 (Ë
__THROW
;

500 
	$§™d
 (
__£ed
Ë
__THROW
;

501 
__END_NAMESPACE_STD


503 #ifde‡
__USE_POSIX


505 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

509 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


513 
	$dønd48
 (Ë
__THROW
;

514 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

517 
	$Ã™d48
 (Ë
__THROW
;

518 
	$ƒ™d48
 (
__xsubi
[3])

519 
__THROW
 
	`__n⁄nuŒ
 ((1));

522 
	$mønd48
 (Ë
__THROW
;

523 
	$jønd48
 (
__xsubi
[3])

524 
__THROW
 
	`__n⁄nuŒ
 ((1));

527 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

528 *
	$£ed48
 (
__£ed16v
[3])

529 
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

532 #ifde‡
__USE_MISC


536 
	sdønd48_d©a


538 
__x
[3];

539 
__ﬁd_x
[3];

540 
__c
;

541 
__öô
;

542 
__a
;

546 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

547 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

548 
	$î™d48_r
 (
__xsubi
[3],

549 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

550 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

553 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

554 *
__ª°ri˘
 
__ªsu…
)

555 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

556 
	$ƒ™d48_r
 (
__xsubi
[3],

557 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

558 *
__ª°ri˘
 
__ªsu…
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

563 *
__ª°ri˘
 
__ªsu…
)

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

565 
	$jønd48_r
 (
__xsubi
[3],

566 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

567 *
__ª°ri˘
 
__ªsu…
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

572 
__THROW
 
	`__n⁄nuŒ
 ((2));

574 
	$£ed48_r
 (
__£ed16v
[3],

575 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 
	$lc⁄g48_r
 (
__∑øm
[7],

578 
dønd48_d©a
 *
__buf„r
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

585 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


586 
	#__mÆloc_™d_ˇŒoc_deföed


	)

587 
__BEGIN_NAMESPACE_STD


589 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

591 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

592 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

593 
__END_NAMESPACE_STD


596 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


597 
__BEGIN_NAMESPACE_STD


600 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

601 
__THROW
 
__©åibuã_mÆloc__
 
__©åibuã_w¨n_unu£d_ªsu…__
;

603 
	$‰ì
 (*
__±r
Ë
__THROW
;

604 
__END_NAMESPACE_STD


606 #ifdef 
__USE_MISC


608 
	$c‰ì
 (*
__±r
Ë
__THROW
;

611 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


612 
	~<Æloˇ.h
>

615 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


617 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

620 #ifde‡
__USE_XOPEN2K


622 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

623 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
__BEGIN_NAMESPACE_STD


628 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

632 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

633 
__END_NAMESPACE_STD


635 #ifdef 
__USE_MISC


638 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

639 
__THROW
 
	`__n⁄nuŒ
 ((1));

642 
__BEGIN_NAMESPACE_STD


646 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

647 
__END_NAMESPACE_STD


649 #ifde‡
__USE_ISOC99


650 
__BEGIN_NAMESPACE_C99


653 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

654 
__END_NAMESPACE_C99


658 
__BEGIN_NAMESPACE_STD


660 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

661 
__END_NAMESPACE_STD


665 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

666 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

668 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


672 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

675 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


678 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

679 
__THROW
 
	`__n⁄nuŒ
 ((2));

682 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

685 #ifdef 
__USE_MISC


689 
	$˛óªnv
 (Ë
__THROW
;

693 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


698 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

708 #i‚de‡
__USE_FILE_OFFSET64


709 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 #ifde‡
__REDIRECT


712 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

713 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

715 
	#mk°emp
 
mk°emp64


	)

718 #ifde‡
__USE_LARGEFILE64


719 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

723 #ifde‡
__USE_BSD


729 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

733 
__BEGIN_NAMESPACE_STD


738 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

739 
__END_NAMESPACE_STD


742 #ifdef 
__USE_GNU


746 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

747 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

750 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


757 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

758 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

763 #i‚de‡
__COMPAR_FN_T


764 
	#__COMPAR_FN_T


	)

765 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

767 #ifdef 
__USE_GNU


768 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

772 
__BEGIN_NAMESPACE_STD


775 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

776 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

777 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

781 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

782 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

786 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

788 
__END_NAMESPACE_STD


790 #ifde‡
__USE_ISOC99


791 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

792 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__BEGIN_NAMESPACE_STD


800 
div_t
 
	$div
 (
__numî
, 
__díom
)

801 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

802 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

803 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

804 
__END_NAMESPACE_STD


806 #ifde‡
__USE_ISOC99


807 
__BEGIN_NAMESPACE_C99


808 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

809 
__díom
)

810 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

811 
__END_NAMESPACE_C99


815 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


822 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

823 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

828 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

829 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

834 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

835 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 #ifde‡
__USE_MISC


840 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

841 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

842 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

843 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

844 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

845 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

846 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

847 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

852 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

853 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

854 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

855 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

856 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

857 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

859 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

860 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

861 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

862 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

863 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

864 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

865 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

866 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

871 
__BEGIN_NAMESPACE_STD


874 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

877 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

878 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

881 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

885 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

886 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

888 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

889 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

890 
__THROW
;

891 
__END_NAMESPACE_STD


894 #ifde‡
__USE_SVID


899 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

903 #ifde‡
__USE_XOPEN_EXTENDED


910 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

911 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

912 **
__ª°ri˘
 
__vÆuï
)

913 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

917 #ifde‡
__USE_XOPEN


919 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

925 #ifde‡
__USE_XOPEN2K


927 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

930 #ifde‡
__USE_XOPEN


935 
	$gø¡±
 (
__fd
Ë
__THROW
;

939 
	$u∆ock±
 (
__fd
Ë
__THROW
;

944 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

947 #ifde‡
__USE_GNU


951 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

952 
__THROW
 
	`__n⁄nuŒ
 ((2));

955 
	`gë±
 ();

958 #ifde‡
__USE_BSD


962 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

963 
__THROW
 
	`__n⁄nuŒ
 ((1));

968 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


969 
	~<bôs/°dlib.h
>

971 #ifde‡
__LDBL_COMPAT


972 
	~<bôs/°dlib-ldbl.h
>

976 #unde‡
__√ed_mÆloc_™d_ˇŒoc


978 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 
__BEGIN_NAMESPACE_STD


38 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

39 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

40 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

43 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

44 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

45 
__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


51 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

52 
__c
, 
size_t
 
__n
)

53 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

57 
__BEGIN_NAMESPACE_STD


59 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

62 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

63 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

66 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

67 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

68 
__END_NAMESPACE_STD


70 #ifde‡
__USE_GNU


73 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

74 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

82 
__BEGIN_NAMESPACE_STD


84 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

85 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

87 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

88 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

89 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

92 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

93 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

95 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

96 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

99 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

100 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

102 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

103 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

106 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

109 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

110 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

111 
__THROW
 
	`__n⁄nuŒ
 ((2));

112 
__END_NAMESPACE_STD


114 #ifde‡
__USE_GNU


118 
	~<xloˇÀ.h
>

121 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

124 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

125 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

128 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


130 *
	$°rdup
 (
__c⁄°
 *
__s
)

131 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

137 #i‡
deföed
 
__USE_GNU


138 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

139 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

142 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


144 
	#°rdu∑
(
s
) \

145 (
__exãnsi⁄__
 \

147 
__c⁄°
 *
__ﬁd
 = (
s
); \

148 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

149 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

150 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

151 
	}
}))

	)

154 
	#°∫du∑
(
s
, 
n
) \

155 (
__exãnsi⁄__
 \

157 
__c⁄°
 *
__ﬁd
 = (
s
); \

158 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

159 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

160 
__√w
[
__Àn
] = '\0'; \

161 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

162 }))

	)

165 
__BEGIN_NAMESPACE_STD


167 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

168 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

170 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

171 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

172 
__END_NAMESPACE_STD


174 #ifde‡
__USE_GNU


177 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

178 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

181 
__BEGIN_NAMESPACE_STD


184 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

185 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

188 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

189 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

191 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

192 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

194 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

195 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

199 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

200 
__THROW
 
	`__n⁄nuŒ
 ((2));

201 
__END_NAMESPACE_STD


205 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

206 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

207 **
__ª°ri˘
 
__ßve_±r
)

208 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

209 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


210 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

211 **
__ª°ri˘
 
__ßve_±r
)

212 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

215 #ifde‡
__USE_GNU


217 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

218 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

221 #ifde‡
__USE_GNU


225 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

226 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

227 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

231 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

232 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

233 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

234 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

235 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

236 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

240 
__BEGIN_NAMESPACE_STD


242 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

243 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__END_NAMESPACE_STD


246 #ifdef 
__USE_GNU


249 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

250 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

254 
__BEGIN_NAMESPACE_STD


256 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

257 
__END_NAMESPACE_STD


258 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


266 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


269 #ifde‡
__REDIRECT_NTH


270 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

271 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

272 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

274 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

275 
__THROW
 
	`__n⁄nuŒ
 ((2));

276 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

281 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

282 
__THROW
 
	`__n⁄nuŒ
 ((2));

288 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_BSD


292 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

296 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

299 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

300 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

303 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

304 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

307 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

308 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

312 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

316 #ifdef 
__USE_GNU


317 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

318 #ifde‡
__GNUC__


319 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

320 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

325 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

326 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

329 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

330 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

333 #ifdef 
__USE_GNU


336 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

337 
__loˇÀ_t
 
__loc
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

340 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

341 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

345 #ifdef 
__USE_BSD


348 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

349 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

350 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

353 #ifdef 
__USE_GNU


355 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

356 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

359 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

362 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

363 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

364 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

365 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

369 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

370 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

373 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

377 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

380 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

382 #i‚de‡
ba£«me


387 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

392 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

393 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

394 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


414 
	~<bôs/°rög.h
>

417 
	~<bôs/°rög2.h
>

420 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


422 
	~<bôs/°rög3.h
>

426 
__END_DECLS


	@/usr/include/sys/ioctl.h

19 #i‚def 
_SYS_IOCTL_H


20 
	#_SYS_IOCTL_H
 1

	)

22 
	~<„©uªs.h
>

24 
	g__BEGIN_DECLS


27 
	~<bôs/io˘ls.h
>

30 
	~<bôs/io˘l-ty≥s.h
>

37 
	~<sys/âydeÁu…s.h
>

42 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

44 
__END_DECLS


	@/usr/include/sys/stat.h

23 #i‚def 
_SYS_STAT_H


24 
	#_SYS_STAT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_MISC


31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


32 
	#__√ed_time_t


	)

34 #ifde‡
__USE_MISC


35 
	#__√ed_time•ec


	)

37 
	~<time.h
>

40 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


43 #i‚de‡
__dev_t_deföed


44 
__dev_t
 
	tdev_t
;

45 
	#__dev_t_deföed


	)

48 #i‚de‡
__gid_t_deföed


49 
__gid_t
 
	tgid_t
;

50 
	#__gid_t_deföed


	)

53 #i‚de‡
__öo_t_deföed


54 #i‚de‡
__USE_FILE_OFFSET64


55 
__öo_t
 
	töo_t
;

57 
__öo64_t
 
	töo_t
;

59 
	#__öo_t_deföed


	)

62 #i‚de‡
__mode_t_deföed


63 
__mode_t
 
	tmode_t
;

64 
	#__mode_t_deföed


	)

67 #i‚de‡
__∆ök_t_deföed


68 
__∆ök_t
 
	t∆ök_t
;

69 
	#__∆ök_t_deföed


	)

72 #i‚de‡
__off_t_deföed


73 #i‚de‡
__USE_FILE_OFFSET64


74 
__off_t
 
	toff_t
;

76 
__off64_t
 
	toff_t
;

78 
	#__off_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

87 #ifde‡
__USE_UNIX98


88 #i‚de‡
__blk˙t_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__blk˙t_t
 
	tblk˙t_t
;

92 
__blk˙t64_t
 
	tblk˙t_t
;

94 
	#__blk˙t_t_deföed


	)

97 #i‚de‡
__blksize_t_deföed


98 
__blksize_t
 
	tblksize_t
;

99 
	#__blksize_t_deföed


	)

103 
	g__BEGIN_DECLS


105 
	~<bôs/°©.h
>

107 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


108 
	#S_IFMT
 
__S_IFMT


	)

109 
	#S_IFDIR
 
__S_IFDIR


	)

110 
	#S_IFCHR
 
__S_IFCHR


	)

111 
	#S_IFBLK
 
__S_IFBLK


	)

112 
	#S_IFREG
 
__S_IFREG


	)

113 #ifde‡
__S_IFIFO


114 
	#S_IFIFO
 
__S_IFIFO


	)

116 #ifde‡
__S_IFLNK


117 
	#S_IFLNK
 
__S_IFLNK


	)

119 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

120 && 
deföed
 
	g__S_IFSOCK


121 
	#S_IFSOCK
 
__S_IFSOCK


	)

127 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

129 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

130 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

131 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

132 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

133 #ifde‡
__S_IFIFO


134 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

136 #ifde‡
__S_IFLNK


137 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

140 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


141 
	#S_ISLNK
(
mode
Ë0

	)

144 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
) \

145 && 
deföed
 
	g__S_IFSOCK


146 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

153 #ifdef 
__USE_POSIX199309


154 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

155 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

156 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

162 
	#S_ISUID
 
__S_ISUID


	)

163 
	#S_ISGID
 
__S_ISGID


	)

165 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


167 
	#S_ISVTX
 
__S_ISVTX


	)

170 
	#S_IRUSR
 
__S_IREAD


	)

171 
	#S_IWUSR
 
__S_IWRITE


	)

172 
	#S_IXUSR
 
__S_IEXEC


	)

174 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

176 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


177 
	#S_IREAD
 
S_IRUSR


	)

178 
	#S_IWRITE
 
S_IWUSR


	)

179 
	#S_IEXEC
 
S_IXUSR


	)

182 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

183 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

184 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

186 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

188 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

189 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

190 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

192 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

195 #ifdef 
__USE_BSD


197 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

198 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

199 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

201 
	#S_BLKSIZE
 512

	)

205 #i‚de‡
__USE_FILE_OFFSET64


207 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

208 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

212 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

214 #ifde‡
__REDIRECT_NTH


215 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

216 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

217 
	`__n⁄nuŒ
 ((1, 2));

218 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

219 
	`__n⁄nuŒ
 ((2));

221 
	#°©
 
°©64


	)

222 
	#f°©
 
f°©64


	)

225 #ifde‡
__USE_LARGEFILE64


226 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

227 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

228 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

231 #ifde‡
__USE_ATFILE


235 #i‚de‡
__USE_FILE_OFFSET64


236 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

237 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

238 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

240 #ifde‡
__REDIRECT_NTH


241 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

242 
°©
 *
__ª°ri˘
 
__buf
,

243 
__Êag
),

244 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

246 
	#f°©©
 
f°©©64


	)

250 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

251 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

252 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

255 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


256 #i‚de‡
__USE_FILE_OFFSET64


259 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

260 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

262 #ifde‡
__REDIRECT_NTH


263 
	`__REDIRECT_NTH
 (
l°©
,

264 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

265 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

266 
	`__n⁄nuŒ
 ((1, 2));

268 
	#l°©
 
l°©64


	)

271 #ifde‡
__USE_LARGEFILE64


272 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

273 
°©64
 *
__ª°ri˘
 
__buf
)

274 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

280 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1));

283 #ifde‡
__USE_BSD


287 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

288 
__THROW
 
	`__n⁄nuŒ
 ((1));

292 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


293 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

296 #ifde‡
__USE_ATFILE


299 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
mode
, 
__Êag
)

300 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

307 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

309 #ifdef 
__USE_GNU


312 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

316 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

317 
__THROW
 
	`__n⁄nuŒ
 ((1));

319 #ifde‡
__USE_ATFILE


323 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

324 
__THROW
 
	`__n⁄nuŒ
 ((2));

330 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


331 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

332 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 #ifde‡
__USE_ATFILE


339 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

340 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

345 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

346 
__THROW
 
	`__n⁄nuŒ
 ((1));

348 #ifde‡
__USE_ATFILE


352 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

353 
__THROW
 
	`__n⁄nuŒ
 ((2));

371 #i‚de‡
_STAT_VER


372 
	#_STAT_VER
 0

	)

374 #i‚de‡
_MKNOD_VER


375 
	#_MKNOD_VER
 0

	)

379 #i‚de‡
__USE_FILE_OFFSET64


380 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

381 
__THROW
 
	`__n⁄nuŒ
 ((3));

382 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

383 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

384 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

385 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

386 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

387 
°©
 *
__°©_buf
, 
__Êag
)

388 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

390 #ifde‡
__REDIRECT_NTH


391 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

392 
°©
 *
__°©_buf
), 
__fx°©64
)

393 
	`__n⁄nuŒ
 ((3));

394 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

395 
°©
 *
__°©_buf
), 
__x°©64
)

396 
	`__n⁄nuŒ
 ((2, 3));

397 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

398 
°©
 *
__°©_buf
), 
__lx°©64
)

399 
	`__n⁄nuŒ
 ((2, 3));

400 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

401 
__c⁄°
 *
__fûíame
,

402 
°©
 *
__°©_buf
, 
__Êag
),

403 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

406 
	#__fx°©
 
__fx°©64


	)

407 
	#__x°©
 
__x°©64


	)

408 
	#__lx°©
 
__lx°©64


	)

412 #ifde‡
__USE_LARGEFILE64


413 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

414 
__THROW
 
	`__n⁄nuŒ
 ((3));

415 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

416 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

417 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

418 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

419 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

420 
°©64
 *
__°©_buf
, 
__Êag
)

421 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

423 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

424 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

426 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

427 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

428 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

430 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

433 
__ölöe__
 

434 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

436  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

437 
	}
}

439 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


440 
__ölöe__
 

441 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

443  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

444 
	}
}

447 
__ölöe__
 

448 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

450  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

451 
	}
}

453 #ifde‡
__USE_ATFILE


454 
__ölöe__
 

455 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

456 
__Êag
))

458  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

459 
	}
}

462 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


463 
__ölöe__
 

464 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

466  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

467 
	}
}

470 #ifde‡
__USE_ATFILE


471 
__ölöe__
 

472 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

473 
__dev_t
 
__dev
))

475  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

476 
	}
}

479 #i‡
deföed
 
__USE_LARGEFILE64
 \

480 && (! 
deföed
 
__USE_FILE_OFFSET64
 \

481 || (
deföed
 
__REDIRECT_NTH
 && deföed 
__OPTIMIZE__
))

482 
__ölöe__
 

483 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

485  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

486 
	}
}

488 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


489 
__ölöe__
 

490 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

492  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

493 
	}
}

496 
__ölöe__
 

497 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

499  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

500 
	}
}

502 #ifde‡
__USE_GNU


503 
__ölöe__
 

504 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

505 
__Êag
))

507  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

508 
	}
}

515 
__END_DECLS


	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/sys/utsname.h

23 #i‚def 
_SYS_UTSNAME_H


24 
	#_SYS_UTSNAME_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ut¢ame.h
>

32 #i‚de‡
_UTSNAME_SYSNAME_LENGTH


33 
	#_UTSNAME_SYSNAME_LENGTH
 
_UTSNAME_LENGTH


	)

35 #i‚de‡
_UTSNAME_NODENAME_LENGTH


36 
	#_UTSNAME_NODENAME_LENGTH
 
_UTSNAME_LENGTH


	)

38 #i‚de‡
_UTSNAME_RELEASE_LENGTH


39 
	#_UTSNAME_RELEASE_LENGTH
 
_UTSNAME_LENGTH


	)

41 #i‚de‡
_UTSNAME_VERSION_LENGTH


42 
	#_UTSNAME_VERSION_LENGTH
 
_UTSNAME_LENGTH


	)

44 #i‚de‡
_UTSNAME_MACHINE_LENGTH


45 
	#_UTSNAME_MACHINE_LENGTH
 
_UTSNAME_LENGTH


	)

49 
	sut¢ame


52 
	msy¢ame
[
_UTSNAME_SYSNAME_LENGTH
];

55 
	mnodíame
[
_UTSNAME_NODENAME_LENGTH
];

58 
	mªÀa£
[
_UTSNAME_RELEASE_LENGTH
];

60 
	mvîsi⁄
[
_UTSNAME_VERSION_LENGTH
];

63 
	mmachöe
[
_UTSNAME_MACHINE_LENGTH
];

65 #i‡
_UTSNAME_DOMAIN_LENGTH
 - 0

67 #ifde‡
__USE_GNU


68 
	mdomaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

70 
	m__domaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

75 #ifde‡
__USE_SVID


77 
	#SYS_NMLN
 
_UTSNAME_LENGTH


	)

82 
	$u«me
 (
ut¢ame
 *
__«me
Ë
__THROW
;

85 
__END_DECLS


	@/usr/include/sys/wait.h

24 #i‚def 
_SYS_WAIT_H


25 
	#_SYS_WAIT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<sig«l.h
>

32 
	~<sys/ªsour˚.h
>

35 #i‡!
deföed
 
_STDLIB_H
 || !deföed 
__USE_XOPEN


38 
	~<bôs/waôÊags.h
>

40 #ifdef 
__USE_BSD


45 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


46 
	#__WAIT_INT
(
°©us
) \

47 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

48 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

50 
	#__WAIT_INT
(
°©us
Ë(*(
__c⁄°
 *Ë&(°©us))

	)

58 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


59 
	#__WAIT_STATUS
 *

	)

60 
	#__WAIT_STATUS_DEFN
 *

	)

65 
waô
 *
	m__u±r
;

66 *
	m__ùå
;

67 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

68 
	#__WAIT_STATUS_DEFN
 *

	)

73 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

74 
	#__WAIT_STATUS
 *

	)

75 
	#__WAIT_STATUS_DEFN
 *

	)

80 
	~<bôs/waô°©us.h
>

82 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
(
	`__WAIT_INT
(°©us))

	)

83 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
(
	`__WAIT_INT
(°©us))

	)

84 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
(
	`__WAIT_INT
(°©us))

	)

85 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
(
	`__WAIT_INT
(°©us))

	)

86 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
(
	`__WAIT_INT
(°©us))

	)

87 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
(
	`__WAIT_INT
(°©us))

	)

88 #ifde‡
__WIFCONTINUED


89 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
(
	`__WAIT_INT
(°©us))

	)

93 #ifdef 
__USE_BSD


94 
	#WCOREFLAG
 
__WCOREFLAG


	)

95 
	#WCOREDUMP
(
°©us
Ë
	`__WCOREDUMP
(
	`__WAIT_INT
(°©us))

	)

96 
	#W_EXITCODE
(
ªt
, 
sig
Ë
	`__W_EXITCODE
‘ë, sig)

	)

97 
	#W_STOPCODE
(
sig
Ë
	`__W_STOPCODE
(sig)

	)

101 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


104 
	mP_ALL
,

105 
	mP_PID
,

106 
	mP_PGID


107 } 
	tidty≥_t
;

116 
__pid_t
 
waô
 (
__WAIT_STATUS
 
__°©_loc
);

118 #ifdef 
__USE_BSD


120 
	#WAIT_ANY
 (-1Ë

	)

121 
	#WAIT_MYPGRP
 0

	)

139 
__pid_t
 
waôpid
 (__pid_à
__pid
, *
__°©_loc
, 
__›ti⁄s
);

141 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


142 
	#__√ed_sigöfo_t


	)

143 
	~<bôs/sigöfo.h
>

155 
waôid
 (
idty≥_t
 
__idty≥
, 
__id_t
 
__id
, 
sigöfo_t
 *
__öf›
,

156 
__›ti⁄s
);

159 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


162 
	grußge
;

169 
__pid_t
 
	$waô3
 (
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

170 
rußge
 * 
__ußge
Ë
__THROW
;

173 #ifde‡
__USE_BSD


176 
rußge
;

179 
__pid_t
 
	$waô4
 (
__pid_t
 
__pid
, 
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

180 
rußge
 *
__ußge
Ë
__THROW
;

184 
__END_DECLS


	@/usr/include/termios.h

23 #i‚def 
_TERMIOS_H


24 
	#_TERMIOS_H
 1

	)

26 
	~<„©uªs.h
>

27 #ifde‡
__USE_UNIX98


29 
	~<bôs/ty≥s.h
>

30 #i‚de‡
__pid_t_deföed


31 
__pid_t
 
	tpid_t
;

32 
	#__pid_t_deföed


	)

36 
	g__BEGIN_DECLS


40 
	~<bôs/ãrmios.h
>

42 #ifde‡
__USE_BSD


45 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

49 
•ìd_t
 
	$cfgëo•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

52 
•ìd_t
 
	$cfgëi•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

55 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

58 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

60 #ifdef 
__USE_BSD


62 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

67 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

71 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

72 
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

75 #ifdef 
__USE_BSD


77 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

81 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

87 
	`tcdøö
 (
__fd
);

91 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

95 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

98 #ifde‡
__USE_UNIX98


100 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

104 #ifde‡
__USE_BSD


105 
	~<sys/âydeÁu…s.h
>

108 
__END_DECLS


	@/usr/include/time.h

24 #i‚def 
_TIME_H


26 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

27 ! 
deföed
 
	g__√ed_time•ec
)

28 
	#_TIME_H
 1

	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 #ifdef 
_TIME_H


37 
	#__√ed_size_t


	)

38 
	#__√ed_NULL


	)

39 
	~<°ddef.h
>

43 
	~<bôs/time.h
>

46 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


47 #i‚de‡
CLK_TCK


48 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

54 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

55 
	#__˛ock_t_deföed
 1

	)

57 
	~<bôs/ty≥s.h
>

59 
__BEGIN_NAMESPACE_STD


61 
__˛ock_t
 
	t˛ock_t
;

62 
	g__END_NAMESPACE_STD


63 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


64 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

68 #unde‡
__√ed_˛ock_t


70 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

71 
	#__time_t_deföed
 1

	)

73 
	~<bôs/ty≥s.h
>

75 
__BEGIN_NAMESPACE_STD


77 
__time_t
 
	ttime_t
;

78 
__END_NAMESPACE_STD


79 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


80 
	$__USING_NAMESPACE_STD
(
time_t
)

84 #unde‡
__√ed_time_t


86 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

87 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

88 
	#__˛ockid_t_deföed
 1

	)

90 
	~<bôs/ty≥s.h
>

93 
__˛ockid_t
 
	t˛ockid_t
;

96 #unde‡
__˛ockid_time_t


98 #i‡!
deföed
 
__timî_t_deföed
 && \

99 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

100 
	#__timî_t_deföed
 1

	)

102 
	~<bôs/ty≥s.h
>

105 
__timî_t
 
	ttimî_t
;

108 #unde‡
__√ed_timî_t


111 #i‡!
deföed
 
__time•ec_deföed
 && \

112 ((
deföed
 
_TIME_H
 && \

113 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

114 
deföed
 
__√ed_time•ec
)

115 
	#__time•ec_deföed
 1

	)

117 
	~<bôs/ty≥s.h
>

121 
	stime•ec


123 
__time_t
 
tv_£c
;

124 
tv_n£c
;

128 #unde‡
__√ed_time•ec


131 #ifdef 
_TIME_H


132 
__BEGIN_NAMESPACE_STD


134 
	stm


136 
tm_£c
;

137 
tm_mö
;

138 
tm_hour
;

139 
tm_mday
;

140 
tm_m⁄
;

141 
tm_yór
;

142 
tm_wday
;

143 
tm_yday
;

144 
tm_isd°
;

146 #ifdef 
__USE_BSD


147 
tm_gmtoff
;

148 
__c⁄°
 *
tm_z⁄e
;

150 
__tm_gmtoff
;

151 
__c⁄°
 *
__tm_z⁄e
;

154 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


156 
	$__USING_NAMESPACE_STD
(
tm
)

160 #ifde‡
__USE_POSIX199309


162 
	sôimî•ec


164 
time•ec
 
ô_öãrvÆ
;

165 
time•ec
 
ô_vÆue
;

169 
sigevít
;

173 #ifde‡
__USE_XOPEN2K


174 #i‚de‡
__pid_t_deföed


175 
__pid_t
 
	tpid_t
;

176 
	#__pid_t_deföed


	)

181 
__BEGIN_NAMESPACE_STD


184 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

187 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

190 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

191 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

194 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

200 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

201 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

202 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

203 
__END_NAMESPACE_STD


205 #ifde‡
__USE_XOPEN


208 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

209 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

210 
__THROW
;

213 #ifde‡
__USE_GNU


216 
	~<xloˇÀ.h
>

218 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

219 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

220 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

221 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

224 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

225 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 
__BEGIN_NAMESPACE_STD


232 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

236 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
__END_NAMESPACE_STD


239 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


242 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

243 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

247 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

248 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

251 
__BEGIN_NAMESPACE_STD


254 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

257 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

258 
__END_NAMESPACE_STD


260 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


265 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

266 *
__ª°ri˘
 
__buf
Ë
__THROW
;

269 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

270 *
__ª°ri˘
 
__buf
Ë
__THROW
;

275 *
__tz«me
[2];

276 
__daylight
;

277 
__timez⁄e
;

280 #ifdef 
__USE_POSIX


282 *
tz«me
[2];

286 
	$tz£t
 (Ë
__THROW
;

289 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


290 
daylight
;

291 
timez⁄e
;

294 #ifde‡
__USE_SVID


297 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

303 
	#__i¶óp
(
yór
) \

304 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

307 #ifde‡
__USE_MISC


312 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

315 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

318 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

322 #ifde‡
__USE_POSIX199309


327 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

328 
time•ec
 *
__ªmaöög
);

332 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

335 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

338 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

339 
__THROW
;

341 #ifde‡
__USE_XOPEN2K


346 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

347 
__c⁄°
 
time•ec
 *
__ªq
,

348 
time•ec
 *
__ªm
);

351 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

356 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

357 
sigevít
 *
__ª°ri˘
 
__evp
,

358 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

361 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

364 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

365 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

366 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

369 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

370 
__THROW
;

373 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

377 #ifde‡
__USE_XOPEN_EXTENDED


389 
gëd©e_îr
;

398 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

401 #ifde‡
__USE_GNU


412 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

413 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

416 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


34 
	#_POSIX_VERSION
 200112L

	)

40 
	#_POSIX2_VERSION
 200112L

	)

44 
	#_POSIX2_C_BIND
 200112L

	)

48 
	#_POSIX2_C_DEV
 200112L

	)

52 
	#_POSIX2_SW_DEV
 200112L

	)

56 
	#_POSIX2_LOCALEDEF
 200112L

	)

59 #ifde‡
__USE_UNIX98


60 
	#_XOPEN_VERSION
 500

	)

62 
	#_XOPEN_VERSION
 4

	)

66 
	#_XOPEN_XCU_VERSION
 4

	)

69 
	#_XOPEN_XPG2
 1

	)

70 
	#_XOPEN_XPG3
 1

	)

71 
	#_XOPEN_XPG4
 1

	)

74 
	#_XOPEN_UNIX
 1

	)

77 
	#_XOPEN_CRYPT
 1

	)

81 
	#_XOPEN_ENH_I18N
 1

	)

84 
	#_XOPEN_LEGACY
 1

	)

171 
	~<bôs/posix_›t.h
>

174 #ifde‡
__USE_UNIX98


175 
	~<bôs/ívú⁄míts.h
>

179 
	#STDIN_FILENO
 0

	)

180 
	#STDOUT_FILENO
 1

	)

181 
	#STDERR_FILENO
 2

	)

186 
	~<bôs/ty≥s.h
>

188 #i‚def 
__ssize_t_deföed


189 
__ssize_t
 
	tssize_t
;

190 
	#__ssize_t_deföed


	)

193 
	#__√ed_size_t


	)

194 
	#__√ed_NULL


	)

195 
	~<°ddef.h
>

197 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


200 #i‚de‡
__gid_t_deföed


201 
__gid_t
 
	tgid_t
;

202 
	#__gid_t_deföed


	)

205 #i‚de‡
__uid_t_deföed


206 
__uid_t
 
	tuid_t
;

207 
	#__uid_t_deföed


	)

210 #i‚de‡
__off_t_deföed


211 #i‚de‡
__USE_FILE_OFFSET64


212 
__off_t
 
	toff_t
;

214 
__off64_t
 
	toff_t
;

216 
	#__off_t_deföed


	)

218 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


219 
__off64_t
 
	toff64_t
;

220 
	#__off64_t_deföed


	)

223 #i‚de‡
__u£c⁄ds_t_deföed


224 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

225 
	#__u£c⁄ds_t_deföed


	)

228 #i‚de‡
__pid_t_deföed


229 
__pid_t
 
	tpid_t
;

230 
	#__pid_t_deföed


	)

234 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


235 #i‚de‡
__öçå_t_deföed


236 
__öçå_t
 
	töçå_t
;

237 
	#__öçå_t_deföed


	)

241 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


242 #i‚de‡
__sockÀn_t_deföed


243 
__sockÀn_t
 
	tsockÀn_t
;

244 
	#__sockÀn_t_deföed


	)

250 
	#R_OK
 4

	)

251 
	#W_OK
 2

	)

252 
	#X_OK
 1

	)

253 
	#F_OK
 0

	)

256 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

258 #ifde‡
__USE_GNU


261 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1));

265 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1));

269 #ifde‡
__USE_ATFILE


273 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

274 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

279 #i‚def 
_STDIO_H


280 
	#SEEK_SET
 0

	)

281 
	#SEEK_CUR
 1

	)

282 
	#SEEK_END
 2

	)

285 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


287 
	#L_SET
 
SEEK_SET


	)

288 
	#L_INCR
 
SEEK_CUR


	)

289 
	#L_XTND
 
SEEK_END


	)

298 #i‚de‡
__USE_FILE_OFFSET64


299 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

301 #ifde‡
__REDIRECT_NTH


302 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

303 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

304 
l£ek64
);

306 
	#l£ek
 
l£ek64


	)

309 #ifde‡
__USE_LARGEFILE64


310 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

311 
__THROW
;

318 
	`˛o£
 (
__fd
);

325 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

331 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

333 #ifde‡
__USE_UNIX98


334 #i‚de‡
__USE_FILE_OFFSET64


341 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

342 
__off_t
 
__off£t
Ë
__wur
;

349 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

350 
__off_t
 
__off£t
Ë
__wur
;

352 #ifde‡
__REDIRECT


353 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

354 
__off64_t
 
__off£t
),

355 
¥ód64
Ë
__wur
;

356 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

357 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

358 
pwrôe64
Ë
__wur
;

360 
	#¥ód
 
¥ód64


	)

361 
	#pwrôe
 
pwrôe64


	)

365 #ifde‡
__USE_LARGEFILE64


369 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

370 
__off64_t
 
__off£t
Ë
__wur
;

373 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

374 
__off64_t
 
__off£t
Ë
__wur
;

382 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

391 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

403 
	`¶ìp
 (
__£c⁄ds
);

405 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


410 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

411 
__THROW
;

418 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

427 
	`∑u£
 ();

431 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

434 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


436 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

441 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

442 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

446 #ifde‡
__USE_ATFILE


449 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

450 
__gid_t
 
__group
, 
__Êag
)

451 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

455 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

457 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


459 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

469 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

471 #ifdef 
__USE_GNU


475 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

478 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


482 *
	$gëwd
 (*
__buf
)

483 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

488 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

491 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

494 **
__ívú⁄
;

495 #ifde‡
__USE_GNU


496 **
ívú⁄
;

502 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

503 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

505 #ifde‡
__USE_GNU


508 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

509 
__THROW
;

514 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

515 
__THROW
 
	`__n⁄nuŒ
 ((1));

519 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

520 
__THROW
 
	`__n⁄nuŒ
 ((1));

524 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

525 
__THROW
 
	`__n⁄nuŒ
 ((1));

529 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

530 
__THROW
 
	`__n⁄nuŒ
 ((1));

535 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


541 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

546 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

552 
	~<bôs/c⁄‚ame.h
>

555 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

556 
__THROW
 
	`__n⁄nuŒ
 ((1));

559 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

562 
	$sysc⁄f
 (
__«me
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

564 #ifdef 
__USE_POSIX2


566 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

571 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

574 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

578 #i‚de‡
__FAVOR_BSD


579 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

581 #ifde‡
__REDIRECT_NTH


582 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

584 
	#gëpgΩ
 
__gëpgid


	)

589 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

590 #ifde‡
__USE_XOPEN_EXTENDED


591 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

598 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

600 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


611 #i‚de‡
__FAVOR_BSD


615 
	$£çgΩ
 (Ë
__THROW
;

620 #ifde‡
__REDIRECT_NTH


621 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

623 
	#£çgΩ
 
£çgid


	)

632 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

634 #ifde‡
__USE_XOPEN_EXTENDED


636 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

640 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

643 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

646 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

649 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

654 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

656 #ifdef 
__USE_GNU


658 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

665 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

667 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


670 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

673 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


675 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

682 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

684 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


687 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

690 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


692 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

695 #ifde‡
__USE_GNU


698 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

699 
__THROW
;

703 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

704 
__THROW
;

708 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

709 
__THROW
;

713 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

714 
__THROW
;

721 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

723 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


728 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

734 *
	$ây«me
 (
__fd
Ë
__THROW
;

738 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

739 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

743 
	$ißây
 (
__fd
Ë
__THROW
;

745 #i‡
deföed
 
__USE_BSD
 \

746 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

749 
	$ây¶Ÿ
 (Ë
__THROW
;

754 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

755 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

757 #ifde‡
__USE_ATFILE


760 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

761 
__c⁄°
 *
__to
, 
__Êags
)

762 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

765 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


767 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

768 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

773 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

774 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

777 #ifde‡
__USE_ATFILE


779 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

780 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

783 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

784 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

785 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

789 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

791 #ifde‡
__USE_ATFILE


793 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

794 
__THROW
 
	`__n⁄nuŒ
 ((2));

798 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

802 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

805 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

812 *
	`gëlogö
 ();

813 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_UNIX98


820 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

823 #ifdef 
__USE_BSD


825 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

829 #ifdef 
__USE_POSIX2


833 
	#__√ed_gë›t


	)

834 
	~<gë›t.h
>

838 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


842 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

846 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

849 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

850 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

854 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

860 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

861 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

862 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

863 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

869 
	$vh™gup
 (Ë
__THROW
;

872 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

880 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

881 
size_t
 
__off£t
, 
__sˇÀ
)

882 
__THROW
 
	`__n⁄nuŒ
 ((1));

888 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

892 *
	$gëu£rshñl
 (Ë
__THROW
;

893 
	$ídu£rshñl
 (Ë
__THROW
;

894 
	$£tu£rshñl
 (Ë
__THROW
;

900 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

904 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

907 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

911 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

915 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


920 
	`fsync
 (
__fd
);

924 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


927 
	`gëho°id
 ();

930 
	$sync
 (Ë
__THROW
;

935 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

940 
	$gëdèbÀsize
 (Ë
__THROW
;

944 #i‚de‡
__USE_FILE_OFFSET64


945 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

946 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

948 #ifde‡
__REDIRECT_NTH


949 
	`__REDIRECT_NTH
 (
åunˇã
,

950 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

951 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

953 
	#åunˇã
 
åunˇã64


	)

956 #ifde‡
__USE_LARGEFILE64


957 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

963 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


966 #i‚de‡
__USE_FILE_OFFSET64


967 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

969 #ifde‡
__REDIRECT_NTH


970 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

971 
·runˇã64
Ë
__wur
;

973 
	#·runˇã
 
·runˇã64


	)

976 #ifde‡
__USE_LARGEFILE64


977 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

983 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


987 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

993 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

997 #ifde‡
__USE_MISC


1008 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1013 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1025 
	#F_ULOCK
 0

	)

1026 
	#F_LOCK
 1

	)

1027 
	#F_TLOCK
 2

	)

1028 
	#F_TEST
 3

	)

1030 #i‚de‡
__USE_FILE_OFFSET64


1031 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1033 #ifde‡
__REDIRECT


1034 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1035 
lockf64
Ë
__wur
;

1037 
	#lockf
 
lockf64


	)

1040 #ifde‡
__USE_LARGEFILE64


1041 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1046 #ifde‡
__USE_GNU


1051 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1052 (
__exãnsi⁄__
 \

1053 ({ 
__ªsu…
; \

1054 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1055 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1056 
__ªsu…
; 
	}
}))

	)

1059 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1062 
	$fd©async
 (
__fûdes
Ë
__THROW
;

1068 #ifdef 
__USE_XOPEN


1070 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1071 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1075 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1082 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1083 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1089 #ifde‡
__USE_XOPEN


1091 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1096 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


1097 
	~<bôs/uni°d.h
>

1100 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS


502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

508 
	m_CS_PATH
,

509 
	#_CS_PATH
 
_CS_PATH


	)

511 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

512 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

514 
	m_CS_GNU_LIBC_VERSION
,

515 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

516 
	m_CS_GNU_LIBPTHREAD_VERSION
,

517 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

519 
	m_CS_LFS_CFLAGS
 = 1000,

520 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

521 
	m_CS_LFS_LDFLAGS
,

522 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

523 
	m_CS_LFS_LIBS
,

524 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

525 
	m_CS_LFS_LINTFLAGS
,

526 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

527 
	m_CS_LFS64_CFLAGS
,

528 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

529 
	m_CS_LFS64_LDFLAGS
,

530 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

531 
	m_CS_LFS64_LIBS
,

532 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

533 
	m_CS_LFS64_LINTFLAGS
,

534 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

536 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

537 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

538 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

539 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

540 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

541 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

542 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

543 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

544 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

545 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

546 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

547 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

548 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

549 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

550 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

551 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

552 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

553 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

554 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

555 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

556 
	m_CS_XBS5_LP64_OFF64_LIBS
,

557 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

558 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

559 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

560 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

561 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

562 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

563 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

564 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

565 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

566 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

567 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

569 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

570 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

571 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

572 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

573 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

574 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

575 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

576 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

577 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

578 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

579 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

580 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

581 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

582 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

583 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

584 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

585 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

586 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

587 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

588 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

589 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

590 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

591 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

592 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

593 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

594 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

595 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

596 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

597 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

598 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

599 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


600 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

	@/usr/include/bits/dlfcn.h

20 #i‚de‡
_DLFCN_H


25 
	#RTLD_LAZY
 0x00001

	)

26 
	#RTLD_NOW
 0x00002

	)

27 
	#RTLD_BINDING_MASK
 0x3

	)

28 
	#RTLD_NOLOAD
 0x00004

	)

29 
	#RTLD_DEEPBIND
 0x00008

	)

34 
	#RTLD_GLOBAL
 0x00100

	)

39 
	#RTLD_LOCAL
 0

	)

42 
	#RTLD_NODELETE
 0x01000

	)

44 #ifde‡
__USE_GNU


55 
	#DL_CALL_FCT
(
f˘p
, 
¨gs
) \

56 (
	`_dl_mcou¡_wøµî_check
 ((*Ë(
f˘p
)), (*(f˘p)Ë
¨gs
)

	)

58 
__BEGIN_DECLS


61 
	$_dl_mcou¡_wøµî_check
 (*
__£lÂc
Ë
__THROW
;

63 
__END_DECLS


	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

41 #i‡
__WORDSIZE
 == 64

53 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

54 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LP64_OFF64
 1

	)

58 
	#_XBS5_LP64_OFF64
 1

	)

64 
	#_POSIX_V6_ILP32_OFF32
 1

	)

65 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

66 
	#_XBS5_ILP32_OFF32
 1

	)

67 
	#_XBS5_ILP32_OFFBIG
 1

	)

82 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

83 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

84 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

85 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

86 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

87 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
__ASSEMBLER__


43 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

45 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


47 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

52 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


56 
	#EDOM
 33

	)

57 
	#EILSEQ
 84

	)

58 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

20 #i‚def 
_FCNTL_H


25 
	~<sys/ty≥s.h
>

26 
	~<bôs/w‹dsize.h
>

30 
	#O_ACCMODE
 0003

	)

31 
	#O_RDONLY
 00

	)

32 
	#O_WRONLY
 01

	)

33 
	#O_RDWR
 02

	)

34 
	#O_CREAT
 0100

	)

35 
	#O_EXCL
 0200

	)

36 
	#O_NOCTTY
 0400

	)

37 
	#O_TRUNC
 01000

	)

38 
	#O_APPEND
 02000

	)

39 
	#O_NONBLOCK
 04000

	)

40 
	#O_NDELAY
 
O_NONBLOCK


	)

41 
	#O_SYNC
 010000

	)

42 
	#O_FSYNC
 
O_SYNC


	)

43 
	#O_ASYNC
 020000

	)

45 #ifde‡
__USE_GNU


46 
	#O_DIRECT
 040000

	)

47 
	#O_DIRECTORY
 0200000

	)

48 
	#O_NOFOLLOW
 0400000

	)

49 
	#O_NOATIME
 01000000

	)

55 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


56 
	#O_DSYNC
 
O_SYNC


	)

57 
	#O_RSYNC
 
O_SYNC


	)

60 #ifde‡
__USE_LARGEFILE64


61 #i‡
__WORDSIZE
 == 64

62 
	#O_LARGEFILE
 0

	)

64 
	#O_LARGEFILE
 0100000

	)

69 
	#F_DUPFD
 0

	)

70 
	#F_GETFD
 1

	)

71 
	#F_SETFD
 2

	)

72 
	#F_GETFL
 3

	)

73 
	#F_SETFL
 4

	)

74 #i‡
__WORDSIZE
 == 64

75 
	#F_GETLK
 5

	)

76 
	#F_SETLK
 6

	)

77 
	#F_SETLKW
 7

	)

79 
	#F_GETLK64
 5

	)

80 
	#F_SETLK64
 6

	)

81 
	#F_SETLKW64
 7

	)

83 #i‚de‡
__USE_FILE_OFFSET64


84 
	#F_GETLK
 5

	)

85 
	#F_SETLK
 6

	)

86 
	#F_SETLKW
 7

	)

88 
	#F_GETLK
 
F_GETLK64


	)

89 
	#F_SETLK
 
F_SETLK64


	)

90 
	#F_SETLKW
 
F_SETLKW64


	)

92 
	#F_GETLK64
 12

	)

93 
	#F_SETLK64
 13

	)

94 
	#F_SETLKW64
 14

	)

97 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


98 
	#F_SETOWN
 8

	)

99 
	#F_GETOWN
 9

	)

102 #ifde‡
__USE_GNU


103 
	#F_SETSIG
 10

	)

104 
	#F_GETSIG
 11

	)

107 #ifde‡
__USE_GNU


108 
	#F_SETLEASE
 1024

	)

109 
	#F_GETLEASE
 1025

	)

110 
	#F_NOTIFY
 1026

	)

114 
	#FD_CLOEXEC
 1

	)

117 
	#F_RDLCK
 0

	)

118 
	#F_WRLCK
 1

	)

119 
	#F_UNLCK
 2

	)

122 
	#F_EXLCK
 4

	)

123 
	#F_SHLCK
 8

	)

125 #ifde‡
__USE_BSD


127 
	#LOCK_SH
 1

	)

128 
	#LOCK_EX
 2

	)

129 
	#LOCK_NB
 4

	)

131 
	#LOCK_UN
 8

	)

134 #ifde‡
__USE_GNU


135 
	#LOCK_MAND
 32

	)

136 
	#LOCK_READ
 64

	)

137 
	#LOCK_WRITE
 128

	)

138 
	#LOCK_RW
 192

	)

141 #ifde‡
__USE_GNU


143 
	#DN_ACCESS
 0x00000001

	)

144 
	#DN_MODIFY
 0x00000002

	)

145 
	#DN_CREATE
 0x00000004

	)

146 
	#DN_DELETE
 0x00000008

	)

147 
	#DN_RENAME
 0x00000010

	)

148 
	#DN_ATTRIB
 0x00000020

	)

149 
	#DN_MULTISHOT
 0x80000000

	)

152 
	sÊock


154 
	ml_ty≥
;

155 
	ml_whí˚
;

156 #i‚de‡
__USE_FILE_OFFSET64


157 
__off_t
 
	ml_°¨t
;

158 
__off_t
 
	ml_Àn
;

160 
__off64_t
 
	ml_°¨t
;

161 
__off64_t
 
	ml_Àn
;

163 
__pid_t
 
	ml_pid
;

166 #ifde‡
__USE_LARGEFILE64


167 
	sÊock64


169 
	ml_ty≥
;

170 
	ml_whí˚
;

171 
__off64_t
 
	ml_°¨t
;

172 
__off64_t
 
	ml_Àn
;

173 
__pid_t
 
	ml_pid
;

179 #ifdef 
__USE_BSD


180 
	#FAPPEND
 
O_APPEND


	)

181 
	#FFSYNC
 
O_FSYNC


	)

182 
	#FASYNC
 
O_ASYNC


	)

183 
	#FNONBLOCK
 
O_NONBLOCK


	)

184 
	#FNDELAY
 
O_NDELAY


	)

188 #ifde‡
__USE_XOPEN2K


189 
	#POSIX_FADV_NORMAL
 0

	)

190 
	#POSIX_FADV_RANDOM
 1

	)

191 
	#POSIX_FADV_SEQUENTIAL
 2

	)

192 
	#POSIX_FADV_WILLNEED
 3

	)

193 
	#POSIX_FADV_DONTNEED
 4

	)

194 
	#POSIX_FADV_NOREUSE
 5

	)

197 
__BEGIN_DECLS


200 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

201 
__THROW
;

203 
__END_DECLS


	@/usr/include/bits/ioctl-types.h

20 #i‚de‡
_SYS_IOCTL_H


25 
	~<asm/io˘ls.h
>

28 
	swösize


30 
	mws_row
;

31 
	mws_cﬁ
;

32 
	mws_xpixñ
;

33 
	mws_ypixñ
;

36 
	#NCC
 8

	)

37 
	sãrmio


39 
	mc_iÊag
;

40 
	mc_oÊag
;

41 
	mc_cÊag
;

42 
	mc_lÊag
;

43 
	mc_löe
;

44 
	mc_cc
[
NCC
];

48 
	#TIOCM_LE
 0x001

	)

49 
	#TIOCM_DTR
 0x002

	)

50 
	#TIOCM_RTS
 0x004

	)

51 
	#TIOCM_ST
 0x008

	)

52 
	#TIOCM_SR
 0x010

	)

53 
	#TIOCM_CTS
 0x020

	)

54 
	#TIOCM_CAR
 0x040

	)

55 
	#TIOCM_RNG
 0x080

	)

56 
	#TIOCM_DSR
 0x100

	)

57 
	#TIOCM_CD
 
TIOCM_CAR


	)

58 
	#TIOCM_RI
 
TIOCM_RNG


	)

63 
	#N_TTY
 0

	)

64 
	#N_SLIP
 1

	)

65 
	#N_MOUSE
 2

	)

66 
	#N_PPP
 3

	)

67 
	#N_STRIP
 4

	)

68 
	#N_AX25
 5

	)

69 
	#N_X25
 6

	)

70 
	#N_6PACK
 7

	)

71 
	#N_MASC
 8

	)

72 
	#N_R3964
 9

	)

73 
	#N_PROFIBUS_FDL
 10

	)

74 
	#N_IRDA
 11

	)

75 
	#N_SMSBLOCK
 12

	)

76 
	#N_HDLC
 13

	)

77 
	#N_SYNC_PPP
 14

	)

78 
	#N_HCI
 15

	)

	@/usr/include/bits/ioctls.h

19 #i‚de‡
_SYS_IOCTL_H


24 
	~<asm/io˘ls.h
>

27 
	#SIOCADDRT
 0x890B

	)

28 
	#SIOCDELRT
 0x890C

	)

29 
	#SIOCRTMSG
 0x890D

	)

32 
	#SIOCGIFNAME
 0x8910

	)

33 
	#SIOCSIFLINK
 0x8911

	)

34 
	#SIOCGIFCONF
 0x8912

	)

35 
	#SIOCGIFFLAGS
 0x8913

	)

36 
	#SIOCSIFFLAGS
 0x8914

	)

37 
	#SIOCGIFADDR
 0x8915

	)

38 
	#SIOCSIFADDR
 0x8916

	)

39 
	#SIOCGIFDSTADDR
 0x8917

	)

40 
	#SIOCSIFDSTADDR
 0x8918

	)

41 
	#SIOCGIFBRDADDR
 0x8919

	)

42 
	#SIOCSIFBRDADDR
 0x891®

	)

43 
	#SIOCGIFNETMASK
 0x891b

	)

44 
	#SIOCSIFNETMASK
 0x891¯

	)

45 
	#SIOCGIFMETRIC
 0x891d

	)

46 
	#SIOCSIFMETRIC
 0x891ê

	)

47 
	#SIOCGIFMEM
 0x891‡

	)

48 
	#SIOCSIFMEM
 0x8920

	)

49 
	#SIOCGIFMTU
 0x8921

	)

50 
	#SIOCSIFMTU
 0x8922

	)

51 
	#SIOCSIFNAME
 0x8923

	)

52 
	#SIOCSIFHWADDR
 0x8924

	)

53 
	#SIOCGIFENCAP
 0x8925

	)

54 
	#SIOCSIFENCAP
 0x8926

	)

55 
	#SIOCGIFHWADDR
 0x8927

	)

56 
	#SIOCGIFSLAVE
 0x8929

	)

57 
	#SIOCSIFSLAVE
 0x8930

	)

58 
	#SIOCADDMULTI
 0x8931

	)

59 
	#SIOCDELMULTI
 0x8932

	)

60 
	#SIOCGIFINDEX
 0x8933

	)

61 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

62 
	#SIOCSIFPFLAGS
 0x8934

	)

63 
	#SIOCGIFPFLAGS
 0x8935

	)

64 
	#SIOCDIFADDR
 0x8936

	)

65 
	#SIOCSIFHWBROADCAST
 0x8937

	)

66 
	#SIOCGIFCOUNT
 0x8938

	)

68 
	#SIOCGIFBR
 0x8940

	)

69 
	#SIOCSIFBR
 0x8941

	)

71 
	#SIOCGIFTXQLEN
 0x8942

	)

72 
	#SIOCSIFTXQLEN
 0x8943

	)

77 
	#SIOCDARP
 0x8953

	)

78 
	#SIOCGARP
 0x8954

	)

79 
	#SIOCSARP
 0x8955

	)

82 
	#SIOCDRARP
 0x8960

	)

83 
	#SIOCGRARP
 0x8961

	)

84 
	#SIOCSRARP
 0x8962

	)

88 
	#SIOCGIFMAP
 0x8970

	)

89 
	#SIOCSIFMAP
 0x8971

	)

93 
	#SIOCADDDLCI
 0x8980

	)

94 
	#SIOCDELDLCI
 0x8981

	)

103 
	#SIOCDEVPRIVATE
 0x89F0

	)

109 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/bits/locale.h

20 #i‡!
deföed
 
_LOCALE_H
 && !deföed 
_LANGINFO_H


24 #i‚de‡
_BITS_LOCALE_H


25 
	#_BITS_LOCALE_H
 1

	)

29 
	m__LC_CTYPE
 = 0,

30 
	m__LC_NUMERIC
 = 1,

31 
	m__LC_TIME
 = 2,

32 
	m__LC_COLLATE
 = 3,

33 
	m__LC_MONETARY
 = 4,

34 
	m__LC_MESSAGES
 = 5,

35 
	m__LC_ALL
 = 6,

36 
	m__LC_PAPER
 = 7,

37 
	m__LC_NAME
 = 8,

38 
	m__LC_ADDRESS
 = 9,

39 
	m__LC_TELEPHONE
 = 10,

40 
	m__LC_MEASUREMENT
 = 11,

41 
	m__LC_IDENTIFICATION
 = 12

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

95 
	#_POSIX_PATH_MAX
 256

	)

98 
	#_POSIX_PIPE_BUF
 512

	)

102 
	#_POSIX_RE_DUP_MAX
 255

	)

105 
	#_POSIX_RTSIG_MAX
 8

	)

108 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

111 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

114 
	#_POSIX_SIGQUEUE_MAX
 32

	)

117 
	#_POSIX_SSIZE_MAX
 32767

	)

120 
	#_POSIX_STREAM_MAX
 8

	)

123 
	#_POSIX_SYMLINK_MAX
 255

	)

127 
	#_POSIX_SYMLOOP_MAX
 8

	)

130 
	#_POSIX_TIMER_MAX
 32

	)

133 
	#_POSIX_TTY_NAME_MAX
 9

	)

136 
	#_POSIX_TZNAME_MAX
 6

	)

139 
	#_POSIX_QLIMIT
 1

	)

143 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

146 
	#_POSIX_UIO_MAXIOV
 16

	)

149 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

153 
	~<bôs/loˇl_lim.h
>

156 #i‚def 
SSIZE_MAX


157 
	#SSIZE_MAX
 
LONG_MAX


	)

164 #i‚def 
NGROUPS_MAX


165 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_POSIX_OPT_H


21 
	#_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200112L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200112L

	)

36 
	#_POSIX_FSYNC
 200112L

	)

39 
	#_POSIX_MAPPED_FILES
 200112L

	)

42 
	#_POSIX_MEMLOCK
 200112L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200112L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200112L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 1

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_SHM
 1

	)

67 
	#_POSIX_THREADS
 200112L

	)

70 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

71 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200112L

	)

74 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200112L

	)

77 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200112L

	)

80 
	#_POSIX_THREAD_ATTR_STACKADDR
 200112L

	)

83 
	#_POSIX_SEMAPHORES
 200112L

	)

86 
	#_POSIX_REALTIME_SIGNALS
 200112L

	)

89 
	#_POSIX_ASYNCHRONOUS_IO
 200112L

	)

90 
	#_POSIX_ASYNC_IO
 1

	)

92 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

94 
	#_POSIX_PRIORITIZED_IO
 200112L

	)

97 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

100 
	#_LFS_LARGEFILE
 1

	)

101 
	#_LFS64_LARGEFILE
 1

	)

102 
	#_LFS64_STDIO
 1

	)

105 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200112L

	)

108 
	#_POSIX_CPUTIME
 0

	)

111 
	#_POSIX_THREAD_CPUTIME
 0

	)

114 
	#_POSIX_REGEXP
 1

	)

117 
	#_POSIX_READER_WRITER_LOCKS
 200112L

	)

120 
	#_POSIX_SHELL
 1

	)

123 
	#_POSIX_TIMEOUTS
 200112L

	)

126 
	#_POSIX_SPIN_LOCKS
 200112L

	)

129 
	#_POSIX_SPAWN
 200112L

	)

132 
	#_POSIX_TIMERS
 200112L

	)

135 
	#_POSIX_BARRIERS
 200112L

	)

138 
	#_POSIX_MESSAGE_PASSING
 200112L

	)

141 
	#_POSIX_THREAD_PROCESS_SHARED
 200112L

	)

144 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

147 
	#_POSIX_CLOCK_SELECTION
 200112L

	)

150 
	#_POSIX_ADVISORY_INFO
 200112L

	)

153 
	#_POSIX_IPV6
 200112L

	)

156 
	#_POSIX_RAW_SOCKETS
 200112L

	)

159 
	#_POSIX2_CHAR_TERM
 200112L

	)

162 
	#_POSIX_SPORADIC_SERVER
 -1

	)

163 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

166 
	#_POSIX_TRACE
 -1

	)

167 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

168 
	#_POSIX_TRACE_INHERIT
 -1

	)

169 
	#_POSIX_TRACE_LOG
 -1

	)

172 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

175 
	#_POSIX_THREAD_PRIO_INHERIT
 -1

	)

176 
	#_POSIX_THREAD_PRIO_PROTECT
 -1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__∑d1
;

163 
	m__∑d2
;

164 
	m__∑d3
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__wrôî
;

182 } 
	m__d©a
;

184 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

185 
	m__Æign
;

186 } 
	t±hªad_rwlock_t
;

190 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

191 
	m__Æign
;

192 } 
	t±hªad_rwlock©å_t
;

196 #ifde‡
__USE_XOPEN2K


198 vﬁ©ûê
	t±hªad_•ölock_t
;

205 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

206 
	m__Æign
;

207 } 
	t±hªad_b¨rõr_t
;

211 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

212 
	m__Æign
;

213 } 
	t±hªad_b¨rõøâr_t
;

217 #i‡
__WORDSIZE
 == 32

219 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

20 #i‚def 
_SIGSET_H_ty≥s


21 
	#_SIGSET_H_ty≥s
 1

	)

23 
	t__sig_©omic_t
;

27 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

30 
	m__vÆ
[
_SIGSET_NWORDS
];

31 } 
	t__sig£t_t
;

42 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


43 
	#_SIGSET_H_‚s
 1

	)

45 #i‚de‡
_EXTERN_INLINE


46 
	#_EXTERN_INLINE
 
__ölöe


	)

50 
	#__sigmask
(
sig
) \

51 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

54 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

56 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

57 
	#__sigem±y£t
(
£t
) \

58 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

59 
sig£t_t
 *
__£t
 = (
£t
); \

60 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

61 0; }))

	)

62 
	#__sigfûl£t
(
£t
) \

63 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

64 
sig£t_t
 *
__£t
 = (
£t
); \

65 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

66 0; }))

	)

68 #ifde‡
__USE_GNU


72 
	#__sigi£m±y£t
(
£t
) \

73 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

74 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

75 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

76 !
__ªt
 && --
__˙t
 >= 0) \

77 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

78 
__ªt
 =0; }))

	)

79 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

80 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

81 
sig£t_t
 *
__de°
 = (
de°
); \

82 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

83 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

84 --
__˙t
 >= 0) \

85 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

86 & 
__right
->
__vÆ
[
__˙t
]); \

87 0; }))

	)

88 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

89 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

90 
sig£t_t
 *
__de°
 = (
de°
); \

91 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

92 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

93 --
__˙t
 >= 0) \

94 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

95 | 
__right
->
__vÆ
[
__˙t
]); \

96 0; }))

	)

103 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

104 
__sigadd£t
 (
__sig£t_t
 *, );

105 
__sigdñ£t
 (
__sig£t_t
 *, );

107 #ifde‡
__USE_EXTERN_INLINES


108 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

109 
_EXTERN_INLINE
 \

110 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

112 
__mask
 = 
	`__sigmask
 (
__sig
); \

113 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

114  
BODY
; \

115 }

	)

117 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

118 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

119 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

121 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

	@/usr/include/bits/stat.h

19 #i‚de‡
_SYS_STAT_H


24 
	#_STAT_VER_KERNEL
 0

	)

26 #i‡
__WORDSIZE
 == 32

27 
	#_STAT_VER_SVR4
 2

	)

28 
	#_STAT_VER_LINUX
 3

	)

31 
	#_MKNOD_VER_LINUX
 1

	)

32 
	#_MKNOD_VER_SVR4
 2

	)

33 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

35 
	#_STAT_VER_LINUX
 1

	)

38 
	#_MKNOD_VER_LINUX
 0

	)

41 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

43 
	s°©


45 
__dev_t
 
	m°_dev
;

46 #i‡
__WORDSIZE
 == 32

47 
	m__∑d1
;

49 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


50 
__öo_t
 
	m°_öo
;

52 
__öo_t
 
	m__°_öo
;

54 #i‡
__WORDSIZE
 == 32

55 
__mode_t
 
	m°_mode
;

56 
__∆ök_t
 
	m°_∆ök
;

58 
__∆ök_t
 
	m°_∆ök
;

59 
__mode_t
 
	m°_mode
;

61 
__uid_t
 
	m°_uid
;

62 
__gid_t
 
	m°_gid
;

63 #i‡
__WORDSIZE
 == 64

64 
	m∑d0
;

66 
__dev_t
 
	m°_rdev
;

67 #i‡
__WORDSIZE
 == 32

68 
	m__∑d2
;

70 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


71 
__off_t
 
	m°_size
;

73 
__off64_t
 
	m°_size
;

75 
__blksize_t
 
	m°_blksize
;

76 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


77 
__blk˙t_t
 
	m°_blocks
;

79 
__blk˙t64_t
 
	m°_blocks
;

81 #ifde‡
__USE_MISC


88 
time•ec
 
	m°_©im
;

89 
time•ec
 
	m°_mtim
;

90 
time•ec
 
	m°_˘im
;

91 
	#°_©ime
 
°_©im
.
tv_£c


	)

92 
	#°_mtime
 
°_mtim
.
tv_£c


	)

93 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

95 
__time_t
 
	m°_©ime
;

96 
	m°_©imí£c
;

97 
__time_t
 
	m°_mtime
;

98 
	m°_mtimí£c
;

99 
__time_t
 
	m°_˘ime
;

100 
	m°_˘imí£c
;

102 #i‡
__WORDSIZE
 == 64

103 
	m__unu£d
[3];

105 #i‚de‡
__USE_FILE_OFFSET64


106 
	m__unu£d4
;

107 
	m__unu£d5
;

109 
__öo64_t
 
	m°_öo
;

114 #ifde‡
__USE_LARGEFILE64


116 
	s°©64


118 
__dev_t
 
	m°_dev
;

119 #i‡
__WORDSIZE
 == 64

120 
__öo64_t
 
	m°_öo
;

121 
__∆ök_t
 
	m°_∆ök
;

122 
__mode_t
 
	m°_mode
;

124 
	m__∑d1
;

125 
__öo_t
 
	m__°_öo
;

126 
__mode_t
 
	m°_mode
;

127 
__∆ök_t
 
	m°_∆ök
;

129 
__uid_t
 
	m°_uid
;

130 
__gid_t
 
	m°_gid
;

131 #i‡
__WORDSIZE
 == 64

132 
	m∑d0
;

133 
__dev_t
 
	m°_rdev
;

134 
__off_t
 
	m°_size
;

136 
__dev_t
 
	m°_rdev
;

137 
	m__∑d2
;

138 
__off64_t
 
	m°_size
;

140 
__blksize_t
 
	m°_blksize
;

141 
__blk˙t64_t
 
	m°_blocks
;

142 #ifde‡
__USE_MISC


149 
time•ec
 
	m°_©im
;

150 
time•ec
 
	m°_mtim
;

151 
time•ec
 
	m°_˘im
;

152 
	#°_©ime
 
°_©im
.
tv_£c


	)

153 
	#°_mtime
 
°_mtim
.
tv_£c


	)

154 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

156 
__time_t
 
	m°_©ime
;

157 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
	m°_˘imí£c
;

163 #i‡
__WORDSIZE
 == 64

164 
	m__unu£d
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

32 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

33 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

34 
__END_NAMESPACE_STD


36 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


37 
__BEGIN_NAMESPACE_C99


38 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

39 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

40 
__END_NAMESPACE_C99


43 #ifdef 
__USE_ISOC99


44 
__BEGIN_NAMESPACE_C99


45 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

46 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

47 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

48 
__END_NAMESPACE_C99


51 #ifde‡
__USE_GNU


52 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

53 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

54 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

55 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

56 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

57 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

58 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

61 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


62 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

63 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

64 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


65 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

66 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

68 #i‡
__USE_FORTIFY_LEVEL
 > 1

69 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

70 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #ifde‡
__˝lu•lus


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


33 
__STDIO_INLINE
 

34 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

36  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

37 
	}
}

40 
__STDIO_INLINE
 

41 
	$gëch¨
 ()

43  
	`_IO_gëc
 (
°dö
);

44 
	}
}

47 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


49 
__STDIO_INLINE
 

50 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

52  
	`_IO_gëc_u∆ocked
 (
__Â
);

53 
	}
}

56 
__STDIO_INLINE
 

57 
	$gëch¨_u∆ocked
 ()

59  
	`_IO_gëc_u∆ocked
 (
°dö
);

60 
	}
}

65 
__STDIO_INLINE
 

66 
	$putch¨
 (
__c
)

68  
	`_IO_putc
 (
__c
, 
°dout
);

69 
	}
}

72 #ifde‡
__USE_MISC


74 
__STDIO_INLINE
 

75 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

77  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

78 
	}
}

82 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


84 
__STDIO_INLINE
 

85 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

87  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

88 
	}
}

91 
__STDIO_INLINE
 

92 
	$putch¨_u∆ocked
 (
__c
)

94  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

95 
	}
}

99 #ifdef 
__USE_GNU


101 
__STDIO_INLINE
 
_IO_ssize_t


102 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

104  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

105 
	}
}

109 #ifde‡
__USE_MISC


111 
__STDIO_INLINE
 

112 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

114  
	`_IO_„of_u∆ocked
 (
__°ªam
);

115 
	}
}

118 
__STDIO_INLINE
 

119 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

121  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

122 
	}
}

128 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__


130 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

131 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

132 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

133 && (
size_t
Ë(
size
) != 0) \

134 ? ({ *
__±r
 = (*Ë(
±r
); \

135 
FILE
 *
__°ªam
 = (
°ªam
); \

136 
size_t
 
__˙t
; \

137 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

138 
__˙t
 > 0; --__cnt) \

140 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

141 i‡(
__c
 =
EOF
) \

143 *
__±r
++ = 
__c
; \

145 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

146 / (
size_t
Ë(
size
); }) \

147 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

148 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

150 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

151 (Ë(
n
), (
size_t
) 0) \

152 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

154 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

155 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

156 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

157 && (
size_t
Ë(
size
) != 0) \

158 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

159 
FILE
 *
__°ªam
 = (
°ªam
); \

160 
size_t
 
__˙t
; \

161 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

162 
__˙t
 > 0; --__cnt) \

163 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

165 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

166 / (
size_t
Ë(
size
); }) \

167 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

168 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

170 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

171 (Ë(
n
), (
size_t
) 0) \

172 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

176 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 
	#•rötf
(
°r
, ...) \

31 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

32 
__VA_ARGS__
)

	)

33 
	#v•rötf
(
°r
, 
fmt
, 
≠
) \

34 
	`__buûtö___v•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (°r), 
fmt
, 
≠
)

	)

36 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


38 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

39 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

40 ...Ë
__THROW
;

41 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

42 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

43 
_G_va_li°
 
__≠
Ë
__THROW
;

45 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

46 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

47 
__VA_ARGS__
)

	)

48 
	#v¢¥ötf
(
°r
, 
Àn
, 
fmt
, 
≠
) \

49 
	`__buûtö___v¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

50 
fmt
, 
≠
)

	)

54 #i‡
__USE_FORTIFY_LEVEL
 > 1

56 
	`__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

57 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

58 
	`__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

59 
	`__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

60 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

61 
	`__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

62 
_G_va_li°
 
__≠
);

64 
	#¥ötf
(...) \

65 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

66 
	#Ârötf
(
°ªam
, ...) \

67 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

68 
	#v¥ötf
(
f‹m©
, 
≠
) \

69 
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

70 
	#vÂrötf
(
°ªam
, 
f‹m©
, 
≠
) \

71 
	`__vÂrötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

75 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

76 *
	`__REDIRECT
 (
__gës_Æüs
, (*
__°r
), 
gës
Ë
__wur
;

78 
__Æways_ölöe
 
__wur
 *

79 
	$gës
 (*
__°r
)

81 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

82  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

83  
	`__gës_Æüs
 (
__°r
);

84 
	}
}

86 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

87 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

88 *
	`__REDIRECT
 (
__fgës_Æüs
,

89 (*
__ª°ri˘
 
__s
, 
__n
,

90 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

92 
__Æways_ölöe
 
__wur
 *

93 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

95 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1

96 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| (
size_t
Ë__¿> 
	`__bos
 (
__s
)))

97  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

98  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

99 
	}
}

101 #ifde‡
__USE_GNU


102 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

103 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

104 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

105 (*
__ª°ri˘
 
__s
, 
__n
,

106 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

108 
__Æways_ölöe
 
__wur
 *

109 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

111 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1

112 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| (
size_t
Ë__¿> 
	`__bos
 (
__s
)))

113  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

114  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

115 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 
	#L_cu£rid
 9

	)

34 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


35 #unde‡
FOPEN_MAX


36 
	#FOPEN_MAX
 16

	)

39 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


40 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 
	$__LDBL_REDIR1_DECL
 (
__°πﬁd_öã∫Æ
, 
__°πod_öã∫Æ
)

36 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


37 #ifde‡
__USE_MISC


38 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

40 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

41 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

42 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

31 
__Æways_ölöe
 
__wur
 *

32 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

34 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

35  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

37  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

38 
	}
}

41 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

42 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

43 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

44 
size_t
 
__buÊí
), 
±¢ame_r
)

45 
	`__n⁄nuŒ
 ((2));

47 
__Æways_ölöe
 

48 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

50 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

51 && (!
	`__buûtö_c⁄°™t_p
 (
__buÊí
Ë|| __buÊí > 
	`__bos
 (
__buf
)))

52  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

53  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

54 
	}
}

57 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

58 
__THROW
 
__wur
;

59 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

60 
w˘omb
Ë
__wur
;

62 
__Æways_ölöe
 
__wur
 

63 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

68 
	#__STDLIB_MB_LEN_MAX
 16

	)

69 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


72 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

73  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

74  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

75 
	}
}

78 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

79 
__c⁄°
 *
__ª°ri˘
 
__§c
,

80 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

81 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

82 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

83 
__c⁄°
 *
__ª°ri˘
 
__§c
,

84 
size_t
 
__Àn
), 
mb°owcs
);

86 
__Æways_ölöe
 
size_t


87 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

88 
size_t
 
__Àn
))

90 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

91 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
)

92 || 
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
)))

93  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

94 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

95  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

96 
	}
}

99 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

100 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

103 (*
__ª°ri˘
 
__d°
,

104 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
wc°ombs
);

107 
__Æways_ölöe
 
size_t


108 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

109 
size_t
 
__Àn
))

111 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

112 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| __À¿> 
	`__bos
 (
__d°
)))

113  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

114  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

115 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË(
c
); __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 ? (((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)) \

1170 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1173 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1174 
__STRING_INLINE
 *

1175 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1177 *
__ªsu…
;

1178 i‡(
__s
 =
NULL
)

1179 
__s
 = *
__√xç
;

1180 *
__s
 =
__£p
)

1181 ++
__s
;

1182 
__ªsu…
 = 
NULL
;

1183 i‡(*
__s
 != '\0')

1185 
__ªsu…
 = 
__s
++;

1186 *
__s
 != '\0')

1187 i‡(*
__s
++ =
__£p
)

1189 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1194  
__ªsu…
;

1195 
	}
}

1196 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1197 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1202 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1203 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1205 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1206 
	#__°r£p
(
s
, 
ªje˘
) \

1207 
__exãnsi⁄__
 \

1208 ({ 
__r0
, 
__r1
, 
__r2
; \

1209 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1210 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1211 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1212 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1213 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1214 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1215 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1216 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1217 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1218 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1220 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1223 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1224 
__STRING_INLINE
 *

1225 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1227 *
__ªtvÆ
 = *
__s
;

1228 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1229 *(*
__s
)++ = '\0';

1230  
__ªtvÆ
;

1231 
	}
}

1233 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1234 
__STRING_INLINE
 *

1235 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1237 *
__ªtvÆ
 = *
__s
;

1238 i‡(
__ªtvÆ
 !
NULL
)

1240 *
__˝
 = 
__ªtvÆ
;

1243 i‡(*
__˝
 == '\0')

1245 
__˝
 = 
NULL
;

1248 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1250 *
__˝
++ = '\0';

1253 ++
__˝
;

1255 *
__s
 = 
__˝
;

1257  
__ªtvÆ
;

1258 
	}
}

1260 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1261 
__ªje˘3
);

1262 
__STRING_INLINE
 *

1263 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1265 *
__ªtvÆ
 = *
__s
;

1266 i‡(
__ªtvÆ
 !
NULL
)

1268 *
__˝
 = 
__ªtvÆ
;

1271 i‡(*
__˝
 == '\0')

1273 
__˝
 = 
NULL
;

1276 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1278 *
__˝
++ = '\0';

1281 ++
__˝
;

1283 *
__s
 = 
__˝
;

1285  
__ªtvÆ
;

1286 
	}
}

1287 #ifde‡
__USE_BSD


1288 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1295 #ifde‡
__USE_MISC


1297 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1298 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1299 
	~<°dlib.h
>

1302 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1304 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1305 
	#__°rdup
(
s
) \

1306 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1307 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1308 ? (*Ë
	`ˇŒoc
 (1, 1) \

1309 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1310 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1311 i‡(
__ªtvÆ
 !
NULL
) \

1312 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1313 
__ªtvÆ
; 
	}
})) \

1314 : 
	`__°rdup
 (
s
)))

	)

1316 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1317 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1321 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1323 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1324 
__THROW
 
__©åibuã_mÆloc__
;

1325 
	#__°∫dup
(
s
, 
n
) \

1326 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1327 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1328 ? (*Ë
	`ˇŒoc
 (1, 1) \

1329 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1330 
size_t
 
__n
 = (
n
); \

1331 *
__ªtvÆ
; \

1332 i‡(
__n
 < 
__Àn
) \

1333 
__Àn
 = 
__n
 + 1; \

1334 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1335 i‡(
__ªtvÆ
 !
NULL
) \

1337 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1338 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1339 
__Àn
 - 1); \

1341 
__ªtvÆ
; 
	}
})) \

1342 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1344 #ifde‡
__USE_GNU


1345 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1351 #i‚de‡
_FORCE_INLINES


1352 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


26 #unde‡
mem˝y


27 #unde‡
memmove


28 #unde‡
mem£t


29 #unde‡
°rˇt


30 #unde‡
°r˝y


31 #unde‡
°∫ˇt


32 #unde‡
°∫˝y


33 #ifde‡
__USE_GNU


34 #unde‡
memp˝y


35 #unde‡
°p˝y


37 #ifde‡
__USE_BSD


38 #unde‡
bc›y


39 #unde‡
bzîo


43 
	#mem˝y
(
de°
, 
§c
, 
Àn
) \

44 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

45 ? 
	`__buûtö___mem˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

46 : 
	`__mem˝y_ichk
 (
de°
, 
§c
, 
Àn
))

	)

47 
__Æways_ölöe
 *

48 
__NTH
 (
	$__mem˝y_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

49 
size_t
 
__Àn
))

51  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

52 
	}
}

55 
	#memmove
(
de°
, 
§c
, 
Àn
) \

56 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

57 ? 
	`__buûtö___memmove_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

58 : 
	`__memmove_ichk
 (
de°
, 
§c
, 
Àn
))

	)

59 
__Æways_ölöe
 *

60 
__NTH
 (
	$__memmove_ichk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__Àn
))

62  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

63 
	}
}

66 #ifde‡
__USE_GNU


67 
	#memp˝y
(
de°
, 
§c
, 
Àn
) \

68 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

69 ? 
	`__buûtö___memp˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

70 : 
	`__memp˝y_ichk
 (
de°
, 
§c
, 
Àn
))

	)

71 
__Æways_ölöe
 *

72 
__NTH
 (
	$__memp˝y_ichk
 (*
__ª°ri˘
 
__de°
,

73 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
))

75  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

76 
	}
}

85 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

87 
	#mem£t
(
de°
, 
ch
, 
Àn
) \

88 (
	`__buûtö_c⁄°™t_p
 (
Àn
) && (len) == 0 \

89 ? (
	`__w¨n_mem£t_zîo_Àn
 (), (Ë(
ch
), (Ë(
Àn
), (*Ë(
de°
)) \

90 : ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

91 ? 
	`__buûtö___mem£t_chk
 (
de°
, 
ch
, 
Àn
, 
	`__bos0
 (dest)) \

92 : 
	`__mem£t_ichk
 (
de°
, 
ch
, 
Àn
)))

	)

93 
__Æways_ölöe
 *

94 
__NTH
 (
	$__mem£t_ichk
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

96  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

97 
	}
}

99 #ifde‡
__USE_BSD


100 
	#bc›y
(
§c
, 
de°
, 
Àn
) (() \

101 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

102 ? 
	`__buûtö___memmove_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

103 : 
	`__memmove_ichk
 (
de°
, 
§c
, 
Àn
)))

	)

104 
	#bzîo
(
de°
, 
Àn
) (() \

105 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

106 ? 
	`__buûtö___mem£t_chk
 (
de°
, '\0', 
Àn
, 
	`__bos0
 (dest)) \

107 : 
	`__mem£t_ichk
 (
de°
, '\0', 
Àn
)))

	)

111 
	#°r˝y
(
de°
, 
§c
) \

112 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

113 ? 
	`__buûtö___°r˝y_chk
 (
de°
, 
§c
, 
	`__bos
 (dest)) \

114 : 
	`__°r˝y_ichk
 (
de°
, 
§c
))

	)

115 
__Æways_ölöe
 *

116 
__NTH
 (
	$__°r˝y_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

118  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

119 
	}
}

122 #ifde‡
__USE_GNU


123 
	#°p˝y
(
de°
, 
§c
) \

124 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

125 ? 
	`__buûtö___°p˝y_chk
 (
de°
, 
§c
, 
	`__bos
 (dest)) \

126 : 
	`__°p˝y_ichk
 (
de°
, 
§c
))

	)

127 
__Æways_ölöe
 *

128 
__NTH
 (
	$__°p˝y_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

130  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

131 
	}
}

135 
	#°∫˝y
(
de°
, 
§c
, 
Àn
) \

136 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

137 ? 
	`__buûtö___°∫˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos
 (dest)) \

138 : 
	`__°∫˝y_ichk
 (
de°
, 
§c
, 
Àn
))

	)

139 
__Æways_ölöe
 *

140 
__NTH
 (
	$__°∫˝y_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

141 
size_t
 
__Àn
))

143  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

144 
	}
}

148 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

149 
size_t
 
__de°Àn
Ë
__THROW
;

150 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

151 
__c⁄°
 *
__§c
,

152 
size_t
 
__n
), 
°≤˝y
);

154 
__Æways_ölöe
 *

155 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

157 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

158 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

159  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

160  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

161 
	}
}

164 
	#°rˇt
(
de°
, 
§c
) \

165 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

166 ? 
	`__buûtö___°rˇt_chk
 (
de°
, 
§c
, 
	`__bos
 (dest)) \

167 : 
	`__°rˇt_ichk
 (
de°
, 
§c
))

	)

168 
__Æways_ölöe
 *

169 
__NTH
 (
	$__°rˇt_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

171  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

172 
	}
}

175 
	#°∫ˇt
(
de°
, 
§c
, 
Àn
) \

176 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

177 ? 
	`__buûtö___°∫ˇt_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos
 (dest)) \

178 : 
	`__°∫ˇt_ichk
 (
de°
, 
§c
, 
Àn
))

	)

179 
__Æways_ölöe
 *

180 
__NTH
 (
	$__°∫ˇt_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

181 
size_t
 
__Àn
))

183  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

184 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/termios.h

21 #i‚de‡
_TERMIOS_H


25 
	tcc_t
;

26 
	t•ìd_t
;

27 
	ttcÊag_t
;

29 
	#NCCS
 32

	)

30 
	sãrmios


32 
tcÊag_t
 
	mc_iÊag
;

33 
tcÊag_t
 
	mc_oÊag
;

34 
tcÊag_t
 
	mc_cÊag
;

35 
tcÊag_t
 
	mc_lÊag
;

36 
cc_t
 
	mc_löe
;

37 
cc_t
 
	mc_cc
[
NCCS
];

38 
•ìd_t
 
	mc_i•ìd
;

39 
•ìd_t
 
	mc_o•ìd
;

40 
	#_HAVE_STRUCT_TERMIOS_C_ISPEED
 1

	)

41 
	#_HAVE_STRUCT_TERMIOS_C_OSPEED
 1

	)

45 
	#VINTR
 0

	)

46 
	#VQUIT
 1

	)

47 
	#VERASE
 2

	)

48 
	#VKILL
 3

	)

49 
	#VEOF
 4

	)

50 
	#VTIME
 5

	)

51 
	#VMIN
 6

	)

52 
	#VSWTC
 7

	)

53 
	#VSTART
 8

	)

54 
	#VSTOP
 9

	)

55 
	#VSUSP
 10

	)

56 
	#VEOL
 11

	)

57 
	#VREPRINT
 12

	)

58 
	#VDISCARD
 13

	)

59 
	#VWERASE
 14

	)

60 
	#VLNEXT
 15

	)

61 
	#VEOL2
 16

	)

64 
	#IGNBRK
 0000001

	)

65 
	#BRKINT
 0000002

	)

66 
	#IGNPAR
 0000004

	)

67 
	#PARMRK
 0000010

	)

68 
	#INPCK
 0000020

	)

69 
	#ISTRIP
 0000040

	)

70 
	#INLCR
 0000100

	)

71 
	#IGNCR
 0000200

	)

72 
	#ICRNL
 0000400

	)

73 
	#IUCLC
 0001000

	)

74 
	#IXON
 0002000

	)

75 
	#IXANY
 0004000

	)

76 
	#IXOFF
 0010000

	)

77 
	#IMAXBEL
 0020000

	)

78 
	#IUTF8
 0040000

	)

81 
	#OPOST
 0000001

	)

82 
	#OLCUC
 0000002

	)

83 
	#ONLCR
 0000004

	)

84 
	#OCRNL
 0000010

	)

85 
	#ONOCR
 0000020

	)

86 
	#ONLRET
 0000040

	)

87 
	#OFILL
 0000100

	)

88 
	#OFDEL
 0000200

	)

89 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


90 
	#NLDLY
 0000400

	)

91 
	#NL0
 0000000

	)

92 
	#NL1
 0000400

	)

93 
	#CRDLY
 0003000

	)

94 
	#CR0
 0000000

	)

95 
	#CR1
 0001000

	)

96 
	#CR2
 0002000

	)

97 
	#CR3
 0003000

	)

98 
	#TABDLY
 0014000

	)

99 
	#TAB0
 0000000

	)

100 
	#TAB1
 0004000

	)

101 
	#TAB2
 0010000

	)

102 
	#TAB3
 0014000

	)

103 
	#BSDLY
 0020000

	)

104 
	#BS0
 0000000

	)

105 
	#BS1
 0020000

	)

106 
	#FFDLY
 0100000

	)

107 
	#FF0
 0000000

	)

108 
	#FF1
 0100000

	)

111 
	#VTDLY
 0040000

	)

112 
	#VT0
 0000000

	)

113 
	#VT1
 0040000

	)

115 #ifde‡
__USE_MISC


116 
	#XTABS
 0014000

	)

120 #ifde‡
__USE_MISC


121 
	#CBAUD
 0010017

	)

123 
	#B0
 0000000

	)

124 
	#B50
 0000001

	)

125 
	#B75
 0000002

	)

126 
	#B110
 0000003

	)

127 
	#B134
 0000004

	)

128 
	#B150
 0000005

	)

129 
	#B200
 0000006

	)

130 
	#B300
 0000007

	)

131 
	#B600
 0000010

	)

132 
	#B1200
 0000011

	)

133 
	#B1800
 0000012

	)

134 
	#B2400
 0000013

	)

135 
	#B4800
 0000014

	)

136 
	#B9600
 0000015

	)

137 
	#B19200
 0000016

	)

138 
	#B38400
 0000017

	)

139 #ifde‡
__USE_MISC


140 
	#EXTA
 
B19200


	)

141 
	#EXTB
 
B38400


	)

143 
	#CSIZE
 0000060

	)

144 
	#CS5
 0000000

	)

145 
	#CS6
 0000020

	)

146 
	#CS7
 0000040

	)

147 
	#CS8
 0000060

	)

148 
	#CSTOPB
 0000100

	)

149 
	#CREAD
 0000200

	)

150 
	#PARENB
 0000400

	)

151 
	#PARODD
 0001000

	)

152 
	#HUPCL
 0002000

	)

153 
	#CLOCAL
 0004000

	)

154 #ifde‡
__USE_MISC


155 
	#CBAUDEX
 0010000

	)

157 
	#B57600
 0010001

	)

158 
	#B115200
 0010002

	)

159 
	#B230400
 0010003

	)

160 
	#B460800
 0010004

	)

161 
	#B500000
 0010005

	)

162 
	#B576000
 0010006

	)

163 
	#B921600
 0010007

	)

164 
	#B1000000
 0010010

	)

165 
	#B1152000
 0010011

	)

166 
	#B1500000
 0010012

	)

167 
	#B2000000
 0010013

	)

168 
	#B2500000
 0010014

	)

169 
	#B3000000
 0010015

	)

170 
	#B3500000
 0010016

	)

171 
	#B4000000
 0010017

	)

172 
	#__MAX_BAUD
 
B4000000


	)

173 #ifde‡
__USE_MISC


174 
	#CIBAUD
 002003600000

	)

175 
	#CMSPAR
 010000000000

	)

176 
	#CRTSCTS
 020000000000

	)

180 
	#ISIG
 0000001

	)

181 
	#ICANON
 0000002

	)

182 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


183 
	#XCASE
 0000004

	)

185 
	#ECHO
 0000010

	)

186 
	#ECHOE
 0000020

	)

187 
	#ECHOK
 0000040

	)

188 
	#ECHONL
 0000100

	)

189 
	#NOFLSH
 0000200

	)

190 
	#TOSTOP
 0000400

	)

191 #ifde‡
__USE_MISC


192 
	#ECHOCTL
 0001000

	)

193 
	#ECHOPRT
 0002000

	)

194 
	#ECHOKE
 0004000

	)

195 
	#FLUSHO
 0010000

	)

196 
	#PENDIN
 0040000

	)

198 
	#IEXTEN
 0100000

	)

201 
	#TCOOFF
 0

	)

202 
	#TCOON
 1

	)

203 
	#TCIOFF
 2

	)

204 
	#TCION
 3

	)

207 
	#TCIFLUSH
 0

	)

208 
	#TCOFLUSH
 1

	)

209 
	#TCIOFLUSH
 2

	)

212 
	#TCSANOW
 0

	)

213 
	#TCSADRAIN
 1

	)

214 
	#TCSAFLUSH
 2

	)

217 
	#_IOT_ãrmios
 \

218 
	`_IOT
 (
	`_IOTS
 (
cÊag_t
), 4, _IOTS (
cc_t
), 
NCCS
, _IOTS (
•ìd_t
), 2)

	)

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

30 
	#__√ed_size_t


	)

31 
	~<°ddef.h
>

34 
	t__u_ch¨
;

35 
	t__u_sh‹t
;

36 
	t__u_öt
;

37 
	t__u_l⁄g
;

40 sig√d 
	t__öt8_t
;

41 
	t__uöt8_t
;

42 sig√d 
	t__öt16_t
;

43 
	t__uöt16_t
;

44 sig√d 
	t__öt32_t
;

45 
	t__uöt32_t
;

46 #i‡
__WORDSIZE
 == 64

47 sig√d 
	t__öt64_t
;

48 
	t__uöt64_t
;

49 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


50 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

51 
__exãnsi⁄__
 
	t__uöt64_t
;

55 #i‡
__WORDSIZE
 == 64

56 
	t__quad_t
;

57 
	t__u_quad_t
;

58 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


59 
__exãnsi⁄__
 
	t__quad_t
;

60 
__exãnsi⁄__
 
	t__u_quad_t
;

64 
	m__vÆ
[2];

65 } 
	t__quad_t
;

68 
__u_l⁄g
 
	m__vÆ
[2];

69 } 
	t__u_quad_t
;

102 
	#__S16_TYPE
 

	)

103 
	#__U16_TYPE
 

	)

104 
	#__S32_TYPE
 

	)

105 
	#__U32_TYPE
 

	)

106 
	#__SLONGWORD_TYPE
 

	)

107 
	#__ULONGWORD_TYPE
 

	)

108 #i‡
__WORDSIZE
 == 32

109 
	#__SQUAD_TYPE
 
__quad_t


	)

110 
	#__UQUAD_TYPE
 
__u_quad_t


	)

111 
	#__SWORD_TYPE
 

	)

112 
	#__UWORD_TYPE
 

	)

113 
	#__SLONG32_TYPE
 

	)

114 
	#__ULONG32_TYPE
 

	)

115 
	#__S64_TYPE
 
__quad_t


	)

116 
	#__U64_TYPE
 
__u_quad_t


	)

119 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

120 #ñi‡
__WORDSIZE
 == 64

121 
	t__SQUAD_TYPE
 

	)

122 
	t__UQUAD_TYPE
 

	)

123 
	t__SWORD_TYPE
 

	)

124 
	t__UWORD_TYPE
 

	)

125 
	t__SLONG32_TYPE
 

	)

126 
	t__ULONG32_TYPE
 

	)

127 
	t__S64_TYPE
 

	)

128 
	t__U64_TYPE
 

	)

130 
	t__STD_TYPE
 

	)

134 
	~<bôs/ty≥sizes.h
>

137 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

138 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

139 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

140 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

141 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

142 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

143 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

144 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

145 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

146 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

147 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

148 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

149 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

150 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

151 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

152 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

153 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

154 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

156 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

157 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

158 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

161 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

164 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

167 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

172 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

173 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

176 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

177 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

180 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

181 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

183 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

187 
__off64_t
 
	t__loff_t
;

188 
__quad_t
 *
	t__qaddr_t
;

189 *
	t__ˇddr_t
;

192 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

195 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

198 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

29 
__Æways_ölöe
 
__wur
 
ssize_t


30 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

32 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1

33 && (!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
Ë|| __nbyã†> 
	`__bos0
 (
__buf
)))

34  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

35  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

36 
	}
}

38 #ifde‡
__USE_UNIX98


39 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

40 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

41 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

42 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

43 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

44 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

45 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

46 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

47 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

48 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

50 #i‚de‡
__USE_FILE_OFFSET64


51 
__Æways_ölöe
 
__wur
 
ssize_t


52 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

54 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1

55 && (!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
Ë|| __nbyã†> 
	`__bos0
 (
__buf
)))

56  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

57  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

58 
	}
}

60 
__Æways_ölöe
 
__wur
 
ssize_t


61 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

63 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1

64 && (!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
Ë|| __nbyã†> 
	`__bos0
 (
__buf
)))

65  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

66  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

67 
	}
}

70 #ifde‡
__USE_LARGEFILE64


71 
__Æways_ölöe
 
__wur
 
ssize_t


72 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

74 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1

75 && (!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
Ë|| __nbyã†> 
	`__bos0
 (
__buf
)))

76  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

77  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

78 
	}
}

82 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


83 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

84 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

85 
size_t
 
__buÊí
)

86 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

87 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

88 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

89 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

90 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

92 
__Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 

93 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

94 
size_t
 
__Àn
))

96 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

97 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| __À¿> 
	`__bos
 (
__buf
)))

98  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

99  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

100 
	}
}

103 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

104 
__THROW
 
__wur
;

105 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

106 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

108 
__Æways_ölöe
 
__wur
 *

109 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

111 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

112 && (!
	`__buûtö_c⁄°™t_p
 (
__size
Ë|| __sizê> 
	`__bos
 (
__buf
)))

113  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

114  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

115 
	}
}

117 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


118 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

119 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

120 *
	`__REDIRECT_NTH
 (
__gëwd_Æüs
, (*
__buf
), 
gëwd
)

121 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

123 
__Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

124 
	`__NTH
 (
	$gëwd
 (*
__buf
))

126 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

127  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

128  
	`__gëwd_Æüs
 (
__buf
);

129 
	}
}

132 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

133 
size_t
 
__buÊí
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

135 
size_t
 
__Àn
), 
c⁄f°r
);

137 
__Æways_ölöe
 
size_t


138 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

140 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

141 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| 
	`__bos
 (
__buf
) < __len))

142  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

143  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

144 
	}
}

147 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
li°Àn
)

148 
__THROW
 
__wur
;

149 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

150 
gëgroups
Ë
__wur
;

152 
__Æways_ölöe
 

153 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

155 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1

156 && (!
	`__buûtö_c⁄°™t_p
 (
__size
)

157 || 
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
)))

158  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

159  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

160 
	}
}

163 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

164 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

165 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

166 
size_t
 
__buÊí
), 
ây«me_r
)

167 
	`__n⁄nuŒ
 ((2));

169 
__Æways_ölöe
 

170 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

172 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

173 && (!
	`__buûtö_c⁄°™t_p
 (
__buÊí
Ë|| __buÊí > 
	`__bos
 (
__buf
)))

174  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

175  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

176 
	}
}

179 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_UNIX98


180 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

181 
	`__n⁄nuŒ
 ((1));

182 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

183 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

185 
__Æways_ölöe
 

186 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

188 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

189 && (!
	`__buûtö_c⁄°™t_p
 (
__buÊí
Ë|| __buÊí > 
	`__bos
 (
__buf
)))

190  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

191  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

192 
	}
}

196 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


197 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

200 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

202 
__Æways_ölöe
 

203 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

205 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

206 && (!
	`__buûtö_c⁄°™t_p
 (
__buÊí
Ë|| __buÊí > 
	`__bos
 (
__buf
)))

207  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

208  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

209 
	}
}

213 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

214 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

215 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

216 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

217 
size_t
 
__buÊí
),

218 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

220 
__Æways_ölöe
 

221 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

223 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

224 && (!
	`__buûtö_c⁄°™t_p
 (
__buÊí
Ë|| __buÊí > 
	`__bos
 (
__buf
)))

225  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

226  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

227 
	}
}

	@/usr/include/bits/utsname.h

19 #i‚de‡
_SYS_UTSNAME_H


24 
	#_UTSNAME_LENGTH
 65

	)

29 
	#_UTSNAME_DOMAIN_LENGTH
 
_UTSNAME_LENGTH


	)

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/curses.h

37 #i‚de‡
__NCURSES_H


38 
	#__NCURSES_H


	)

40 
	#CURSES
 1

	)

41 
	#CURSES_H
 1

	)

50 
	#NCURSES_VERSION_MAJOR
 5

	)

51 
	#NCURSES_VERSION_MINOR
 5

	)

52 
	#NCURSES_VERSION_PATCH
 20060422

	)

55 #unde‡
NCURSES_VERSION


56 
	#NCURSES_VERSION
 "5.5"

	)

61 
	#NCURSES_MOUSE_VERSION
 1

	)

66 
	~<ncur£s_dŒ.h
>

71 #i‚de‡
NCURSES_ENABLE_STDBOOL_H


72 
	#NCURSES_ENABLE_STDBOOL_H
 1

	)

79 #ifde‡
NCURSES_NOMACROS


80 
	#NCURSES_ATTR_T
 
©å_t


	)

83 #i‚de‡
NCURSES_ATTR_T


84 
	#NCURSES_ATTR_T
 

	)

91 #unde‡
NCURSES_CONST


92 
	#NCURSES_CONST
 c⁄°

	)

94 #i‚de‡
NCURSES_INLINE


95 
	#NCURSES_INLINE
 
ölöe


	)

101 #unde‡
NCURSES_COLOR_T


102 
	#NCURSES_COLOR_T
 

	)

107 #unde‡
NCURSES_SIZE_T


108 
	#NCURSES_SIZE_T
 

	)

115 #unde‡
NCURSES_CH_T


116 
	#NCURSES_CH_T
 
chty≥


	)

118 #i‡0 && 
deföed
(
_LP64
)

119 
	tchty≥
;

120 
	tmmask_t
;

122 
	tchty≥
;

123 
	tmmask_t
;

126 
	~<°dio.h
>

127 
	~<un˘æ.h
>

128 
	~<°d¨g.h
>

129 #ifde‡
_XOPEN_SOURCE_EXTENDED


130 
	~<°ddef.h
>

145 #unde‡
TRUE


146 
	#TRUE
 1

	)

148 #unde‡
FALSE


149 
	#FALSE
 0

	)

151 
	tNCURSES_BOOL
;

153 #i‡
deföed
(
__˝lu•lus
)

156 
	#NCURSES_BOOL
 
boﬁ


	)

160 #i‡
NCURSES_ENABLE_STDBOOL_H


161 
	~<°dboﬁ.h
>

163 
	#NCURSES_BOOL
 
boﬁ


	)

166 #unde‡
boﬁ


167 
	#boﬁ
 
NCURSES_BOOL


	)

172 #ifde‡
__˝lu•lus


174 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë
°©ic_ˇ°
<ty≥>(vÆue)

	)

176 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë—y≥)(vÆue)

	)

183 
	#WA_ATTRIBUTES
 
A_ATTRIBUTES


	)

184 
	#WA_NORMAL
 
A_NORMAL


	)

185 
	#WA_STANDOUT
 
A_STANDOUT


	)

186 
	#WA_UNDERLINE
 
A_UNDERLINE


	)

187 
	#WA_REVERSE
 
A_REVERSE


	)

188 
	#WA_BLINK
 
A_BLINK


	)

189 
	#WA_DIM
 
A_DIM


	)

190 
	#WA_BOLD
 
A_BOLD


	)

191 
	#WA_ALTCHARSET
 
A_ALTCHARSET


	)

192 
	#WA_INVIS
 
A_INVIS


	)

193 
	#WA_PROTECT
 
A_PROTECT


	)

194 
	#WA_HORIZONTAL
 
A_HORIZONTAL


	)

195 
	#WA_LEFT
 
A_LEFT


	)

196 
	#WA_LOW
 
A_LOW


	)

197 
	#WA_RIGHT
 
A_RIGHT


	)

198 
	#WA_TOP
 
A_TOP


	)

199 
	#WA_VERTICAL
 
A_VERTICAL


	)

202 
NCURSES_EXPORT_VAR
(Ë
COLORS
;

203 
NCURSES_EXPORT_VAR
(Ë
COLOR_PAIRS
;

205 
	#COLOR_BLACK
 0

	)

206 
	#COLOR_RED
 1

	)

207 
	#COLOR_GREEN
 2

	)

208 
	#COLOR_YELLOW
 3

	)

209 
	#COLOR_BLUE
 4

	)

210 
	#COLOR_MAGENTA
 5

	)

211 
	#COLOR_CYAN
 6

	)

212 
	#COLOR_WHITE
 7

	)

217 
NCURSES_EXPORT_VAR
(
chty≥
*Ë
_nc_acs_m≠
();

218 
	#acs_m≠
 (
	`_nc_acs_m≠
())

	)

220 
NCURSES_EXPORT_VAR
(
chty≥
Ë
acs_m≠
[];

223 
	#NCURSES_ACS
(
c
Ë(
acs_m≠
[
	`NCURSES_CAST
(,c)])

	)

226 
	#ACS_ULCORNER
 
	`NCURSES_ACS
('l'Ë

	)

227 
	#ACS_LLCORNER
 
	`NCURSES_ACS
('m'Ë

	)

228 
	#ACS_URCORNER
 
	`NCURSES_ACS
('k'Ë

	)

229 
	#ACS_LRCORNER
 
	`NCURSES_ACS
('j'Ë

	)

230 
	#ACS_LTEE
 
	`NCURSES_ACS
('t'Ë

	)

231 
	#ACS_RTEE
 
	`NCURSES_ACS
('u'Ë

	)

232 
	#ACS_BTEE
 
	`NCURSES_ACS
('v'Ë

	)

233 
	#ACS_TTEE
 
	`NCURSES_ACS
('w'Ë

	)

234 
	#ACS_HLINE
 
	`NCURSES_ACS
('q'Ë

	)

235 
	#ACS_VLINE
 
	`NCURSES_ACS
('x'Ë

	)

236 
	#ACS_PLUS
 
	`NCURSES_ACS
('n'Ë

	)

237 
	#ACS_S1
 
	`NCURSES_ACS
('o'Ë

	)

238 
	#ACS_S9
 
	`NCURSES_ACS
('s'Ë

	)

239 
	#ACS_DIAMOND
 
	`NCURSES_ACS
('`'Ë

	)

240 
	#ACS_CKBOARD
 
	`NCURSES_ACS
('a'Ë

	)

241 
	#ACS_DEGREE
 
	`NCURSES_ACS
('f'Ë

	)

242 
	#ACS_PLMINUS
 
	`NCURSES_ACS
('g'Ë

	)

243 
	#ACS_BULLET
 
	`NCURSES_ACS
('~'Ë

	)

245 
	#ACS_LARROW
 
	`NCURSES_ACS
(','Ë

	)

246 
	#ACS_RARROW
 
	`NCURSES_ACS
('+'Ë

	)

247 
	#ACS_DARROW
 
	`NCURSES_ACS
('.'Ë

	)

248 
	#ACS_UARROW
 
	`NCURSES_ACS
('-'Ë

	)

249 
	#ACS_BOARD
 
	`NCURSES_ACS
('h'Ë

	)

250 
	#ACS_LANTERN
 
	`NCURSES_ACS
('i'Ë

	)

251 
	#ACS_BLOCK
 
	`NCURSES_ACS
('0'Ë

	)

257 
	#ACS_S3
 
	`NCURSES_ACS
('p'Ë

	)

258 
	#ACS_S7
 
	`NCURSES_ACS
('r'Ë

	)

259 
	#ACS_LEQUAL
 
	`NCURSES_ACS
('y'Ë

	)

260 
	#ACS_GEQUAL
 
	`NCURSES_ACS
('z'Ë

	)

261 
	#ACS_PI
 
	`NCURSES_ACS
('{'Ë

	)

262 
	#ACS_NEQUAL
 
	`NCURSES_ACS
('|'Ë

	)

263 
	#ACS_STERLING
 
	`NCURSES_ACS
('}'Ë

	)

271 
	#ACS_BSSB
 
ACS_ULCORNER


	)

272 
	#ACS_SSBB
 
ACS_LLCORNER


	)

273 
	#ACS_BBSS
 
ACS_URCORNER


	)

274 
	#ACS_SBBS
 
ACS_LRCORNER


	)

275 
	#ACS_SBSS
 
ACS_RTEE


	)

276 
	#ACS_SSSB
 
ACS_LTEE


	)

277 
	#ACS_SSBS
 
ACS_BTEE


	)

278 
	#ACS_BSSS
 
ACS_TTEE


	)

279 
	#ACS_BSBS
 
ACS_HLINE


	)

280 
	#ACS_SBSB
 
ACS_VLINE


	)

281 
	#ACS_SSSS
 
ACS_PLUS


	)

283 #unde‡
ERR


284 
	#ERR
 (-1)

	)

286 #unde‡
OK


287 
	#OK
 (0)

	)

290 
	#_SUBWIN
 0x01

	)

291 
	#_ENDLINE
 0x02

	)

292 
	#_FULLWIN
 0x04

	)

293 
	#_SCROLLWIN
 0x08

	)

294 
	#_ISPAD
 0x10

	)

295 
	#_HASMOVED
 0x20

	)

296 
	#_WRAPPED
 0x40

	)

302 
	#_NOCHANGE
 -1

	)

308 
	#_NEWINDEX
 -1

	)

310 
s¸ìn
 
	tSCREEN
;

311 
_wö_°
 
	tWINDOW
;

313 
chty≥
 
	t©å_t
;

315 #ifde‡
_XOPEN_SOURCE_EXTENDED


318 #ifde‡
mbÀn


319 #unde‡
mbÀn


321 
	~<libutf8.h
>

325 
	~<wch¨.h
>

329 
	twch¨_t
;

333 
	twöt_t
;

336 
	#CCHARW_MAX
 5

	)

339 
©å_t
 
	g©å
;

340 
wch¨_t
 
	gch¨s
[
CCHARW_MAX
];

342 
	gext_cﬁ‹
;

345 
	tcch¨_t
;

349 
	gld©
;

351 
	s_wö_°


353 
NCURSES_SIZE_T
 
	g_cury
, 
	g_curx
;

356 
NCURSES_SIZE_T
 
	g_maxy
, 
	g_maxx
;

357 
NCURSES_SIZE_T
 
	g_begy
, 
	g_begx
;

359 
	g_Êags
;

362 
©å_t
 
	g_©ås
;

363 
chty≥
 
	g_bkgd
;

366 
boﬁ
 
	g_nŸimeout
;

367 
boﬁ
 
	g_˛ór
;

368 
boﬁ
 
	g_Àaveok
;

369 
boﬁ
 
	g_s¸ﬁl
;

370 
boﬁ
 
	g_idlok
;

371 
boﬁ
 
	g_idcok
;

372 
boﬁ
 
	g_immed
;

373 
boﬁ
 
	g_sync
;

374 
boﬁ
 
	g_u£_key∑d
;

375 
	g_dñay
;

377 
ld©
 *
	g_löe
;

380 
NCURSES_SIZE_T
 
	g_ªgt›
;

381 
NCURSES_SIZE_T
 
	g_ªgbŸtom
;

384 
	g_∑rx
;

385 
	g_∑ry
;

386 
WINDOW
 *
	g_∑ª¡
;

389 
	spd©


391 
NCURSES_SIZE_T
 
	g_∑d_y
, 
	g_∑d_x
;

392 
NCURSES_SIZE_T
 
	g_∑d_t›
, 
	g_∑d_À·
;

393 
NCURSES_SIZE_T
 
	g_∑d_bŸtom
, 
	g_∑d_right
;

394 } 
	g_∑d
;

396 
NCURSES_SIZE_T
 
	g_yoff£t
;

398 #ifde‡
_XOPEN_SOURCE_EXTENDED


399 
cch¨_t
 
	g_bkg∫d
;

401 
	g_cﬁ‹
;

406 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
°ds¸
;

407 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
curs¸
;

408 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
√ws¸
;

410 
NCURSES_EXPORT_VAR
(Ë
LINES
;

411 
NCURSES_EXPORT_VAR
(Ë
COLS
;

412 
NCURSES_EXPORT_VAR
(Ë
TABSIZE
;

417 
NCURSES_EXPORT_VAR
(Ë
ESCDELAY
;

419 
NCURSES_EXPORT_VAR
(Ë
âyty≥
[];

425 
NCURSES_EXPORT
(
boﬁ
Ë
is_ãrm_ªsized
 (, );

426 
NCURSES_EXPORT
(*Ë
keybound
 (, );

427 
NCURSES_EXPORT
(c⁄° *Ë
cur£s_vîsi⁄
 ();

428 
NCURSES_EXPORT
(Ë
assume_deÁu…_cﬁ‹s
 (, );

429 
NCURSES_EXPORT
(Ë
deföe_key
 (const *, );

430 
NCURSES_EXPORT
(Ë
key_deföed
 (const *);

431 
NCURSES_EXPORT
(Ë
keyok
 (, 
boﬁ
);

432 
NCURSES_EXPORT
(Ë
ªsize_ãrm
 (, );

433 
NCURSES_EXPORT
(Ë
ªsizëîm
 (, );

434 
NCURSES_EXPORT
(Ë
u£_deÁu…_cﬁ‹s
 ();

435 
NCURSES_EXPORT
(Ë
u£_exãnded_«mes
 (
boﬁ
);

436 
NCURSES_EXPORT
(Ë
u£_Àgacy_codög
 ();

437 
NCURSES_EXPORT
(Ë
wªsize
 (
WINDOW
 *, , );

438 
NCURSES_EXPORT
(Ë
nofûãr
();

440 
	#cur£s_vîsi⁄
(Ë
NCURSES_VERSION


	)

447 #ifde‡
NCURSES_WGETCH_EVENTS


448 #i‡!
deföed
(
__BEOS__
)

449 
	#NCURSES_EVENT_VERSION
 1

	)

455 
	#_NC_EVENT_TIMEOUT_MSEC
 1

	)

456 
	#_NC_EVENT_FILE
 2

	)

457 
	#_NC_EVENT_FILE_READABLE
 2

	)

459 
	#_NC_EVENT_FILE_WRITABLE
 4

	)

460 
	#_NC_EVENT_FILE_EXCEPTION
 8

	)

465 
	gty≥
;

468 
	gtimeout_m£c
;

471 
	gÊags
;

472 
	gfd
;

473 
	gªsu…
;

474 } 
	g„v
;

475 } 
	gd©a
;

476 } 
	t_nc_evít
;

480 
	gcou¡
;

481 
	gªsu…_Êags
;

482 
_nc_evít
 *
	gevíts
[1];

483 } 
	t_nc_evíéi°
;

485 
NCURSES_EXPORT
(Ë
wgëch_evíts
(
WINDOW
 *, 
_nc_evíéi°
 *);

486 
NCURSES_EXPORT
(Ë
wgën°r_evíts
(
WINDOW
 *,*,,
_nc_evíéi°
 *);

498 #i‡!(
deföed
(
__GNUC__
Ë|| deföed(
__GNUG__
Ë|| deföed(
__©åibuã__
))

499 
	#__©åibuã__
(
p
Ë

	)

506 #i‚de‡
GCC_PRINTFLIKE


507 #i‡
deföed
(
GCC_PRINTF
Ë&& !deföed(
¥ötf
)

508 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
¥ötf
,fmt,v¨)))

	)

510 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë

	)

514 #i‚de‡
GCC_SCANFLIKE


515 #i‡
deföed
(
GCC_SCANF
Ë&& !deföed(
sˇnf
)

516 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
sˇnf
,fmt,v¨)))

	)

518 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë

	)

522 #i‚def 
GCC_NORETURN


523 
	#GCC_NORETURN


	)

526 #i‚def 
GCC_UNUSED


527 
	#GCC_UNUSED


	)

537 
NCURSES_EXPORT
(Ë
addch
 (c⁄° 
chty≥
);

538 
NCURSES_EXPORT
(Ë
addchn°r
 (c⁄° 
chty≥
 *, );

539 
NCURSES_EXPORT
(Ë
addch°r
 (c⁄° 
chty≥
 *);

540 
NCURSES_EXPORT
(Ë
addn°r
 (const *, );

541 
NCURSES_EXPORT
(Ë
add°r
 (const *);

542 
NCURSES_EXPORT
(Ë
©åoff
 (
NCURSES_ATTR_T
);

543 
NCURSES_EXPORT
(Ë
©å⁄
 (
NCURSES_ATTR_T
);

544 
NCURSES_EXPORT
(Ë
©å£t
 (
NCURSES_ATTR_T
);

545 
NCURSES_EXPORT
(Ë
©å_gë
 (
©å_t
 *, *, *);

546 
NCURSES_EXPORT
(Ë
©å_off
 (
©å_t
, *);

547 
NCURSES_EXPORT
(Ë
©å_⁄
 (
©å_t
, *);

548 
NCURSES_EXPORT
(Ë
©å_£t
 (
©å_t
, , *);

549 
NCURSES_EXPORT
(Ë
baudøã
 ();

550 
NCURSES_EXPORT
(Ë
bìp
 ();

551 
NCURSES_EXPORT
(Ë
bkgd
 (
chty≥
);

552 
NCURSES_EXPORT
(Ë
bkgd£t
 (
chty≥
);

553 
NCURSES_EXPORT
(Ë
b‹dî
 (
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

554 
NCURSES_EXPORT
(Ë
box
 (
WINDOW
 *, 
chty≥
, chtype);

555 
NCURSES_EXPORT
(
boﬁ
Ë
ˇn_ch™ge_cﬁ‹
 ();

556 
NCURSES_EXPORT
(Ë
cbªak
 ();

557 
NCURSES_EXPORT
(Ë
chg©
 (, 
©å_t
, , const *);

558 
NCURSES_EXPORT
(Ë
˛ór
 ();

559 
NCURSES_EXPORT
(Ë
˛órok
 (
WINDOW
 *,
boﬁ
);

560 
NCURSES_EXPORT
(Ë
˛πobŸ
 ();

561 
NCURSES_EXPORT
(Ë
˛π€ﬁ
 ();

562 
NCURSES_EXPORT
(Ë
cﬁ‹_c⁄ã¡
 (,*,*,*);

563 
NCURSES_EXPORT
(Ë
cﬁ‹_£t
 (,*);

564 
NCURSES_EXPORT
(Ë
COLOR_PAIR
 ();

565 
NCURSES_EXPORT
(Ë
c›ywö
 (c⁄° 
WINDOW
*,WINDOW*,,,,,,,);

566 
NCURSES_EXPORT
(Ë
curs_£t
 ();

567 
NCURSES_EXPORT
(Ë
def_¥og_mode
 ();

568 
NCURSES_EXPORT
(Ë
def_shñl_mode
 ();

569 
NCURSES_EXPORT
(Ë
dñay_ouçut
 ();

570 
NCURSES_EXPORT
(Ë
dñch
 ();

571 
NCURSES_EXPORT
(Ë
dñs¸ìn
 (
SCREEN
 *);

572 
NCURSES_EXPORT
(Ë
dñwö
 (
WINDOW
 *);

573 
NCURSES_EXPORT
(Ë
dñëñn
 ();

574 
NCURSES_EXPORT
(
WINDOW
 *Ë
dîwö
 (WINDOW *,,,,);

575 
NCURSES_EXPORT
(Ë
doupd©e
 ();

576 
NCURSES_EXPORT
(
WINDOW
 *Ë
dupwö
 (WINDOW *);

577 
NCURSES_EXPORT
(Ë
echo
 ();

578 
NCURSES_EXPORT
(Ë
echoch¨
 (c⁄° 
chty≥
);

579 
NCURSES_EXPORT
(Ë
îa£
 ();

580 
NCURSES_EXPORT
(Ë
ídwö
 ();

581 
NCURSES_EXPORT
(Ë
îa£ch¨
 ();

582 
NCURSES_EXPORT
(Ë
fûãr
 ();

583 
NCURSES_EXPORT
(Ë
Êash
 ();

584 
NCURSES_EXPORT
(Ë
Êushöp
 ();

585 
NCURSES_EXPORT
(
chty≥
Ë
gëbkgd
 (
WINDOW
 *);

586 
NCURSES_EXPORT
(Ë
gëch
 ();

587 
NCURSES_EXPORT
(Ë
gën°r
 (*, );

588 
NCURSES_EXPORT
(Ë
gë°r
 (*);

589 
NCURSES_EXPORT
(
WINDOW
 *Ë
gëwö
 (
FILE
 *);

590 
NCURSES_EXPORT
(Ë
hÆfdñay
 ();

591 
NCURSES_EXPORT
(
boﬁ
Ë
has_cﬁ‹s
 ();

592 
NCURSES_EXPORT
(
boﬁ
Ë
has_ic
 ();

593 
NCURSES_EXPORT
(
boﬁ
Ë
has_û
 ();

594 
NCURSES_EXPORT
(Ë
hlöe
 (
chty≥
, );

595 
NCURSES_EXPORT
(Ë
idcok
 (
WINDOW
 *, 
boﬁ
);

596 
NCURSES_EXPORT
(Ë
idlok
 (
WINDOW
 *, 
boﬁ
);

597 
NCURSES_EXPORT
(Ë
immedok
 (
WINDOW
 *, 
boﬁ
);

598 
NCURSES_EXPORT
(
chty≥
Ë
öch
 ();

599 
NCURSES_EXPORT
(Ë
öchn°r
 (
chty≥
 *, );

600 
NCURSES_EXPORT
(Ë
öch°r
 (
chty≥
 *);

601 
NCURSES_EXPORT
(
WINDOW
 *Ë
öôs¸
 ();

602 
NCURSES_EXPORT
(Ë
öô_cﬁ‹
 (,,,);

603 
NCURSES_EXPORT
(Ë
öô_∑ú
 (,,);

604 
NCURSES_EXPORT
(Ë
ön°r
 (*, );

605 
NCURSES_EXPORT
(Ë
ösch
 (
chty≥
);

606 
NCURSES_EXPORT
(Ë
ösdñ 
 ();

607 
NCURSES_EXPORT
(Ë
ö£π 
 ();

608 
NCURSES_EXPORT
(Ë
ö¢°r
 (const *, );

609 
NCURSES_EXPORT
(Ë
ös°r
 (const *);

610 
NCURSES_EXPORT
(Ë
ö°r
 (*);

611 
NCURSES_EXPORT
(Ë
öåÊush
 (
WINDOW
 *,
boﬁ
);

612 
NCURSES_EXPORT
(
boﬁ
Ë
i£ndwö
 ();

613 
NCURSES_EXPORT
(
boﬁ
Ë
is_löëouched
 (
WINDOW
 *,);

614 
NCURSES_EXPORT
(
boﬁ
Ë
is_wötouched
 (
WINDOW
 *);

615 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
key«me
 ();

616 
NCURSES_EXPORT
(Ë
key∑d
 (
WINDOW
 *,
boﬁ
);

617 
NCURSES_EXPORT
(Ë
kûlch¨
 ();

618 
NCURSES_EXPORT
(Ë
Àaveok
 (
WINDOW
 *,
boﬁ
);

619 
NCURSES_EXPORT
(*Ë
l⁄g«me
 ();

620 
NCURSES_EXPORT
(Ë
mëa
 (
WINDOW
 *,
boﬁ
);

621 
NCURSES_EXPORT
(Ë
move
 (, );

622 
NCURSES_EXPORT
(Ë
mvaddch
 (, , c⁄° 
chty≥
);

623 
NCURSES_EXPORT
(Ë
mvaddchn°r
 (, , c⁄° 
chty≥
 *, );

624 
NCURSES_EXPORT
(Ë
mvaddch°r
 (, , c⁄° 
chty≥
 *);

625 
NCURSES_EXPORT
(Ë
mvaddn°r
 (, , const *, );

626 
NCURSES_EXPORT
(Ë
mvadd°r
 (, , const *);

627 
NCURSES_EXPORT
(Ë
mvchg©
 (, , , 
©å_t
, , const *);

628 
NCURSES_EXPORT
(Ë
mvcur
 (,,,);

629 
NCURSES_EXPORT
(Ë
mvdñch
 (, );

630 
NCURSES_EXPORT
(Ë
mvdîwö
 (
WINDOW
 *, , );

631 
NCURSES_EXPORT
(Ë
mvgëch
 (, );

632 
NCURSES_EXPORT
(Ë
mvgën°r
 (, , *, );

633 
NCURSES_EXPORT
(Ë
mvgë°r
 (, , *);

634 
NCURSES_EXPORT
(Ë
mvhlöe
 (, , 
chty≥
, );

635 
NCURSES_EXPORT
(
chty≥
Ë
mvöch
 (, );

636 
NCURSES_EXPORT
(Ë
mvöchn°r
 (, , 
chty≥
 *, );

637 
NCURSES_EXPORT
(Ë
mvöch°r
 (, , 
chty≥
 *);

638 
NCURSES_EXPORT
(Ë
mvön°r
 (, , *, );

639 
NCURSES_EXPORT
(Ë
mvösch
 (, , 
chty≥
);

640 
NCURSES_EXPORT
(Ë
mvö¢°r
 (, , const *, );

641 
NCURSES_EXPORT
(Ë
mvös°r
 (, , const *);

642 
NCURSES_EXPORT
(Ë
mvö°r
 (, , *);

643 
NCURSES_EXPORT
(Ë
mv¥ötw
 (,, const *,...)

644 
GCC_PRINTFLIKE
(3,4);

645 
NCURSES_EXPORT
(Ë
mvsˇnw
 (,, 
NCURSES_CONST
 *,...)

646 
GCC_SCANFLIKE
(3,4);

647 
NCURSES_EXPORT
(Ë
mvvlöe
 (, , 
chty≥
, );

648 
NCURSES_EXPORT
(Ë
mvwaddch
 (
WINDOW
 *, , , c⁄° 
chty≥
);

649 
NCURSES_EXPORT
(Ë
mvwaddchn°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *, );

650 
NCURSES_EXPORT
(Ë
mvwaddch°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *);

651 
NCURSES_EXPORT
(Ë
mvwaddn°r
 (
WINDOW
 *, , , const *, );

652 
NCURSES_EXPORT
(Ë
mvwadd°r
 (
WINDOW
 *, , , const *);

653 
NCURSES_EXPORT
(Ë
mvwchg©
 (
WINDOW
 *, , , , 
©å_t
, , const *);

654 
NCURSES_EXPORT
(Ë
mvwdñch
 (
WINDOW
 *, , );

655 
NCURSES_EXPORT
(Ë
mvwgëch
 (
WINDOW
 *, , );

656 
NCURSES_EXPORT
(Ë
mvwgën°r
 (
WINDOW
 *, , , *, );

657 
NCURSES_EXPORT
(Ë
mvwgë°r
 (
WINDOW
 *, , , *);

658 
NCURSES_EXPORT
(Ë
mvwhlöe
 (
WINDOW
 *, , , 
chty≥
, );

659 
NCURSES_EXPORT
(Ë
mvwö
 (
WINDOW
 *,,);

660 
NCURSES_EXPORT
(
chty≥
Ë
mvwöch
 (
WINDOW
 *, , );

661 
NCURSES_EXPORT
(Ë
mvwöchn°r
 (
WINDOW
 *, , , 
chty≥
 *, );

662 
NCURSES_EXPORT
(Ë
mvwöch°r
 (
WINDOW
 *, , , 
chty≥
 *);

663 
NCURSES_EXPORT
(Ë
mvwön°r
 (
WINDOW
 *, , , *, );

664 
NCURSES_EXPORT
(Ë
mvwösch
 (
WINDOW
 *, , , 
chty≥
);

665 
NCURSES_EXPORT
(Ë
mvwö¢°r
 (
WINDOW
 *, , , const *, );

666 
NCURSES_EXPORT
(Ë
mvwös°r
 (
WINDOW
 *, , , const *);

667 
NCURSES_EXPORT
(Ë
mvwö°r
 (
WINDOW
 *, , , *);

668 
NCURSES_EXPORT
(Ë
mvw¥ötw
 (
WINDOW
*,,, const *,...)

669 
GCC_PRINTFLIKE
(4,5);

670 
NCURSES_EXPORT
(Ë
mvwsˇnw
 (
WINDOW
 *,,, 
NCURSES_CONST
 *,...)

671 
GCC_SCANFLIKE
(4,5);

672 
NCURSES_EXPORT
(Ë
mvwvlöe
 (
WINDOW
 *,, , 
chty≥
, );

673 
NCURSES_EXPORT
(Ë
«pms
 ();

674 
NCURSES_EXPORT
(
WINDOW
 *Ë
√w∑d
 (,);

675 
NCURSES_EXPORT
(
SCREEN
 *Ë
√wãrm
 (
NCURSES_CONST
 *,
FILE
 *,FILE *);

676 
NCURSES_EXPORT
(
WINDOW
 *Ë
√wwö
 (,,,);

677 
NCURSES_EXPORT
(Ë
∆
 ();

678 
NCURSES_EXPORT
(Ë
nocbªak
 ();

679 
NCURSES_EXPORT
(Ë
nodñay
 (
WINDOW
 *,
boﬁ
);

680 
NCURSES_EXPORT
(Ë
n€cho
 ();

681 
NCURSES_EXPORT
(Ë
n⁄l
 ();

682 
NCURSES_EXPORT
(Ë
noqiÊush
 ();

683 
NCURSES_EXPORT
(Ë
n‹aw
 ();

684 
NCURSES_EXPORT
(Ë
nŸimeout
 (
WINDOW
 *,
boﬁ
);

685 
NCURSES_EXPORT
(Ë
ovîœy
 (c⁄° 
WINDOW
*,WINDOW *);

686 
NCURSES_EXPORT
(Ë
ovîwrôe
 (c⁄° 
WINDOW
*,WINDOW *);

687 
NCURSES_EXPORT
(Ë
∑ú_c⁄ã¡
 (,*,*);

688 
NCURSES_EXPORT
(Ë
PAIR_NUMBER
 ();

689 
NCURSES_EXPORT
(Ë
≥choch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

690 
NCURSES_EXPORT
(Ë
≤ouåe‰esh
 (
WINDOW
*,,,,,,);

691 
NCURSES_EXPORT
(Ë
¥e‰esh
 (
WINDOW
 *,,,,,,);

692 
NCURSES_EXPORT
(Ë
¥ötw
 (const *,...)

693 
GCC_PRINTFLIKE
(1,2);

694 
NCURSES_EXPORT
(Ë
puç
 (const *);

695 
NCURSES_EXPORT
(Ë
putwö
 (
WINDOW
 *, 
FILE
 *);

696 
NCURSES_EXPORT
(Ë
qiÊush
 ();

697 
NCURSES_EXPORT
(Ë
øw
 ();

698 
NCURSES_EXPORT
(Ë
ªdøwwö
 (
WINDOW
 *);

699 
NCURSES_EXPORT
(Ë
ª‰esh
 ();

700 
NCURSES_EXPORT
(Ë
ª£ây
 ();

701 
NCURSES_EXPORT
(Ë
ª£t_¥og_mode
 ();

702 
NCURSES_EXPORT
(Ë
ª£t_shñl_mode
 ();

703 
NCURSES_EXPORT
(Ë
rùofÊöe
 (, (*)(
WINDOW
 *, ));

704 
NCURSES_EXPORT
(Ë
ßvëty
 ();

705 
NCURSES_EXPORT
(Ë
sˇnw
 (
NCURSES_CONST
 *,...)

706 
GCC_SCANFLIKE
(1,2);

707 
NCURSES_EXPORT
(Ë
s¸_dump
 (const *);

708 
NCURSES_EXPORT
(Ë
s¸_öô
 (const *);

709 
NCURSES_EXPORT
(Ë
s¸l
 ();

710 
NCURSES_EXPORT
(Ë
s¸ﬁl
 (
WINDOW
 *);

711 
NCURSES_EXPORT
(Ë
s¸ﬁlok
 (
WINDOW
 *,
boﬁ
);

712 
NCURSES_EXPORT
(Ë
s¸_ª°‹e
 (const *);

713 
NCURSES_EXPORT
(Ë
s¸_£t
 (const *);

714 
NCURSES_EXPORT
(Ë
£ts¸ªg
 (,);

715 
NCURSES_EXPORT
(
SCREEN
 *Ë
£t_ãrm
 (SCREEN *);

716 
NCURSES_EXPORT
(Ë
¶k_©åoff
 (c⁄° 
chty≥
);

717 
NCURSES_EXPORT
(Ë
¶k_©å_off
 (c⁄° 
©å_t
, *);

718 
NCURSES_EXPORT
(Ë
¶k_©å⁄
 (c⁄° 
chty≥
);

719 
NCURSES_EXPORT
(Ë
¶k_©å_⁄
 (
©å_t
,*);

720 
NCURSES_EXPORT
(Ë
¶k_©å£t
 (c⁄° 
chty≥
);

721 
NCURSES_EXPORT
(
©å_t
Ë
¶k_©å
 ();

722 
NCURSES_EXPORT
(Ë
¶k_©å_£t
 (c⁄° 
©å_t
,,*);

723 
NCURSES_EXPORT
(Ë
¶k_˛ór
 ();

724 
NCURSES_EXPORT
(Ë
¶k_cﬁ‹
 ();

725 
NCURSES_EXPORT
(Ë
¶k_öô
 ();

726 
NCURSES_EXPORT
(*Ë
¶k_œbñ
 ();

727 
NCURSES_EXPORT
(Ë
¶k_nouåe‰esh
 ();

728 
NCURSES_EXPORT
(Ë
¶k_ª‰esh
 ();

729 
NCURSES_EXPORT
(Ë
¶k_ª°‹e
 ();

730 
NCURSES_EXPORT
(Ë
¶k_£t
 (,const *,);

731 
NCURSES_EXPORT
(Ë
¶k_touch
 ();

732 
NCURSES_EXPORT
(Ë
°™dout
 ();

733 
NCURSES_EXPORT
(Ë
°™díd
 ();

734 
NCURSES_EXPORT
(Ë
°¨t_cﬁ‹
 ();

735 
NCURSES_EXPORT
(
WINDOW
 *Ë
sub∑d
 (WINDOW *, , , , );

736 
NCURSES_EXPORT
(
WINDOW
 *Ë
subwö
 (WINDOW *,,,,);

737 
NCURSES_EXPORT
(Ë
syncok
 (
WINDOW
 *, 
boﬁ
);

738 
NCURSES_EXPORT
(
chty≥
Ë
ãrm©ås
 ();

739 
NCURSES_EXPORT
(*Ë
ãrm«me
 ();

740 
NCURSES_EXPORT
(Ë
tigëÊag
 (
NCURSES_CONST
 *);

741 
NCURSES_EXPORT
(Ë
tigënum
 (
NCURSES_CONST
 *);

742 
NCURSES_EXPORT
(*Ë
tigë°r
 (
NCURSES_CONST
 *);

743 
NCURSES_EXPORT
(Ë
timeout
 ();

744 
NCURSES_EXPORT
(Ë
touchlöe
 (
WINDOW
 *, , );

745 
NCURSES_EXPORT
(Ë
touchwö
 (
WINDOW
 *);

746 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, ...);

747 
NCURSES_EXPORT
(Ë
ty≥ahód
 ();

748 
NCURSES_EXPORT
(Ë
ungëch
 ();

749 
NCURSES_EXPORT
(Ë
u¡ouchwö
 (
WINDOW
 *);

750 
NCURSES_EXPORT
(Ë
u£_ív
 (
boﬁ
);

751 
NCURSES_EXPORT
(Ë
vid©å
 (
chty≥
);

752 
NCURSES_EXPORT
(Ë
vidputs
 (
chty≥
, (*)());

753 
NCURSES_EXPORT
(Ë
vlöe
 (
chty≥
, );

754 
NCURSES_EXPORT
(Ë
vw¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

755 
NCURSES_EXPORT
(Ë
vw_¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

756 
NCURSES_EXPORT
(Ë
vwsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

757 
NCURSES_EXPORT
(Ë
vw_sˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

758 
NCURSES_EXPORT
(Ë
waddch
 (
WINDOW
 *, c⁄° 
chty≥
);

759 
NCURSES_EXPORT
(Ë
waddchn°r
 (
WINDOW
 *,c⁄° 
chty≥
 *,);

760 
NCURSES_EXPORT
(Ë
waddch°r
 (
WINDOW
 *,c⁄° 
chty≥
 *);

761 
NCURSES_EXPORT
(Ë
waddn°r
 (
WINDOW
 *,const *,);

762 
NCURSES_EXPORT
(Ë
wadd°r
 (
WINDOW
 *,const *);

763 
NCURSES_EXPORT
(Ë
w©å⁄
 (
WINDOW
 *, );

764 
NCURSES_EXPORT
(Ë
w©åoff
 (
WINDOW
 *, );

765 
NCURSES_EXPORT
(Ë
w©å£t
 (
WINDOW
 *, );

766 
NCURSES_EXPORT
(Ë
w©å_gë
 (
WINDOW
 *, 
©å_t
 *, *, *);

767 
NCURSES_EXPORT
(Ë
w©å_⁄
 (
WINDOW
 *, 
©å_t
, *);

768 
NCURSES_EXPORT
(Ë
w©å_off
 (
WINDOW
 *, 
©å_t
, *);

769 
NCURSES_EXPORT
(Ë
w©å_£t
 (
WINDOW
 *, 
©å_t
, , *);

770 
NCURSES_EXPORT
(Ë
wbkgd
 (
WINDOW
 *, 
chty≥
);

771 
NCURSES_EXPORT
(Ë
wbkgd£t
 (
WINDOW
 *,
chty≥
);

772 
NCURSES_EXPORT
(Ë
wb‹dî
 (
WINDOW
 *,
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

773 
NCURSES_EXPORT
(Ë
wchg©
 (
WINDOW
 *, , 
©å_t
, , const *);

774 
NCURSES_EXPORT
(Ë
w˛ór
 (
WINDOW
 *);

775 
NCURSES_EXPORT
(Ë
w˛πobŸ
 (
WINDOW
 *);

776 
NCURSES_EXPORT
(Ë
w˛π€ﬁ
 (
WINDOW
 *);

777 
NCURSES_EXPORT
(Ë
wcﬁ‹_£t
 (
WINDOW
*,,*);

778 
NCURSES_EXPORT
(Ë
wcursyncup
 (
WINDOW
 *);

779 
NCURSES_EXPORT
(Ë
wdñch
 (
WINDOW
 *);

780 
NCURSES_EXPORT
(Ë
wdñëñn
 (
WINDOW
 *);

781 
NCURSES_EXPORT
(Ë
wechoch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

782 
NCURSES_EXPORT
(Ë
wîa£
 (
WINDOW
 *);

783 
NCURSES_EXPORT
(Ë
wgëch
 (
WINDOW
 *);

784 
NCURSES_EXPORT
(Ë
wgën°r
 (
WINDOW
 *,*,);

785 
NCURSES_EXPORT
(Ë
wgë°r
 (
WINDOW
 *, *);

786 
NCURSES_EXPORT
(Ë
whlöe
 (
WINDOW
 *, 
chty≥
, );

787 
NCURSES_EXPORT
(
chty≥
Ë
wöch
 (
WINDOW
 *);

788 
NCURSES_EXPORT
(Ë
wöchn°r
 (
WINDOW
 *, 
chty≥
 *, );

789 
NCURSES_EXPORT
(Ë
wöch°r
 (
WINDOW
 *, 
chty≥
 *);

790 
NCURSES_EXPORT
(Ë
wön°r
 (
WINDOW
 *, *, );

791 
NCURSES_EXPORT
(Ë
wösch
 (
WINDOW
 *, 
chty≥
);

792 
NCURSES_EXPORT
(Ë
wösdñ 
 (
WINDOW
 *,);

793 
NCURSES_EXPORT
(Ë
wö£π 
 (
WINDOW
 *);

794 
NCURSES_EXPORT
(Ë
wö¢°r
 (
WINDOW
 *, const *,);

795 
NCURSES_EXPORT
(Ë
wös°r
 (
WINDOW
 *, const *);

796 
NCURSES_EXPORT
(Ë
wö°r
 (
WINDOW
 *, *);

797 
NCURSES_EXPORT
(Ë
wmove
 (
WINDOW
 *,,);

798 
NCURSES_EXPORT
(Ë
wnouåe‰esh
 (
WINDOW
 *);

799 
NCURSES_EXPORT
(Ë
w¥ötw
 (
WINDOW
 *, const *,...)

800 
GCC_PRINTFLIKE
(2,3);

801 
NCURSES_EXPORT
(Ë
wªdøw 
 (
WINDOW
 *,,);

802 
NCURSES_EXPORT
(Ë
wª‰esh
 (
WINDOW
 *);

803 
NCURSES_EXPORT
(Ë
wsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,...)

804 
GCC_SCANFLIKE
(2,3);

805 
NCURSES_EXPORT
(Ë
ws¸l
 (
WINDOW
 *,);

806 
NCURSES_EXPORT
(Ë
w£ts¸ªg
 (
WINDOW
 *,,);

807 
NCURSES_EXPORT
(Ë
w°™dout
 (
WINDOW
 *);

808 
NCURSES_EXPORT
(Ë
w°™díd
 (
WINDOW
 *);

809 
NCURSES_EXPORT
(Ë
wsyncdown
 (
WINDOW
 *);

810 
NCURSES_EXPORT
(Ë
wsyncup
 (
WINDOW
 *);

811 
NCURSES_EXPORT
(Ë
wtimeout
 (
WINDOW
 *,);

812 
NCURSES_EXPORT
(Ë
wtouch 
 (
WINDOW
 *,,,);

813 
NCURSES_EXPORT
(Ë
wvlöe
 (
WINDOW
 *,
chty≥
,);

818 #i‚de‡
_XOPEN_SOURCE_EXTENDED


819 
	#vid_©å
(
a
,
∑ú
,
›ts
Ë
	`vid©å
◊)

	)

824 
	#NCURSES_ATTR_SHIFT
 8

	)

825 
	#NCURSES_BITS
(
mask
,
shi·
Ë((maskË<< ((shi·Ë+ 
NCURSES_ATTR_SHIFT
))

	)

827 
	#A_NORMAL
 (1UL - 1UL)

	)

828 
	#A_ATTRIBUTES
 
	`NCURSES_BITS
(~(1UL - 1UL),0)

	)

829 
	#A_CHARTEXT
 (
	`NCURSES_BITS
(1UL,0Ë- 1UL)

	)

830 
	#A_COLOR
 
	`NCURSES_BITS
(((1ULË<< 8Ë- 1UL,0)

	)

831 
	#A_STANDOUT
 
	`NCURSES_BITS
(1UL,8)

	)

832 
	#A_UNDERLINE
 
	`NCURSES_BITS
(1UL,9)

	)

833 
	#A_REVERSE
 
	`NCURSES_BITS
(1UL,10)

	)

834 
	#A_BLINK
 
	`NCURSES_BITS
(1UL,11)

	)

835 
	#A_DIM
 
	`NCURSES_BITS
(1UL,12)

	)

836 
	#A_BOLD
 
	`NCURSES_BITS
(1UL,13)

	)

837 
	#A_ALTCHARSET
 
	`NCURSES_BITS
(1UL,14)

	)

838 
	#A_INVIS
 
	`NCURSES_BITS
(1UL,15)

	)

839 
	#A_PROTECT
 
	`NCURSES_BITS
(1UL,16)

	)

840 
	#A_HORIZONTAL
 
	`NCURSES_BITS
(1UL,17)

	)

841 
	#A_LEFT
 
	`NCURSES_BITS
(1UL,18)

	)

842 
	#A_LOW
 
	`NCURSES_BITS
(1UL,19)

	)

843 
	#A_RIGHT
 
	`NCURSES_BITS
(1UL,20)

	)

844 
	#A_TOP
 
	`NCURSES_BITS
(1UL,21)

	)

845 
	#A_VERTICAL
 
	`NCURSES_BITS
(1UL,22)

	)

850 
	#COLOR_PAIR
(
n
Ë
	`NCURSES_BITS
“, 0)

	)

851 
	#PAIR_NUMBER
(
a
Ë(
	`NCURSES_CAST
(,((◊Ë& 
A_COLOR
Ë>> 
NCURSES_ATTR_SHIFT
)))

	)

856 
	#wgë°r
(
w
, 
s
Ë
	`wgën°r
(w, s, -1)

	)

857 
	#gën°r
(
s
, 
n
Ë
	`wgën°r
(
°ds¸
, s,Ç)

	)

859 
	#£âîm
(
ãrm
Ë
	`£tu±îm
—îm, 1, (*)0)

	)

861 
	#fixãrm
(Ë
	`ª£t_¥og_mode
()

	)

862 
	#ª£âîm
(Ë
	`ª£t_shñl_mode
()

	)

863 
	#ßvëîm
(Ë
	`def_¥og_mode
()

	)

864 
	#¸mode
(Ë
	`cbªak
()

	)

865 
	#no¸mode
(Ë
	`nocbªak
()

	)

866 
	#gëtmode
()

	)

868 
	#gëyx
(
wö
,
y
,
x
Ë(y = 
	`gëcury
(wö), x = 
	`gëcurx
(wö))

	)

869 
	#gëbegyx
(
wö
,
y
,
x
Ë(y = 
	`gëbegy
(wö), x = 
	`gëbegx
(wö))

	)

870 
	#gëmaxyx
(
wö
,
y
,
x
Ë(y = 
	`gëmaxy
(wö), x = 
	`gëmaxx
(wö))

	)

871 
	#gë∑ryx
(
wö
,
y
,
x
Ë(y = 
	`gë∑ry
(wö), x = 
	`gë∑rx
(wö))

	)

873 
	#gësyx
(
y
,
x
Ëdÿ{ if(
√ws¸
->
_Àaveok
) (y)=(x)=-1; \

874 
	`gëyx
(
√ws¸
,(
y
),(
x
)); \

875 } 0)

	)

876 
	#£tsyx
(
y
,
x
Ëdÿ{ if((y)==-1 && (x)==-1Ë
√ws¸
->
_Àaveok
=
TRUE
; \

877 {
√ws¸
->
_Àaveok
=
FALSE
;
	`wmove
“ews¸,(
y
),(
x
));} \

878 } 0)

	)

881 
	#gë©ås
(
wö
Ë((wö)?(wö)->
_©ås
:
A_NORMAL
)

	)

882 
	#gëcurx
(
wö
Ë((wö)?(wö)->
_curx
:
ERR
)

	)

883 
	#gëcury
(
wö
Ë((wö)?(wö)->
_cury
:
ERR
)

	)

884 
	#gëbegx
(
wö
Ë((wö)?(wö)->
_begx
:
ERR
)

	)

885 
	#gëbegy
(
wö
Ë((wö)?(wö)->
_begy
:
ERR
)

	)

886 
	#gëmaxx
(
wö
Ë((wö)?((wö)->
_maxx
 + 1):
ERR
)

	)

887 
	#gëmaxy
(
wö
Ë((wö)?((wö)->
_maxy
 + 1):
ERR
)

	)

888 
	#gë∑rx
(
wö
Ë((wö)?(wö)->
_∑rx
:
ERR
)

	)

889 
	#gë∑ry
(
wö
Ë((wö)?(wö)->
_∑ry
:
ERR
)

	)

891 
	#w°™dout
(
wö
Ë(
	`w©å£t
(wö,
A_STANDOUT
))

	)

892 
	#w°™díd
(
wö
Ë(
	`w©å£t
(wö,
A_NORMAL
))

	)

894 
	#w©å⁄
(
wö
,
©
Ë
	`w©å_⁄
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

895 
	#w©åoff
(
wö
,
©
Ë
	`w©å_off
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

897 #i‡
deföed
(
_XOPEN_SOURCE_EXTENDED
) && 0

898 
	#w©å£t
(
wö
,
©
Ë((wö)->
_cﬁ‹
 = 
	`PAIR_NUMBER
(at), \

899 (
wö
)->
_©ås
 = (
©
))

	)

901 
	#w©å£t
(
wö
,
©
Ë((wö)->
_©ås
 = (©))

	)

904 
	#s¸ﬁl
(
wö
Ë
	`ws¸l
(wö,1)

	)

906 
	#touchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 1)

	)

907 
	#touchlöe
(
wö
, 
s
, 
c
Ë
	`wtouch 
((wö), s, c, 1)

	)

908 
	#u¡ouchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 0)

	)

910 
	#box
(
wö
, 
v
, 
h
Ë
	`wb‹dî
(wö, v, v, h, h, 0, 0, 0, 0)

	)

911 
	#b‹dî
(
ls
, 
rs
, 
ts
, 
bs
, 
é
, 
å
, 
bl
, 
br
Ë
	`wb‹dî
(
°ds¸
,Üs,Ñs,Ås, bs,Ål,År, bl, br)

	)

912 
	#hlöe
(
ch
, 
n
Ë
	`whlöe
(
°ds¸
, ch,Ç)

	)

913 
	#vlöe
(
ch
, 
n
Ë
	`wvlöe
(
°ds¸
, ch,Ç)

	)

915 
	#wö°r
(
w
, 
s
Ë
	`wön°r
(w, s, -1)

	)

916 
	#wöch°r
(
w
, 
s
Ë
	`wöchn°r
(w, s, -1)

	)

917 
	#wös°r
(
w
, 
s
Ë
	`wö¢°r
(w, s, -1)

	)

919 
	#ªdøwwö
(
wö
Ë
	`wªdøw 
(wö, 0, (wö)->
_maxy
+1)

	)

920 
	#wadd°r
(
wö
,
°r
Ë
	`waddn°r
(wö,°r,-1)

	)

921 
	#waddch°r
(
wö
,
°r
Ë
	`waddchn°r
(wö,°r,-1)

	)

927 
	#addch
(
ch
Ë
	`waddch
(
°ds¸
,ch)

	)

928 
	#addchn°r
(
°r
,
n
Ë
	`waddchn°r
(
°ds¸
,°r,n)

	)

929 
	#addch°r
(
°r
Ë
	`waddch°r
(
°ds¸
,°r)

	)

930 
	#addn°r
(
°r
,
n
Ë
	`waddn°r
(
°ds¸
,°r,n)

	)

931 
	#add°r
(
°r
Ë
	`waddn°r
(
°ds¸
,°r,-1)

	)

932 
	#©åoff
(
©
Ë
	`w©åoff
(
°ds¸
,©)

	)

933 
	#©å⁄
(
©
Ë
	`w©å⁄
(
°ds¸
,©)

	)

934 
	#©å£t
(
©
Ë
	`w©å£t
(
°ds¸
,©)

	)

935 
	#©å_gë
(
≠
,
˝
,
o
Ë
	`w©å_gë
(
°ds¸
,≠,˝,o)

	)

936 
	#©å_off
(
a
,
o
Ë
	`w©å_off
(
°ds¸
,a,o)

	)

937 
	#©å_⁄
(
a
,
o
Ë
	`w©å_⁄
(
°ds¸
,a,o)

	)

938 
	#©å_£t
(
a
,
c
,
o
Ë
	`w©å_£t
(
°ds¸
,a,c,o)

	)

939 
	#bkgd
(
ch
Ë
	`wbkgd
(
°ds¸
,ch)

	)

940 
	#bkgd£t
(
ch
Ë
	`wbkgd£t
(
°ds¸
,ch)

	)

941 
	#chg©
(
n
,
a
,
c
,
o
Ë
	`wchg©
(
°ds¸
,n,a,c,o)

	)

942 
	#˛ór
(Ë
	`w˛ór
(
°ds¸
)

	)

943 
	#˛πobŸ
(Ë
	`w˛πobŸ
(
°ds¸
)

	)

944 
	#˛π€ﬁ
(Ë
	`w˛π€ﬁ
(
°ds¸
)

	)

945 
	#cﬁ‹_£t
(
c
,
o
Ë
	`wcﬁ‹_£t
(
°ds¸
,c,o)

	)

946 
	#dñch
(Ë
	`wdñch
(
°ds¸
)

	)

947 
	#dñëñn
(Ë
	`wösdñ 
(
°ds¸
,-1)

	)

948 
	#echoch¨
(
c
Ë
	`wechoch¨
(
°ds¸
,c)

	)

949 
	#îa£
(Ë
	`wîa£
(
°ds¸
)

	)

950 
	#gëch
(Ë
	`wgëch
(
°ds¸
)

	)

951 
	#gë°r
(
°r
Ë
	`wgë°r
(
°ds¸
,°r)

	)

952 
	#öch
(Ë
	`wöch
(
°ds¸
)

	)

953 
	#öchn°r
(
s
,
n
Ë
	`wöchn°r
(
°ds¸
,s,n)

	)

954 
	#öch°r
(
s
Ë
	`wöch°r
(
°ds¸
,s)

	)

955 
	#ön°r
(
s
,
n
Ë
	`wön°r
(
°ds¸
,s,n)

	)

956 
	#ösch
(
c
Ë
	`wösch
(
°ds¸
,c)

	)

957 
	#ösdñ 
(
n
Ë
	`wösdñ 
(
°ds¸
,n)

	)

958 
	#ö£π 
(Ë
	`wösdñ 
(
°ds¸
,1)

	)

959 
	#ö¢°r
(
s
,
n
Ë
	`wö¢°r
(
°ds¸
,s,n)

	)

960 
	#ös°r
(
s
Ë
	`wös°r
(
°ds¸
,s)

	)

961 
	#ö°r
(
s
Ë
	`wö°r
(
°ds¸
,s)

	)

962 
	#move
(
y
,
x
Ë
	`wmove
(
°ds¸
,y,x)

	)

963 
	#ª‰esh
(Ë
	`wª‰esh
(
°ds¸
)

	)

964 
	#s¸l
(
n
Ë
	`ws¸l
(
°ds¸
,n)

	)

965 
	#£ts¸ªg
(
t
,
b
Ë
	`w£ts¸ªg
(
°ds¸
,t,b)

	)

966 
	#°™díd
(Ë
	`w°™díd
(
°ds¸
)

	)

967 
	#°™dout
(Ë
	`w°™dout
(
°ds¸
)

	)

968 
	#timeout
(
dñay
Ë
	`wtimeout
(
°ds¸
,dñay)

	)

969 
	#wdñëñn
(
wö
Ë
	`wösdñ 
(wö,-1)

	)

970 
	#wö£π 
(
wö
Ë
	`wösdñ 
(wö,1)

	)

976 
	#mvwaddch
(
wö
,
y
,
x
,
ch
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddch
(wö,ch))

	)

977 
	#mvwaddchn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,n))

	)

978 
	#mvwaddch°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,-1))

	)

979 
	#mvwaddn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,n))

	)

980 
	#mvwadd°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,-1))

	)

981 
	#mvwdñch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wdñch
(wö))

	)

982 
	#mvwchg©
(
wö
,
y
,
x
,
n
,
a
,
c
,
o
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wchg©
(wö,n,a,c,o))

	)

983 
	#mvwgëch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgëch
(wö))

	)

984 
	#mvwgën°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgën°r
(wö,°r,n))

	)

985 
	#mvwgë°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgë°r
(wö,°r))

	)

986 
	#mvwhlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`whlöe
(wö,c,n))

	)

987 
	#mvwöch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? 
	`NCURSES_CAST
(
chty≥
, ERRË: 
	`wöch
(wö))

	)

988 
	#mvwöchn°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöchn°r
(wö,s,n))

	)

989 
	#mvwöch°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöch°r
(wö,s))

	)

990 
	#mvwön°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wön°r
(wö,s,n))

	)

991 
	#mvwösch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wösch
(wö,c))

	)

992 
	#mvwö¢°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö¢°r
(wö,s,n))

	)

993 
	#mvwös°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös°r
(wö,s))

	)

994 
	#mvwö°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö°r
(wö,s))

	)

995 
	#mvwvlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wvlöe
(wö,c,n))

	)

997 
	#mvaddch
(
y
,
x
,
ch
Ë
	`mvwaddch
(
°ds¸
,y,x,ch)

	)

998 
	#mvaddchn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddchn°r
(
°ds¸
,y,x,°r,n)

	)

999 
	#mvaddch°r
(
y
,
x
,
°r
Ë
	`mvwaddch°r
(
°ds¸
,y,x,°r)

	)

1000 
	#mvaddn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddn°r
(
°ds¸
,y,x,°r,n)

	)

1001 
	#mvadd°r
(
y
,
x
,
°r
Ë
	`mvwadd°r
(
°ds¸
,y,x,°r)

	)

1002 
	#mvchg©
(
y
,
x
,
n
,
a
,
c
,
o
Ë
	`mvwchg©
(
°ds¸
,y,x,n,a,c,o)

	)

1003 
	#mvdñch
(
y
,
x
Ë
	`mvwdñch
(
°ds¸
,y,x)

	)

1004 
	#mvgëch
(
y
,
x
Ë
	`mvwgëch
(
°ds¸
,y,x)

	)

1005 
	#mvgën°r
(
y
,
x
,
°r
,
n
Ë
	`mvwgën°r
(
°ds¸
,y,x,°r,n)

	)

1006 
	#mvgë°r
(
y
,
x
,
°r
Ë
	`mvwgë°r
(
°ds¸
,y,x,°r)

	)

1007 
	#mvhlöe
(
y
,
x
,
c
,
n
Ë
	`mvwhlöe
(
°ds¸
,y,x,c,n)

	)

1008 
	#mvöch
(
y
,
x
Ë
	`mvwöch
(
°ds¸
,y,x)

	)

1009 
	#mvöchn°r
(
y
,
x
,
s
,
n
Ë
	`mvwöchn°r
(
°ds¸
,y,x,s,n)

	)

1010 
	#mvöch°r
(
y
,
x
,
s
Ë
	`mvwöch°r
(
°ds¸
,y,x,s)

	)

1011 
	#mvön°r
(
y
,
x
,
s
,
n
Ë
	`mvwön°r
(
°ds¸
,y,x,s,n)

	)

1012 
	#mvösch
(
y
,
x
,
c
Ë
	`mvwösch
(
°ds¸
,y,x,c)

	)

1013 
	#mvö¢°r
(
y
,
x
,
s
,
n
Ë
	`mvwö¢°r
(
°ds¸
,y,x,s,n)

	)

1014 
	#mvös°r
(
y
,
x
,
s
Ë
	`mvwös°r
(
°ds¸
,y,x,s)

	)

1015 
	#mvö°r
(
y
,
x
,
s
Ë
	`mvwö°r
(
°ds¸
,y,x,s)

	)

1016 
	#mvvlöe
(
y
,
x
,
c
,
n
Ë
	`mvwvlöe
(
°ds¸
,y,x,c,n)

	)

1021 
	#gëbkgd
(
wö
Ë((wö)->
_bkgd
)

	)

1023 
	#¶k_©å_off
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©åoff
◊))

	)

1024 
	#¶k_©å_⁄
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©å⁄
◊))

	)

1026 #i‡
deföed
(
_XOPEN_SOURCE_EXTENDED
) && 0

1027 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
Ë((wö)->
_©ås
 = (◊Ë& ~
A_COLOR
), \

1028 (
wö
)->
_cﬁ‹
 = (
p
), \

1029 
OK
)

	)

1030 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()(◊Ë!0 && (*◊Ë(wö)->
_©ås
)), \

1031 ()((
p
Ë!0 && (*’Ë(
wö
)->
_cﬁ‹
)), \

1032 
OK
)

	)

1034 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
Ë((wö)->
_©ås
 = ((◊Ë& ~
A_COLOR
Ë| 
	`COLOR_PAIR
’)), 
OK
)

	)

1035 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()(◊Ë!0 && (*◊Ë(wö)->
_©ås
)), \

1036 ()((
p
Ë!0 && (*’Ë
	`PAIR_NUMBER
((
wö
)->
_©ås
))), \

1037 
OK
)

	)

1046 
	#vw_¥ötw
 
vw¥ötw


	)

1047 
	#vw_sˇnw
 
vwsˇnw


	)

1053 
	#vssˇnf
(
a
,
b
,
c
Ë
	`_nc_vssˇnf
◊,b,c)

	)

1054 
NCURSES_EXPORT
(Ë
vssˇnf
(c⁄° *, c⁄° *, 
va_li°
);

1069 
	#KEY_CODE_YES
 0400

	)

1070 
	#KEY_MIN
 0401

	)

1071 
	#KEY_BREAK
 0401

	)

1072 
	#KEY_SRESET
 0530

	)

1073 
	#KEY_RESET
 0531

	)

1077 
	#KEY_DOWN
 0402

	)

1078 
	#KEY_UP
 0403

	)

1079 
	#KEY_LEFT
 0404

	)

1080 
	#KEY_RIGHT
 0405

	)

1081 
	#KEY_HOME
 0406

	)

1082 
	#KEY_BACKSPACE
 0407

	)

1083 
	#KEY_F0
 0410

	)

1084 
	#KEY_F
(
n
Ë(
KEY_F0
+“)Ë

	)

1085 
	#KEY_DL
 0510

	)

1086 
	#KEY_IL
 0511

	)

1087 
	#KEY_DC
 0512

	)

1088 
	#KEY_IC
 0513

	)

1089 
	#KEY_EIC
 0514

	)

1090 
	#KEY_CLEAR
 0515

	)

1091 
	#KEY_EOS
 0516

	)

1092 
	#KEY_EOL
 0517

	)

1093 
	#KEY_SF
 0520

	)

1094 
	#KEY_SR
 0521

	)

1095 
	#KEY_NPAGE
 0522

	)

1096 
	#KEY_PPAGE
 0523

	)

1097 
	#KEY_STAB
 0524

	)

1098 
	#KEY_CTAB
 0525

	)

1099 
	#KEY_CATAB
 0526

	)

1100 
	#KEY_ENTER
 0527

	)

1101 
	#KEY_PRINT
 0532

	)

1102 
	#KEY_LL
 0533

	)

1103 
	#KEY_A1
 0534

	)

1104 
	#KEY_A3
 0535

	)

1105 
	#KEY_B2
 0536

	)

1106 
	#KEY_C1
 0537

	)

1107 
	#KEY_C3
 0540

	)

1108 
	#KEY_BTAB
 0541

	)

1109 
	#KEY_BEG
 0542

	)

1110 
	#KEY_CANCEL
 0543

	)

1111 
	#KEY_CLOSE
 0544

	)

1112 
	#KEY_COMMAND
 0545

	)

1113 
	#KEY_COPY
 0546

	)

1114 
	#KEY_CREATE
 0547

	)

1115 
	#KEY_END
 0550

	)

1116 
	#KEY_EXIT
 0551

	)

1117 
	#KEY_FIND
 0552

	)

1118 
	#KEY_HELP
 0553

	)

1119 
	#KEY_MARK
 0554

	)

1120 
	#KEY_MESSAGE
 0555

	)

1121 
	#KEY_MOVE
 0556

	)

1122 
	#KEY_NEXT
 0557

	)

1123 
	#KEY_OPEN
 0560

	)

1124 
	#KEY_OPTIONS
 0561

	)

1125 
	#KEY_PREVIOUS
 0562

	)

1126 
	#KEY_REDO
 0563

	)

1127 
	#KEY_REFERENCE
 0564

	)

1128 
	#KEY_REFRESH
 0565

	)

1129 
	#KEY_REPLACE
 0566

	)

1130 
	#KEY_RESTART
 0567

	)

1131 
	#KEY_RESUME
 0570

	)

1132 
	#KEY_SAVE
 0571

	)

1133 
	#KEY_SBEG
 0572

	)

1134 
	#KEY_SCANCEL
 0573

	)

1135 
	#KEY_SCOMMAND
 0574

	)

1136 
	#KEY_SCOPY
 0575

	)

1137 
	#KEY_SCREATE
 0576

	)

1138 
	#KEY_SDC
 0577

	)

1139 
	#KEY_SDL
 0600

	)

1140 
	#KEY_SELECT
 0601

	)

1141 
	#KEY_SEND
 0602

	)

1142 
	#KEY_SEOL
 0603

	)

1143 
	#KEY_SEXIT
 0604

	)

1144 
	#KEY_SFIND
 0605

	)

1145 
	#KEY_SHELP
 0606

	)

1146 
	#KEY_SHOME
 0607

	)

1147 
	#KEY_SIC
 0610

	)

1148 
	#KEY_SLEFT
 0611

	)

1149 
	#KEY_SMESSAGE
 0612

	)

1150 
	#KEY_SMOVE
 0613

	)

1151 
	#KEY_SNEXT
 0614

	)

1152 
	#KEY_SOPTIONS
 0615

	)

1153 
	#KEY_SPREVIOUS
 0616

	)

1154 
	#KEY_SPRINT
 0617

	)

1155 
	#KEY_SREDO
 0620

	)

1156 
	#KEY_SREPLACE
 0621

	)

1157 
	#KEY_SRIGHT
 0622

	)

1158 
	#KEY_SRSUME
 0623

	)

1159 
	#KEY_SSAVE
 0624

	)

1160 
	#KEY_SSUSPEND
 0625

	)

1161 
	#KEY_SUNDO
 0626

	)

1162 
	#KEY_SUSPEND
 0627

	)

1163 
	#KEY_UNDO
 0630

	)

1164 
	#KEY_MOUSE
 0631

	)

1165 
	#KEY_RESIZE
 0632

	)

1166 
	#KEY_EVENT
 0633

	)

1168 
	#KEY_MAX
 0777

	)

1177 #i‡
NCURSES_MOUSE_VERSION
 > 1

1178 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 5))

	)

1180 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 6))

	)

1183 
	#NCURSES_BUTTON_RELEASED
 001L

	)

1184 
	#NCURSES_BUTTON_PRESSED
 002L

	)

1185 
	#NCURSES_BUTTON_CLICKED
 004L

	)

1186 
	#NCURSES_DOUBLE_CLICKED
 010L

	)

1187 
	#NCURSES_TRIPLE_CLICKED
 020L

	)

1188 
	#NCURSES_RESERVED_EVENT
 040L

	)

1191 
	#BUTTON1_RELEASED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_RELEASED
)

	)

1192 
	#BUTTON1_PRESSED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_PRESSED
)

	)

1193 
	#BUTTON1_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_CLICKED
)

	)

1194 
	#BUTTON1_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_DOUBLE_CLICKED
)

	)

1195 
	#BUTTON1_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_TRIPLE_CLICKED
)

	)

1197 
	#BUTTON2_RELEASED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_RELEASED
)

	)

1198 
	#BUTTON2_PRESSED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_PRESSED
)

	)

1199 
	#BUTTON2_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_CLICKED
)

	)

1200 
	#BUTTON2_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_DOUBLE_CLICKED
)

	)

1201 
	#BUTTON2_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_TRIPLE_CLICKED
)

	)

1203 
	#BUTTON3_RELEASED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_RELEASED
)

	)

1204 
	#BUTTON3_PRESSED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_PRESSED
)

	)

1205 
	#BUTTON3_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_CLICKED
)

	)

1206 
	#BUTTON3_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_DOUBLE_CLICKED
)

	)

1207 
	#BUTTON3_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_TRIPLE_CLICKED
)

	)

1209 
	#BUTTON4_RELEASED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_RELEASED
)

	)

1210 
	#BUTTON4_PRESSED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_PRESSED
)

	)

1211 
	#BUTTON4_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_CLICKED
)

	)

1212 
	#BUTTON4_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_DOUBLE_CLICKED
)

	)

1213 
	#BUTTON4_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_TRIPLE_CLICKED
)

	)

1219 #i‡
NCURSES_MOUSE_VERSION
 > 1

1221 
	#BUTTON5_RELEASED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_RELEASED
)

	)

1222 
	#BUTTON5_PRESSED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_PRESSED
)

	)

1223 
	#BUTTON5_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_CLICKED
)

	)

1224 
	#BUTTON5_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_DOUBLE_CLICKED
)

	)

1225 
	#BUTTON5_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_TRIPLE_CLICKED
)

	)

1227 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(6, 0001L)

	)

1228 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(6, 0002L)

	)

1229 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(6, 0004L)

	)

1230 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(6, 0010L)

	)

1234 
	#BUTTON1_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_RESERVED_EVENT
)

	)

1235 
	#BUTTON2_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_RESERVED_EVENT
)

	)

1236 
	#BUTTON3_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_RESERVED_EVENT
)

	)

1237 
	#BUTTON4_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_RESERVED_EVENT
)

	)

1239 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(5, 0001L)

	)

1240 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(5, 0002L)

	)

1241 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(5, 0004L)

	)

1242 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(5, 0010L)

	)

1246 
	#ALL_MOUSE_EVENTS
 (
REPORT_MOUSE_POSITION
 - 1)

	)

1249 
	#BUTTON_RELEASE
(
e
, 
x
Ë(”Ë& (001 << (6 * ((xË- 1))))

	)

1250 
	#BUTTON_PRESS
(
e
, 
x
Ë(”Ë& (002 << (6 * ((xË- 1))))

	)

1251 
	#BUTTON_CLICK
(
e
, 
x
Ë(”Ë& (004 << (6 * ((xË- 1))))

	)

1252 
	#BUTTON_DOUBLE_CLICK
(
e
, 
x
Ë(”Ë& (010 << (6 * ((xË- 1))))

	)

1253 
	#BUTTON_TRIPLE_CLICK
(
e
, 
x
Ë(”Ë& (020 << (6 * ((xË- 1))))

	)

1254 
	#BUTTON_RESERVED_EVENT
(
e
, 
x
Ë(”Ë& (040 << (6 * ((xË- 1))))

	)

1258 
	gid
;

1259 
	gx
, 
	gy
, 
	gz
;

1260 
mmask_t
 
	gb°©e
;

1262 
	tMEVENT
;

1264 
NCURSES_EXPORT
(Ë
gëmou£
 (
MEVENT
 *);

1265 
NCURSES_EXPORT
(Ë
ungëmou£
 (
MEVENT
 *);

1266 
NCURSES_EXPORT
(
mmask_t
Ë
mou£mask
 (mmask_t, mmask_t *);

1267 
NCURSES_EXPORT
(
boﬁ
Ë
wí˛o£
 (c⁄° 
WINDOW
 *, , );

1268 
NCURSES_EXPORT
(Ë
mou£öãrvÆ
 ();

1269 
NCURSES_EXPORT
(
boﬁ
Ë
wmou£_åafo
 (c⁄° 
WINDOW
*, *, *, bool);

1270 
NCURSES_EXPORT
(
boﬁ
Ë
mou£_åafo
 (*, *, bool);

1272 
	#mou£_åafo
(
y
,
x
,
to_s¸ìn
Ë
	`wmou£_åafo
(
°ds¸
,y,x,to_s¸ìn)

	)

1276 
NCURSES_EXPORT
(Ë
m˝röt
 (*, );

1277 
NCURSES_EXPORT
(Ë
has_key
 ();

1281 
NCURSES_EXPORT
(Ë
_åa˚f
 (c⁄° *, ...Ë
GCC_PRINTFLIKE
(1,2);

1282 
NCURSES_EXPORT
(Ë
_åa˚dump
 (c⁄° *, 
WINDOW
 *);

1283 
NCURSES_EXPORT
(*Ë
_åa˚©å
 (
©å_t
);

1284 
NCURSES_EXPORT
(*Ë
_åa˚©å2
 (, 
chty≥
);

1285 
NCURSES_EXPORT
(*Ë
_nc_åa˚bôs
 ();

1286 
NCURSES_EXPORT
(*Ë
_åa˚ch¨
 ();

1287 
NCURSES_EXPORT
(*Ë
_åa˚chty≥
 (
chty≥
);

1288 
NCURSES_EXPORT
(*Ë
_åa˚chty≥2
 (, 
chty≥
);

1289 #ifde‡
_XOPEN_SOURCE_EXTENDED


1290 
	#_åa˚ch_t
 
_åa˚cch¨_t


	)

1291 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t
 (c⁄° 
cch¨_t
 *);

1292 
	#_åa˚ch_t2
 
_åa˚cch¨_t2


	)

1293 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t2
 (, c⁄° 
cch¨_t
 *);

1295 
	#_åa˚ch_t
 
_åa˚chty≥


	)

1296 
	#_åa˚ch_t2
 
_åa˚chty≥2


	)

1298 
NCURSES_EXPORT
(*Ë
_åa˚mou£
 (c⁄° 
MEVENT
 *);

1299 
NCURSES_EXPORT
(Ë
åa˚
 (const );

1302 
	#TRACE_DISABLE
 0x0000

	)

1303 
	#TRACE_TIMES
 0x0001

	)

1304 
	#TRACE_TPUTS
 0x0002

	)

1305 
	#TRACE_UPDATE
 0x0004

	)

1306 
	#TRACE_MOVE
 0x0008

	)

1307 
	#TRACE_CHARPUT
 0x0010

	)

1308 
	#TRACE_ORDINARY
 0x001F

	)

1309 
	#TRACE_CALLS
 0x0020

	)

1310 
	#TRACE_VIRTPUT
 0x0040

	)

1311 
	#TRACE_IEVENT
 0x0080

	)

1312 
	#TRACE_BITS
 0x0100

	)

1313 
	#TRACE_ICALLS
 0x0200

	)

1314 
	#TRACE_CCALLS
 0x0400

	)

1315 
	#TRACE_DATABASE
 0x0800

	)

1316 
	#TRACE_ATTRS
 0x1000

	)

1318 
	#TRACE_SHIFT
 13

	)

1319 
	#TRACE_MAXIMUM
 ((1 << 
TRACE_SHIFT
Ë- 1Ë

	)

1321 #i‡
deföed
(
TRACE
Ë|| deföed(
NCURSES_TEST
)

1322 
NCURSES_EXPORT_VAR
(Ë
_nc_›timize_íabÀ
;

1323 
NCURSES_EXPORT
(c⁄° *Ë
_nc_visbuf
 (const *);

1324 
	#OPTIMIZE_MVCUR
 0x01

	)

1325 
	#OPTIMIZE_HASHMAP
 0x02

	)

1326 
	#OPTIMIZE_SCROLL
 0x04

	)

1327 
	#OPTIMIZE_ALL
 0xf‡

	)

1330 #ifde‡
__˝lu•lus


1333 #unde‡
box


1334 #unde‡
˛ór


1335 #unde‡
îa£


1336 #unde‡
move


1337 #unde‡
ª‰esh


	@/usr/include/dlg_config.h

6 
	#DIALOG_PATCHDATE
 20060221

	)

7 
	#DIALOG_VERSION
 "1.0"

	)

8 
	#DLG_ENABLE_NLS
 1

	)

9 
	#DLG_HAVE_ALLOCA
 1

	)

10 
	#DLG_HAVE_ALLOCA_H
 1

	)

11 
	#DLG_HAVE_ARGZ_H
 1

	)

12 
	#DLG_HAVE_COLOR
 1

	)

13 
	#DLG_HAVE_DCGETTEXT
 1

	)

14 
	#DLG_HAVE_DIRENT_H
 1

	)

15 
	#DLG_HAVE_FEOF_UNLOCKED
 1

	)

16 
	#DLG_HAVE_FGETS_UNLOCKED
 1

	)

17 
	#DLG_HAVE_FLUSHINP
 1

	)

18 
	#DLG_HAVE_FORMBOX
 1

	)

19 
	#DLG_HAVE_FSEEKO
 1

	)

20 
	#DLG_HAVE_GAUGE
 1

	)

21 
	#DLG_HAVE_GETBEGX
 1

	)

22 
	#DLG_HAVE_GETBEGY
 1

	)

23 
	#DLG_HAVE_GETBEGYX
 1

	)

24 
	#DLG_HAVE_GETCURX
 1

	)

25 
	#DLG_HAVE_GETCURY
 1

	)

26 
	#DLG_HAVE_GETCWD
 1

	)

27 
	#DLG_HAVE_GETEGID
 1

	)

28 
	#DLG_HAVE_GETEUID
 1

	)

29 
	#DLG_HAVE_GETGID
 1

	)

30 
	#DLG_HAVE_GETMAXX
 1

	)

31 
	#DLG_HAVE_GETMAXY
 1

	)

32 
	#DLG_HAVE_GETMAXYX
 1

	)

33 
	#DLG_HAVE_GETPAGESIZE
 1

	)

34 
	#DLG_HAVE_GETPARX
 1

	)

35 
	#DLG_HAVE_GETPARY
 1

	)

36 
	#DLG_HAVE_GETPARYX
 1

	)

37 
	#DLG_HAVE_GETTEXT
 1

	)

38 
	#DLG_HAVE_GETUID
 1

	)

39 
	#DLG_HAVE_ICONV
 1

	)

40 
	#DLG_HAVE_INTTYPES_H
 1

	)

41 
	#DLG_HAVE_LANGINFO_CODESET
 1

	)

42 
	#DLG_HAVE_LC_MESSAGES
 1

	)

43 
	#DLG_HAVE_LIBINTL_H
 1

	)

44 
	#DLG_HAVE_LIBNCURSESW
 1

	)

45 
	#DLG_HAVE_LIMITS_H
 1

	)

46 
	#DLG_HAVE_LOCALE_H
 1

	)

47 
	#DLG_HAVE_MALLOC_H
 1

	)

48 
	#DLG_HAVE_MEMORY_H
 1

	)

49 
	#DLG_HAVE_MEMPCPY
 1

	)

50 
	#DLG_HAVE_MMAP
 1

	)

51 
	#DLG_HAVE_MUNMAP
 1

	)

52 
	#DLG_HAVE_NCURSESW_NCURSES_H
 1

	)

53 
	#DLG_HAVE_NCURSESW_TERM_H
 1

	)

54 
	#DLG_HAVE_NL_TYPES_H
 1

	)

55 
	#DLG_HAVE_PUTENV
 1

	)

56 
	#DLG_HAVE_RC_FILE
 1

	)

57 
	#DLG_HAVE_SEARCH_H
 1

	)

58 
	#DLG_HAVE_SETENV
 1

	)

59 
	#DLG_HAVE_SETLOCALE
 1

	)

60 
	#DLG_HAVE_STDDEF_H
 1

	)

61 
	#DLG_HAVE_STDINT_H
 1

	)

62 
	#DLG_HAVE_STDLIB_H
 1

	)

63 
	#DLG_HAVE_STPCPY
 1

	)

64 
	#DLG_HAVE_STRCASECMP
 1

	)

65 
	#DLG_HAVE_STRCHR
 1

	)

66 
	#DLG_HAVE_STRDUP
 1

	)

67 
	#DLG_HAVE_STRINGS_H
 1

	)

68 
	#DLG_HAVE_STRING_H
 1

	)

69 
	#DLG_HAVE_STRTOUL
 1

	)

70 
	#DLG_HAVE_SYS_PARAM_H
 1

	)

71 
	#DLG_HAVE_SYS_STAT_H
 1

	)

72 
	#DLG_HAVE_SYS_TYPES_H
 1

	)

73 
	#DLG_HAVE_SYS_WAIT_H
 1

	)

74 
	#DLG_HAVE_TAILBOX
 1

	)

75 
	#DLG_HAVE_TERM_H
 1

	)

76 
	#DLG_HAVE_TSEARCH
 1

	)

77 
	#DLG_HAVE_TYPE_CHTYPE
 1

	)

78 
	#DLG_HAVE_UNISTD_H
 1

	)

79 
	#DLG_HAVE_WAITPID
 1

	)

80 
	#DLG_HAVE_WGET_WCH
 1

	)

81 
	#DLG_HAVE_XDIALOG
 1

	)

82 
	#DLG_HAVE___ARGZ_COUNT
 1

	)

83 
	#DLG_HAVE___ARGZ_NEXT
 1

	)

84 
	#DLG_HAVE___ARGZ_STRINGIFY
 1

	)

85 
	#DLG_ICONV_CONST


	)

86 
	#DLG_MIXEDCASE_FILENAMES
 1

	)

87 
	#DLG_NCURSES
 1

	)

88 
	#DLG_PACKAGE
 "dülog"

	)

89 
	#DLG_RETSIGTYPE
 

	)

90 
	#DLG_STDC_HEADERS
 1

	)

91 
	#DLG_SYSTEM_NAME
 "löux-gnu"

	)

92 
	#DLG_TIME_WITH_SYS_TIME
 1

	)

93 
	#DLG_TYPE_CHTYPE_IS_SCALAR
 1

	)

94 
	#DLG_USE_WIDE_CURSES
 1

	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

93 #unde‡
__USE_ISOC99


94 #unde‡
__USE_POSIX


95 #unde‡
__USE_POSIX2


96 #unde‡
__USE_POSIX199309


97 #unde‡
__USE_POSIX199506


98 #unde‡
__USE_XOPEN


99 #unde‡
__USE_XOPEN_EXTENDED


100 #unde‡
__USE_UNIX98


101 #unde‡
__USE_XOPEN2K


102 #unde‡
__USE_LARGEFILE


103 #unde‡
__USE_LARGEFILE64


104 #unde‡
__USE_FILE_OFFSET64


105 #unde‡
__USE_BSD


106 #unde‡
__USE_SVID


107 #unde‡
__USE_MISC


108 #unde‡
__USE_ATFILE


109 #unde‡
__USE_GNU


110 #unde‡
__USE_REENTRANT


111 #unde‡
__USE_FORTIFY_LEVEL


112 #unde‡
__FAVOR_BSD


113 #unde‡
__KERNEL_STRICT_NAMES


117 #i‚de‡
_LOOSE_KERNEL_NAMES


118 
	#__KERNEL_STRICT_NAMES


	)

122 
	#__USE_ANSI
 1

	)

131 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


132 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

133 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

135 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

140 #i‡
deföed
 
_BSD_SOURCE
 && \

141 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

142 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

143 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

144 
	#__FAVOR_BSD
 1

	)

148 #ifde‡
_GNU_SOURCE


149 #unde‡
_ISOC99_SOURCE


150 
	#_ISOC99_SOURCE
 1

	)

151 #unde‡
_POSIX_SOURCE


152 
	#_POSIX_SOURCE
 1

	)

153 #unde‡
_POSIX_C_SOURCE


154 
	#_POSIX_C_SOURCE
 199506L

	)

155 #unde‡
_XOPEN_SOURCE


156 
	#_XOPEN_SOURCE
 600

	)

157 #unde‡
_XOPEN_SOURCE_EXTENDED


158 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

159 #unde‡
_LARGEFILE64_SOURCE


160 
	#_LARGEFILE64_SOURCE
 1

	)

161 #unde‡
_BSD_SOURCE


162 
	#_BSD_SOURCE
 1

	)

163 #unde‡
_SVID_SOURCE


164 
	#_SVID_SOURCE
 1

	)

165 #unde‡
_ATFILE_SOURCE


166 
	#_ATFILE_SOURCE
 1

	)

171 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

172 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

173 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

174 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

175 
	#_BSD_SOURCE
 1

	)

176 
	#_SVID_SOURCE
 1

	)

183 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

184 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

185 
	#__USE_ISOC99
 1

	)

190 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

191 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

192 
	#_POSIX_SOURCE
 1

	)

193 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

194 
	#_POSIX_C_SOURCE
 2

	)

195 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

196 
	#_POSIX_C_SOURCE
 199506L

	)

198 
	#_POSIX_C_SOURCE
 200112L

	)

202 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


203 
	#__USE_POSIX
 1

	)

206 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


207 
	#__USE_POSIX2
 1

	)

210 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

211 
	#__USE_POSIX199309
 1

	)

214 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

215 
	#__USE_POSIX199506
 1

	)

218 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

219 
	#__USE_XOPEN2K
 1

	)

222 #ifdef 
_XOPEN_SOURCE


223 
	#__USE_XOPEN
 1

	)

224 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

225 
	#__USE_XOPEN_EXTENDED
 1

	)

226 
	#__USE_UNIX98
 1

	)

227 #unde‡
_LARGEFILE_SOURCE


228 
	#_LARGEFILE_SOURCE
 1

	)

229 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

230 
	#__USE_XOPEN2K
 1

	)

231 #unde‡
__USE_ISOC99


232 
	#__USE_ISOC99
 1

	)

235 #ifde‡
_XOPEN_SOURCE_EXTENDED


236 
	#__USE_XOPEN_EXTENDED
 1

	)

241 #ifde‡
_LARGEFILE_SOURCE


242 
	#__USE_LARGEFILE
 1

	)

245 #ifde‡
_LARGEFILE64_SOURCE


246 
	#__USE_LARGEFILE64
 1

	)

249 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

250 
	#__USE_FILE_OFFSET64
 1

	)

253 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


254 
	#__USE_MISC
 1

	)

257 #ifdef 
_BSD_SOURCE


258 
	#__USE_BSD
 1

	)

261 #ifdef 
_SVID_SOURCE


262 
	#__USE_SVID
 1

	)

265 #ifdef 
_ATFILE_SOURCE


266 
	#__USE_ATFILE
 1

	)

269 #ifdef 
_GNU_SOURCE


270 
	#__USE_GNU
 1

	)

273 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


274 
	#__USE_REENTRANT
 1

	)

277 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

278 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

279 #i‡
_FORTIFY_SOURCE
 > 1

280 
	#__USE_FORTIFY_LEVEL
 2

	)

282 
	#__USE_FORTIFY_LEVEL
 1

	)

285 
	#__USE_FORTIFY_LEVEL
 0

	)

289 
	#__STDC_IEC_559__
 1

	)

290 
	#__STDC_IEC_559_COMPLEX__
 1

	)

293 
	#__STDC_ISO_10646__
 200009L

	)

301 #unde‡
__GNU_LIBRARY__


302 
	#__GNU_LIBRARY__
 6

	)

306 
	#__GLIBC__
 2

	)

307 
	#__GLIBC_MINOR__
 4

	)

309 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

310 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

313 #i‡
deföed
 
__GNUC__
 \

314 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

315 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

316 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

317 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

321 #i‚de‡
__ASSEMBLER__


322 #i‚de‡
_SYS_CDEFS_H


323 
	~<sys/cdefs.h
>

328 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


329 
	#__USE_LARGEFILE
 1

	)

330 
	#__USE_LARGEFILE64
 1

	)

336 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

337 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__


338 
	#__USE_EXTERN_INLINES
 1

	)

346 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 
gë›t
 ();

158 #i‚de‡
__√ed_gë›t


159 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
,

161 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

162 
__THROW
;

163 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
,

165 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

166 
__THROW
;

170 #ifdef 
__˝lu•lus


175 #unde‡
__√ed_gë›t


	@/usr/include/langinfo.h

20 #i‚de‡
_LANGINFO_H


21 
	#_LANGINFO_H
 1

	)

24 
	~<∆_ty≥s.h
>

26 
	~<bôs/loˇÀ.h
>

29 
	g__BEGIN_DECLS


35 
	#_NL_ITEM
(
ˇãg‹y
, 
ödex
Ë(((ˇãg‹yË<< 16Ë| (ödex))

	)

38 
	#_NL_ITEM_CATEGORY
(
ôem
Ë((Ë(ôemË>> 16)

	)

39 
	#_NL_ITEM_INDEX
(
ôem
Ë((Ë(ôemË& 0xffff)

	)

47 
	mABDAY_1
 = 
_NL_ITEM
 (
__LC_TIME
, 0),

48 
	#ABDAY_1
 
ABDAY_1


	)

49 
	mABDAY_2
,

50 
	#ABDAY_2
 
ABDAY_2


	)

51 
	mABDAY_3
,

52 
	#ABDAY_3
 
ABDAY_3


	)

53 
	mABDAY_4
,

54 
	#ABDAY_4
 
ABDAY_4


	)

55 
	mABDAY_5
,

56 
	#ABDAY_5
 
ABDAY_5


	)

57 
	mABDAY_6
,

58 
	#ABDAY_6
 
ABDAY_6


	)

59 
	mABDAY_7
,

60 
	#ABDAY_7
 
ABDAY_7


	)

63 
	mDAY_1
,

64 
	#DAY_1
 
DAY_1


	)

65 
	mDAY_2
,

66 
	#DAY_2
 
DAY_2


	)

67 
	mDAY_3
,

68 
	#DAY_3
 
DAY_3


	)

69 
	mDAY_4
,

70 
	#DAY_4
 
DAY_4


	)

71 
	mDAY_5
,

72 
	#DAY_5
 
DAY_5


	)

73 
	mDAY_6
,

74 
	#DAY_6
 
DAY_6


	)

75 
	mDAY_7
,

76 
	#DAY_7
 
DAY_7


	)

79 
	mABMON_1
,

80 
	#ABMON_1
 
ABMON_1


	)

81 
	mABMON_2
,

82 
	#ABMON_2
 
ABMON_2


	)

83 
	mABMON_3
,

84 
	#ABMON_3
 
ABMON_3


	)

85 
	mABMON_4
,

86 
	#ABMON_4
 
ABMON_4


	)

87 
	mABMON_5
,

88 
	#ABMON_5
 
ABMON_5


	)

89 
	mABMON_6
,

90 
	#ABMON_6
 
ABMON_6


	)

91 
	mABMON_7
,

92 
	#ABMON_7
 
ABMON_7


	)

93 
	mABMON_8
,

94 
	#ABMON_8
 
ABMON_8


	)

95 
	mABMON_9
,

96 
	#ABMON_9
 
ABMON_9


	)

97 
	mABMON_10
,

98 
	#ABMON_10
 
ABMON_10


	)

99 
	mABMON_11
,

100 
	#ABMON_11
 
ABMON_11


	)

101 
	mABMON_12
,

102 
	#ABMON_12
 
ABMON_12


	)

105 
	mMON_1
,

106 
	#MON_1
 
MON_1


	)

107 
	mMON_2
,

108 
	#MON_2
 
MON_2


	)

109 
	mMON_3
,

110 
	#MON_3
 
MON_3


	)

111 
	mMON_4
,

112 
	#MON_4
 
MON_4


	)

113 
	mMON_5
,

114 
	#MON_5
 
MON_5


	)

115 
	mMON_6
,

116 
	#MON_6
 
MON_6


	)

117 
	mMON_7
,

118 
	#MON_7
 
MON_7


	)

119 
	mMON_8
,

120 
	#MON_8
 
MON_8


	)

121 
	mMON_9
,

122 
	#MON_9
 
MON_9


	)

123 
	mMON_10
,

124 
	#MON_10
 
MON_10


	)

125 
	mMON_11
,

126 
	#MON_11
 
MON_11


	)

127 
	mMON_12
,

128 
	#MON_12
 
MON_12


	)

130 
	mAM_STR
,

131 
	#AM_STR
 
AM_STR


	)

132 
	mPM_STR
,

133 
	#PM_STR
 
PM_STR


	)

135 
	mD_T_FMT
,

136 
	#D_T_FMT
 
D_T_FMT


	)

137 
	mD_FMT
,

138 
	#D_FMT
 
D_FMT


	)

139 
	mT_FMT
,

140 
	#T_FMT
 
T_FMT


	)

141 
	mT_FMT_AMPM
,

142 
	#T_FMT_AMPM
 
T_FMT_AMPM


	)

144 
	mERA
,

145 
	#ERA
 
ERA


	)

146 
	m__ERA_YEAR
,

147 #ifde‡
__USE_GNU


148 
	#ERA_YEAR
 
__ERA_YEAR


	)

150 
	mERA_D_FMT
,

151 
	#ERA_D_FMT
 
ERA_D_FMT


	)

152 
	mALT_DIGITS
,

153 
	#ALT_DIGITS
 
ALT_DIGITS


	)

154 
	mERA_D_T_FMT
,

155 
	#ERA_D_T_FMT
 
ERA_D_T_FMT


	)

156 
	mERA_T_FMT
,

157 
	#ERA_T_FMT
 
ERA_T_FMT


	)

159 
	m_NL_TIME_ERA_NUM_ENTRIES
,

160 
	m_NL_TIME_ERA_ENTRIES
,

162 
	m_NL_WABDAY_1
,

163 
	m_NL_WABDAY_2
,

164 
	m_NL_WABDAY_3
,

165 
	m_NL_WABDAY_4
,

166 
	m_NL_WABDAY_5
,

167 
	m_NL_WABDAY_6
,

168 
	m_NL_WABDAY_7
,

171 
	m_NL_WDAY_1
,

172 
	m_NL_WDAY_2
,

173 
	m_NL_WDAY_3
,

174 
	m_NL_WDAY_4
,

175 
	m_NL_WDAY_5
,

176 
	m_NL_WDAY_6
,

177 
	m_NL_WDAY_7
,

180 
	m_NL_WABMON_1
,

181 
	m_NL_WABMON_2
,

182 
	m_NL_WABMON_3
,

183 
	m_NL_WABMON_4
,

184 
	m_NL_WABMON_5
,

185 
	m_NL_WABMON_6
,

186 
	m_NL_WABMON_7
,

187 
	m_NL_WABMON_8
,

188 
	m_NL_WABMON_9
,

189 
	m_NL_WABMON_10
,

190 
	m_NL_WABMON_11
,

191 
	m_NL_WABMON_12
,

194 
	m_NL_WMON_1
,

195 
	m_NL_WMON_2
,

196 
	m_NL_WMON_3
,

197 
	m_NL_WMON_4
,

198 
	m_NL_WMON_5
,

199 
	m_NL_WMON_6
,

200 
	m_NL_WMON_7
,

201 
	m_NL_WMON_8
,

202 
	m_NL_WMON_9
,

203 
	m_NL_WMON_10
,

204 
	m_NL_WMON_11
,

205 
	m_NL_WMON_12
,

207 
	m_NL_WAM_STR
,

208 
	m_NL_WPM_STR
,

210 
	m_NL_WD_T_FMT
,

211 
	m_NL_WD_FMT
,

212 
	m_NL_WT_FMT
,

213 
	m_NL_WT_FMT_AMPM
,

215 
	m_NL_WERA_YEAR
,

216 
	m_NL_WERA_D_FMT
,

217 
	m_NL_WALT_DIGITS
,

218 
	m_NL_WERA_D_T_FMT
,

219 
	m_NL_WERA_T_FMT
,

221 
	m_NL_TIME_WEEK_NDAYS
,

222 
	m_NL_TIME_WEEK_1STDAY
,

223 
	m_NL_TIME_WEEK_1STWEEK
,

224 
	m_NL_TIME_FIRST_WEEKDAY
,

225 
	m_NL_TIME_FIRST_WORKDAY
,

226 
	m_NL_TIME_CAL_DIRECTION
,

227 
	m_NL_TIME_TIMEZONE
,

229 
	m_DATE_FMT
,

230 
	#_DATE_FMT
 
_DATE_FMT


	)

231 
	m_NL_W_DATE_FMT
,

233 
	m_NL_TIME_CODESET
,

235 
	m_NL_NUM_LC_TIME
,

240 
	m_NL_COLLATE_NRULES
 = 
_NL_ITEM
 (
__LC_COLLATE
, 0),

241 
	m_NL_COLLATE_RULESETS
,

242 
	m_NL_COLLATE_TABLEMB
,

243 
	m_NL_COLLATE_WEIGHTMB
,

244 
	m_NL_COLLATE_EXTRAMB
,

245 
	m_NL_COLLATE_INDIRECTMB
,

246 
	m_NL_COLLATE_GAP1
,

247 
	m_NL_COLLATE_GAP2
,

248 
	m_NL_COLLATE_GAP3
,

249 
	m_NL_COLLATE_TABLEWC
,

250 
	m_NL_COLLATE_WEIGHTWC
,

251 
	m_NL_COLLATE_EXTRAWC
,

252 
	m_NL_COLLATE_INDIRECTWC
,

253 
	m_NL_COLLATE_SYMB_HASH_SIZEMB
,

254 
	m_NL_COLLATE_SYMB_TABLEMB
,

255 
	m_NL_COLLATE_SYMB_EXTRAMB
,

256 
	m_NL_COLLATE_COLLSEQMB
,

257 
	m_NL_COLLATE_COLLSEQWC
,

258 
	m_NL_COLLATE_CODESET
,

259 
	m_NL_NUM_LC_COLLATE
,

264 
	m_NL_CTYPE_CLASS
 = 
_NL_ITEM
 (
__LC_CTYPE
, 0),

265 
	m_NL_CTYPE_TOUPPER
,

266 
	m_NL_CTYPE_GAP1
,

267 
	m_NL_CTYPE_TOLOWER
,

268 
	m_NL_CTYPE_GAP2
,

269 
	m_NL_CTYPE_CLASS32
,

270 
	m_NL_CTYPE_GAP3
,

271 
	m_NL_CTYPE_GAP4
,

272 
	m_NL_CTYPE_GAP5
,

273 
	m_NL_CTYPE_GAP6
,

274 
	m_NL_CTYPE_CLASS_NAMES
,

275 
	m_NL_CTYPE_MAP_NAMES
,

276 
	m_NL_CTYPE_WIDTH
,

277 
	m_NL_CTYPE_MB_CUR_MAX
,

278 
	m_NL_CTYPE_CODESET_NAME
,

279 
	mCODESET
 = 
_NL_CTYPE_CODESET_NAME
,

280 
	#CODESET
 
CODESET


	)

281 
	m_NL_CTYPE_TOUPPER32
,

282 
	m_NL_CTYPE_TOLOWER32
,

283 
	m_NL_CTYPE_CLASS_OFFSET
,

284 
	m_NL_CTYPE_MAP_OFFSET
,

285 
	m_NL_CTYPE_INDIGITS_MB_LEN
,

286 
	m_NL_CTYPE_INDIGITS0_MB
,

287 
	m_NL_CTYPE_INDIGITS1_MB
,

288 
	m_NL_CTYPE_INDIGITS2_MB
,

289 
	m_NL_CTYPE_INDIGITS3_MB
,

290 
	m_NL_CTYPE_INDIGITS4_MB
,

291 
	m_NL_CTYPE_INDIGITS5_MB
,

292 
	m_NL_CTYPE_INDIGITS6_MB
,

293 
	m_NL_CTYPE_INDIGITS7_MB
,

294 
	m_NL_CTYPE_INDIGITS8_MB
,

295 
	m_NL_CTYPE_INDIGITS9_MB
,

296 
	m_NL_CTYPE_INDIGITS_WC_LEN
,

297 
	m_NL_CTYPE_INDIGITS0_WC
,

298 
	m_NL_CTYPE_INDIGITS1_WC
,

299 
	m_NL_CTYPE_INDIGITS2_WC
,

300 
	m_NL_CTYPE_INDIGITS3_WC
,

301 
	m_NL_CTYPE_INDIGITS4_WC
,

302 
	m_NL_CTYPE_INDIGITS5_WC
,

303 
	m_NL_CTYPE_INDIGITS6_WC
,

304 
	m_NL_CTYPE_INDIGITS7_WC
,

305 
	m_NL_CTYPE_INDIGITS8_WC
,

306 
	m_NL_CTYPE_INDIGITS9_WC
,

307 
	m_NL_CTYPE_OUTDIGIT0_MB
,

308 
	m_NL_CTYPE_OUTDIGIT1_MB
,

309 
	m_NL_CTYPE_OUTDIGIT2_MB
,

310 
	m_NL_CTYPE_OUTDIGIT3_MB
,

311 
	m_NL_CTYPE_OUTDIGIT4_MB
,

312 
	m_NL_CTYPE_OUTDIGIT5_MB
,

313 
	m_NL_CTYPE_OUTDIGIT6_MB
,

314 
	m_NL_CTYPE_OUTDIGIT7_MB
,

315 
	m_NL_CTYPE_OUTDIGIT8_MB
,

316 
	m_NL_CTYPE_OUTDIGIT9_MB
,

317 
	m_NL_CTYPE_OUTDIGIT0_WC
,

318 
	m_NL_CTYPE_OUTDIGIT1_WC
,

319 
	m_NL_CTYPE_OUTDIGIT2_WC
,

320 
	m_NL_CTYPE_OUTDIGIT3_WC
,

321 
	m_NL_CTYPE_OUTDIGIT4_WC
,

322 
	m_NL_CTYPE_OUTDIGIT5_WC
,

323 
	m_NL_CTYPE_OUTDIGIT6_WC
,

324 
	m_NL_CTYPE_OUTDIGIT7_WC
,

325 
	m_NL_CTYPE_OUTDIGIT8_WC
,

326 
	m_NL_CTYPE_OUTDIGIT9_WC
,

327 
	m_NL_CTYPE_TRANSLIT_TAB_SIZE
,

328 
	m_NL_CTYPE_TRANSLIT_FROM_IDX
,

329 
	m_NL_CTYPE_TRANSLIT_FROM_TBL
,

330 
	m_NL_CTYPE_TRANSLIT_TO_IDX
,

331 
	m_NL_CTYPE_TRANSLIT_TO_TBL
,

332 
	m_NL_CTYPE_TRANSLIT_DEFAULT_MISSING_LEN
,

333 
	m_NL_CTYPE_TRANSLIT_DEFAULT_MISSING
,

334 
	m_NL_CTYPE_TRANSLIT_IGNORE_LEN
,

335 
	m_NL_CTYPE_TRANSLIT_IGNORE
,

336 
	m_NL_CTYPE_MAP_TO_NONASCII
,

337 
	m_NL_CTYPE_EXTRA_MAP_1
,

338 
	m_NL_CTYPE_EXTRA_MAP_2
,

339 
	m_NL_CTYPE_EXTRA_MAP_3
,

340 
	m_NL_CTYPE_EXTRA_MAP_4
,

341 
	m_NL_CTYPE_EXTRA_MAP_5
,

342 
	m_NL_CTYPE_EXTRA_MAP_6
,

343 
	m_NL_CTYPE_EXTRA_MAP_7
,

344 
	m_NL_CTYPE_EXTRA_MAP_8
,

345 
	m_NL_CTYPE_EXTRA_MAP_9
,

346 
	m_NL_CTYPE_EXTRA_MAP_10
,

347 
	m_NL_CTYPE_EXTRA_MAP_11
,

348 
	m_NL_CTYPE_EXTRA_MAP_12
,

349 
	m_NL_CTYPE_EXTRA_MAP_13
,

350 
	m_NL_CTYPE_EXTRA_MAP_14
,

351 
	m_NL_NUM_LC_CTYPE
,

356 
	m__INT_CURR_SYMBOL
 = 
_NL_ITEM
 (
__LC_MONETARY
, 0),

357 #ifde‡
__USE_GNU


358 
	#INT_CURR_SYMBOL
 
__INT_CURR_SYMBOL


	)

360 
	m__CURRENCY_SYMBOL
,

361 #ifde‡
__USE_GNU


362 
	#CURRENCY_SYMBOL
 
__CURRENCY_SYMBOL


	)

364 
	m__MON_DECIMAL_POINT
,

365 #ifde‡
__USE_GNU


366 
	#MON_DECIMAL_POINT
 
__MON_DECIMAL_POINT


	)

368 
	m__MON_THOUSANDS_SEP
,

369 #ifde‡
__USE_GNU


370 
	#MON_THOUSANDS_SEP
 
__MON_THOUSANDS_SEP


	)

372 
	m__MON_GROUPING
,

373 #ifde‡
__USE_GNU


374 
	#MON_GROUPING
 
__MON_GROUPING


	)

376 
	m__POSITIVE_SIGN
,

377 #ifde‡
__USE_GNU


378 
	#POSITIVE_SIGN
 
__POSITIVE_SIGN


	)

380 
	m__NEGATIVE_SIGN
,

381 #ifde‡
__USE_GNU


382 
	#NEGATIVE_SIGN
 
__NEGATIVE_SIGN


	)

384 
	m__INT_FRAC_DIGITS
,

385 #ifde‡
__USE_GNU


386 
	#INT_FRAC_DIGITS
 
__INT_FRAC_DIGITS


	)

388 
	m__FRAC_DIGITS
,

389 #ifde‡
__USE_GNU


390 
	#FRAC_DIGITS
 
__FRAC_DIGITS


	)

392 
	m__P_CS_PRECEDES
,

393 #ifde‡
__USE_GNU


394 
	#P_CS_PRECEDES
 
__P_CS_PRECEDES


	)

396 
	m__P_SEP_BY_SPACE
,

397 #ifde‡
__USE_GNU


398 
	#P_SEP_BY_SPACE
 
__P_SEP_BY_SPACE


	)

400 
	m__N_CS_PRECEDES
,

401 #ifde‡
__USE_GNU


402 
	#N_CS_PRECEDES
 
__N_CS_PRECEDES


	)

404 
	m__N_SEP_BY_SPACE
,

405 #ifde‡
__USE_GNU


406 
	#N_SEP_BY_SPACE
 
__N_SEP_BY_SPACE


	)

408 
	m__P_SIGN_POSN
,

409 #ifde‡
__USE_GNU


410 
	#P_SIGN_POSN
 
__P_SIGN_POSN


	)

412 
	m__N_SIGN_POSN
,

413 #ifde‡
__USE_GNU


414 
	#N_SIGN_POSN
 
__N_SIGN_POSN


	)

416 
	m_NL_MONETARY_CRNCYSTR
,

417 
	#CRNCYSTR
 
_NL_MONETARY_CRNCYSTR


	)

418 
	m__INT_P_CS_PRECEDES
,

419 #ifde‡
__USE_GNU


420 
	#INT_P_CS_PRECEDES
 
__INT_P_CS_PRECEDES


	)

422 
	m__INT_P_SEP_BY_SPACE
,

423 #ifde‡
__USE_GNU


424 
	#INT_P_SEP_BY_SPACE
 
__INT_P_SEP_BY_SPACE


	)

426 
	m__INT_N_CS_PRECEDES
,

427 #ifde‡
__USE_GNU


428 
	#INT_N_CS_PRECEDES
 
__INT_N_CS_PRECEDES


	)

430 
	m__INT_N_SEP_BY_SPACE
,

431 #ifde‡
__USE_GNU


432 
	#INT_N_SEP_BY_SPACE
 
__INT_N_SEP_BY_SPACE


	)

434 
	m__INT_P_SIGN_POSN
,

435 #ifde‡
__USE_GNU


436 
	#INT_P_SIGN_POSN
 
__INT_P_SIGN_POSN


	)

438 
	m__INT_N_SIGN_POSN
,

439 #ifde‡
__USE_GNU


440 
	#INT_N_SIGN_POSN
 
__INT_N_SIGN_POSN


	)

442 
	m_NL_MONETARY_DUO_INT_CURR_SYMBOL
,

443 
	m_NL_MONETARY_DUO_CURRENCY_SYMBOL
,

444 
	m_NL_MONETARY_DUO_INT_FRAC_DIGITS
,

445 
	m_NL_MONETARY_DUO_FRAC_DIGITS
,

446 
	m_NL_MONETARY_DUO_P_CS_PRECEDES
,

447 
	m_NL_MONETARY_DUO_P_SEP_BY_SPACE
,

448 
	m_NL_MONETARY_DUO_N_CS_PRECEDES
,

449 
	m_NL_MONETARY_DUO_N_SEP_BY_SPACE
,

450 
	m_NL_MONETARY_DUO_INT_P_CS_PRECEDES
,

451 
	m_NL_MONETARY_DUO_INT_P_SEP_BY_SPACE
,

452 
	m_NL_MONETARY_DUO_INT_N_CS_PRECEDES
,

453 
	m_NL_MONETARY_DUO_INT_N_SEP_BY_SPACE
,

454 
	m_NL_MONETARY_DUO_P_SIGN_POSN
,

455 
	m_NL_MONETARY_DUO_N_SIGN_POSN
,

456 
	m_NL_MONETARY_DUO_INT_P_SIGN_POSN
,

457 
	m_NL_MONETARY_DUO_INT_N_SIGN_POSN
,

458 
	m_NL_MONETARY_UNO_VALID_FROM
,

459 
	m_NL_MONETARY_UNO_VALID_TO
,

460 
	m_NL_MONETARY_DUO_VALID_FROM
,

461 
	m_NL_MONETARY_DUO_VALID_TO
,

462 
	m_NL_MONETARY_CONVERSION_RATE
,

463 
	m_NL_MONETARY_DECIMAL_POINT_WC
,

464 
	m_NL_MONETARY_THOUSANDS_SEP_WC
,

465 
	m_NL_MONETARY_CODESET
,

466 
	m_NL_NUM_LC_MONETARY
,

470 
	m__DECIMAL_POINT
 = 
_NL_ITEM
 (
__LC_NUMERIC
, 0),

471 #ifde‡
__USE_GNU


472 
	#DECIMAL_POINT
 
__DECIMAL_POINT


	)

474 
	mRADIXCHAR
 = 
__DECIMAL_POINT
,

475 
	#RADIXCHAR
 
RADIXCHAR


	)

476 
	m__THOUSANDS_SEP
,

477 #ifde‡
__USE_GNU


478 
	#THOUSANDS_SEP
 
__THOUSANDS_SEP


	)

480 
	mTHOUSEP
 = 
__THOUSANDS_SEP
,

481 
	#THOUSEP
 
THOUSEP


	)

482 
	m__GROUPING
,

483 #ifde‡
__USE_GNU


484 
	#GROUPING
 
__GROUPING


	)

486 
	m_NL_NUMERIC_DECIMAL_POINT_WC
,

487 
	m_NL_NUMERIC_THOUSANDS_SEP_WC
,

488 
	m_NL_NUMERIC_CODESET
,

489 
	m_NL_NUM_LC_NUMERIC
,

491 
	m__YESEXPR
 = 
_NL_ITEM
 (
__LC_MESSAGES
, 0),

492 
	#YESEXPR
 
__YESEXPR


	)

493 
	m__NOEXPR
,

494 
	#NOEXPR
 
__NOEXPR


	)

495 
	m__YESSTR
,

496 #i‡
deföed
 
__USE_GNU
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

497 
	#YESSTR
 
__YESSTR


	)

499 
	m__NOSTR
,

500 #i‡
deföed
 
__USE_GNU
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

501 
	#NOSTR
 
__NOSTR


	)

503 
	m_NL_MESSAGES_CODESET
,

504 
	m_NL_NUM_LC_MESSAGES
,

506 
	m_NL_PAPER_HEIGHT
 = 
_NL_ITEM
 (
__LC_PAPER
, 0),

507 
	m_NL_PAPER_WIDTH
,

508 
	m_NL_PAPER_CODESET
,

509 
	m_NL_NUM_LC_PAPER
,

511 
	m_NL_NAME_NAME_FMT
 = 
_NL_ITEM
 (
__LC_NAME
, 0),

512 
	m_NL_NAME_NAME_GEN
,

513 
	m_NL_NAME_NAME_MR
,

514 
	m_NL_NAME_NAME_MRS
,

515 
	m_NL_NAME_NAME_MISS
,

516 
	m_NL_NAME_NAME_MS
,

517 
	m_NL_NAME_CODESET
,

518 
	m_NL_NUM_LC_NAME
,

520 
	m_NL_ADDRESS_POSTAL_FMT
 = 
_NL_ITEM
 (
__LC_ADDRESS
, 0),

521 
	m_NL_ADDRESS_COUNTRY_NAME
,

522 
	m_NL_ADDRESS_COUNTRY_POST
,

523 
	m_NL_ADDRESS_COUNTRY_AB2
,

524 
	m_NL_ADDRESS_COUNTRY_AB3
,

525 
	m_NL_ADDRESS_COUNTRY_CAR
,

526 
	m_NL_ADDRESS_COUNTRY_NUM
,

527 
	m_NL_ADDRESS_COUNTRY_ISBN
,

528 
	m_NL_ADDRESS_LANG_NAME
,

529 
	m_NL_ADDRESS_LANG_AB
,

530 
	m_NL_ADDRESS_LANG_TERM
,

531 
	m_NL_ADDRESS_LANG_LIB
,

532 
	m_NL_ADDRESS_CODESET
,

533 
	m_NL_NUM_LC_ADDRESS
,

535 
	m_NL_TELEPHONE_TEL_INT_FMT
 = 
_NL_ITEM
 (
__LC_TELEPHONE
, 0),

536 
	m_NL_TELEPHONE_TEL_DOM_FMT
,

537 
	m_NL_TELEPHONE_INT_SELECT
,

538 
	m_NL_TELEPHONE_INT_PREFIX
,

539 
	m_NL_TELEPHONE_CODESET
,

540 
	m_NL_NUM_LC_TELEPHONE
,

542 
	m_NL_MEASUREMENT_MEASUREMENT
 = 
_NL_ITEM
 (
__LC_MEASUREMENT
, 0),

543 
	m_NL_MEASUREMENT_CODESET
,

544 
	m_NL_NUM_LC_MEASUREMENT
,

546 
	m_NL_IDENTIFICATION_TITLE
 = 
_NL_ITEM
 (
__LC_IDENTIFICATION
, 0),

547 
	m_NL_IDENTIFICATION_SOURCE
,

548 
	m_NL_IDENTIFICATION_ADDRESS
,

549 
	m_NL_IDENTIFICATION_CONTACT
,

550 
	m_NL_IDENTIFICATION_EMAIL
,

551 
	m_NL_IDENTIFICATION_TEL
,

552 
	m_NL_IDENTIFICATION_FAX
,

553 
	m_NL_IDENTIFICATION_LANGUAGE
,

554 
	m_NL_IDENTIFICATION_TERRITORY
,

555 
	m_NL_IDENTIFICATION_AUDIENCE
,

556 
	m_NL_IDENTIFICATION_APPLICATION
,

557 
	m_NL_IDENTIFICATION_ABBREVIATION
,

558 
	m_NL_IDENTIFICATION_REVISION
,

559 
	m_NL_IDENTIFICATION_DATE
,

560 
	m_NL_IDENTIFICATION_CATEGORY
,

561 
	m_NL_IDENTIFICATION_CODESET
,

562 
	m_NL_NUM_LC_IDENTIFICATION
,

565 
	m_NL_NUM


570 
	#_NL_LOCALE_NAME
(
ˇãg‹y
Ë
	`_NL_ITEM
 ((ˇãg‹y), -1)

	)

571 #ifde‡
__USE_GNU


572 
	#NL_LOCALE_NAME
(
ˇãg‹y
Ë
	`_NL_LOCALE_NAME
 (ˇãg‹y)

	)

582 *
	$∆_œngöfo
 (
∆_ôem
 
__ôem
Ë
__THROW
;

585 #ifdef 
__USE_GNU


590 
	~<xloˇÀ.h
>

593 *
	`∆_œngöfo_l
 (
∆_ôem
 
__ôem
, 
__loˇÀ_t
 
l
);

596 
__END_DECLS


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

147 
	#_IO_SKIPWS
 01

	)

148 
	#_IO_LEFT
 02

	)

149 
	#_IO_RIGHT
 04

	)

150 
	#_IO_INTERNAL
 010

	)

151 
	#_IO_DEC
 020

	)

152 
	#_IO_OCT
 040

	)

153 
	#_IO_HEX
 0100

	)

154 
	#_IO_SHOWBASE
 0200

	)

155 
	#_IO_SHOWPOINT
 0400

	)

156 
	#_IO_UPPERCASE
 01000

	)

157 
	#_IO_SHOWPOS
 02000

	)

158 
	#_IO_SCIENTIFIC
 04000

	)

159 
	#_IO_FIXED
 010000

	)

160 
	#_IO_UNITBUF
 020000

	)

161 
	#_IO_STDIO
 040000

	)

162 
	#_IO_DONT_CLOSE
 0100000

	)

163 
	#_IO_BOOLALPHA
 0200000

	)

166 
_IO_jump_t
; 
	g_IO_FILE
;

169 #ifde‡
_IO_MTSAFE_IO


170 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

171 
	~<bôs/°dio-lock.h
>

176 
	t_IO_lock_t
;

182 
	s_IO_m¨kî
 {

183 
_IO_m¨kî
 *
	m_√xt
;

184 
_IO_FILE
 *
	m_sbuf
;

188 
	m_pos
;

190 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

191 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

192 
	mpublic
:

193 
°ªamm¨kî
(
°ªambuf
 *
sb
);

194 ~
°ªamm¨kî
();

195 
ßvög
(Ë{  
	m_•os
 == -2; }

196 
dñè
(
°ªamm¨kî
&);

197 
dñè
();

202 
	e__codecvt_ªsu…


204 
	m__codecvt_ok
,

205 
	m__codecvt_∑πül
,

206 
	m__codecvt_îr‹
,

207 
	m__codecvt_noc⁄v


210 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


213 
	s_IO_codecvt


215 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

216 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

217 
	m__mb°©e_t
 *,

218 c⁄° 
	mwch¨_t
 *,

219 c⁄° 
	mwch¨_t
 *,

220 c⁄° 
	mwch¨_t
 **, *,

222 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

223 
	m__mb°©e_t
 *, *,

225 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

226 
	m__mb°©e_t
 *,

228 c⁄° **, 
	mwch¨_t
 *,

229 
	mwch¨_t
 *, wchar_t **);

230 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

231 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

232 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

233 c⁄° *, c⁄° *, 
	m_IO_size_t
);

234 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

236 
_IO_ic⁄v_t
 
	m__cd_ö
;

237 
_IO_ic⁄v_t
 
	m__cd_out
;

241 
	s_IO_wide_d©a


243 
wch¨_t
 *
	m_IO_ªad_±r
;

244 
wch¨_t
 *
	m_IO_ªad_íd
;

245 
wch¨_t
 *
	m_IO_ªad_ba£
;

246 
wch¨_t
 *
	m_IO_wrôe_ba£
;

247 
wch¨_t
 *
	m_IO_wrôe_±r
;

248 
wch¨_t
 *
	m_IO_wrôe_íd
;

249 
wch¨_t
 *
	m_IO_buf_ba£
;

250 
wch¨_t
 *
	m_IO_buf_íd
;

252 
wch¨_t
 *
	m_IO_ßve_ba£
;

253 
wch¨_t
 *
	m_IO_backup_ba£
;

255 
wch¨_t
 *
	m_IO_ßve_íd
;

257 
__mb°©e_t
 
	m_IO_°©e
;

258 
__mb°©e_t
 
	m_IO_œ°_°©e
;

259 
_IO_codecvt
 
	m_codecvt
;

261 
wch¨_t
 
	m_sh‹tbuf
[1];

263 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

267 
	s_IO_FILE
 {

268 
	m_Êags
;

269 
	#_IO_fûe_Êags
 
_Êags


	)

273 * 
	m_IO_ªad_±r
;

274 * 
	m_IO_ªad_íd
;

275 * 
	m_IO_ªad_ba£
;

276 * 
	m_IO_wrôe_ba£
;

277 * 
	m_IO_wrôe_±r
;

278 * 
	m_IO_wrôe_íd
;

279 * 
	m_IO_buf_ba£
;

280 * 
	m_IO_buf_íd
;

282 *
	m_IO_ßve_ba£
;

283 *
	m_IO_backup_ba£
;

284 *
	m_IO_ßve_íd
;

286 
_IO_m¨kî
 *
	m_m¨kîs
;

288 
_IO_FILE
 *
	m_chaö
;

290 
	m_fûío
;

292 
	m_blksize
;

294 
	m_Êags2
;

296 
_IO_off_t
 
	m_ﬁd_off£t
;

298 
	#__HAVE_COLUMN


	)

300 
	m_cur_cﬁumn
;

301 sig√d 
	m_vèbÀ_off£t
;

302 
	m_sh‹tbuf
[1];

306 
_IO_lock_t
 *
	m_lock
;

307 #ifde‡
_IO_USE_OLD_IO_FILE


310 
	s_IO_FILE_com∂ëe


312 
_IO_FILE
 
	m_fûe
;

314 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

315 
_IO_off64_t
 
	m_off£t
;

316 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


318 
_IO_codecvt
 *
	m_codecvt
;

319 
_IO_wide_d©a
 *
	m_wide_d©a
;

320 
_IO_FILE
 *
	m_‰ìªs_li°
;

321 *
	m_‰ìªs_buf
;

322 
size_t
 
	m_‰ìªs_size
;

324 *
	m__∑d1
;

325 *
	m__∑d2
;

326 *
	m__∑d3
;

327 *
	m__∑d4
;

328 
size_t
 
	m__∑d5
;

330 
	m_mode
;

332 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

336 #i‚de‡
__˝lu•lus


337 
_IO_FILE
 
	t_IO_FILE
;

340 
	g_IO_FILE_∂us
;

342 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

343 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

344 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

345 #i‚de‡
_LIBC


346 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

347 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

348 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

350 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

351 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

352 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

360 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

368 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

369 
	tsize_t
 
	t__n
);

377 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

380 
	t__io_˛o£_‚
 (*
	t__cookõ
);

383 #ifde‡
_GNU_SOURCE


385 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

386 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

387 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

388 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

393 
__io_ªad_‚
 *
	mªad
;

394 
__io_wrôe_‚
 *
	mwrôe
;

395 
__io_£ek_‚
 *
	m£ek
;

396 
__io_˛o£_‚
 *
	m˛o£
;

397 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

398 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

400 
	g_IO_cookõ_fûe
;

403 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

404 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

408 #ifde‡
__˝lu•lus


412 
__undîÊow
 (
_IO_FILE
 *Ë
__THROW
;

413 
__uÊow
 (
_IO_FILE
 *Ë
__THROW
;

414 
__ovîÊow
 (
_IO_FILE
 *, Ë
__THROW
;

415 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *Ë
__THROW
;

416 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *Ë
__THROW
;

417 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wöt_tË
__THROW
;

419 #i‡ 
__GNUC__
 >= 3

420 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

422 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

425 
	#_IO_gëc_u∆ocked
(
_Â
) \

426 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

427 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

428 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

429 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

430 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

431 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

432 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

433 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

434 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

435 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

437 
	#_IO_gëwc_u∆ocked
(
_Â
) \

438 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 >(_Â)->_wide_d©a->
_IO_ªad_íd
,\

440 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

441 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

442 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

443 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
, 0) \

444 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

445 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

447 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

448 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

450 
_IO_gëc
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

451 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
Ë
__THROW
;

452 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

453 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

455 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

458 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

459 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

461 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

462 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

463 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

465 #ifde‡
_IO_MTSAFE_IO


466 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

467 
	#_IO_Êockfûe
(
_Â
) \

468 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

469 
	#_IO_fu∆ockfûe
(
_Â
) \

470 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

472 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

473 
	#_IO_Êockfûe
(
_Â
Ë

	)

474 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

475 
	#_IO_·rylockfûe
(
_Â
Ë

	)

476 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

477 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

480 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

481 
_IO_va_li°
, *
__ª°ri˘
);

482 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

483 
_IO_va_li°
);

484 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_tË
__THROW
;

485 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_tË
__THROW
;

487 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , Ë
__THROW
;

488 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, Ë
__THROW
;

490 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

492 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


493 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

494 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
Ë
__THROW
;

495 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

496 #i‡
__GNUC__
 >= 2

499 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


500 
	~<shlib-com∑t.h
>

501 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

502 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

503 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

504 c⁄° 
_IO_°dö_u£d
;

505 
wók_exã∫
 (
_IO_°dö_u£d
);

508 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


509 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

513 
	#_IO_fwide
(
__Â
, 
__mode
) \

514 ({ 
__ªsu…
 = (
__mode
); \

515 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

517 i‡((
__Â
)->
_mode
 == 0) \

519 (
__Â
)->
_mode
 = -1; \

520 
__ªsu…
 = (
__Â
)->
_mode
; \

522 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

523 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

525 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

526 
__ªsu…
; })

	)

529 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

530 
_IO_va_li°
, *
__ª°ri˘
);

531 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

532 
_IO_va_li°
);

533 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_tË
__THROW
;

534 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

537 #ifde‡
__LDBL_COMPAT


538 
	~<bôs/libio-ldbl.h
>

541 #ifde‡
__˝lu•lus


	@/usr/include/math.h

25 #i‚def 
_MATH_H


26 
	#_MATH_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/huge_vÆ.h
>

35 #ifde‡
__USE_ISOC99


36 
	~<bôs/huge_vÆf.h
>

37 
	~<bôs/huge_vÆl.h
>

40 
	~<bôs/öf.h
>

43 
	~<bôs/«n.h
>

47 
	~<bôs/m©hdef.h
>

54 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

56 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

57 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

58 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

59 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

61 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

62 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

63 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

64 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

65 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

67 
	#_MdoubÀ_
 

	)

68 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

69 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

70 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

71 
	~<bôs/m©hˇŒs.h
>

72 #unde‡
_MdoubÀ_


73 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


74 #unde‡
_MdoubÀ_END_NAMESPACE


75 #unde‡
__MATH_PRECNAME


77 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


83 #i‚de‡
_MÊﬂt_


84 
	#_MÊﬂt_
 

	)

86 
	#_MdoubÀ_
 
_MÊﬂt_


	)

87 #ifde‡
__STDC__


88 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

90 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
f
 
	)
r

92 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

93 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

94 
	~<bôs/m©hˇŒs.h
>

95 #unde‡
_MdoubÀ_


96 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


97 #unde‡
_MdoubÀ_END_NAMESPACE


98 #unde‡
__MATH_PRECNAME


100 #i‡(
__STDC__
 - 0 || 
__GNUC__
 - 0) \

101 && (!
deföed
 
__NO_LONG_DOUBLE_MATH
 || deföed 
__LDBL_COMPAT
)

102 #ifde‡
__LDBL_COMPAT


104 #ifde‡
__USE_ISOC99


105 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

106 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

107 #ifde‡
__REDIRECT_NTH


108 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

109 
__∆dbl_√xâow¨df
)

110 
	`__©åibuã__
 ((
__c⁄°__
));

111 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

112 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

113 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

114 (
__x
, 
__y
),

115 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

122 #unde‡
__MATHDECL_1


123 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

124 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

125 
¨gs
, 
Æüs
)

	)

126 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

127 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

130 #i‚de‡
_Ml⁄g_doubÀ_


131 
	#_Ml⁄g_doubÀ_
 

	)

133 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

134 #ifde‡
__STDC__


135 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

137 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
l
 
	)
r

139 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

140 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

141 
	~<bôs/m©hˇŒs.h
>

142 #unde‡
_MdoubÀ_


143 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


144 #unde‡
_MdoubÀ_END_NAMESPACE


145 #unde‡
__MATH_PRECNAME


150 #unde‡
__MATHDECL_1


151 #unde‡
__MATHDECL


152 #unde‡
__MATHCALL


155 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


157 
signgam
;

162 #ifde‡
__USE_ISOC99


200 
FP_NAN
,

201 
	#FP_NAN
 
FP_NAN


	)

202 
FP_INFINITE
,

203 
	#FP_INFINITE
 
FP_INFINITE


	)

204 
FP_ZERO
,

205 
	#FP_ZERO
 
FP_ZERO


	)

206 
FP_SUBNORMAL
,

207 
	#FP_SUBNORMAL
 
FP_SUBNORMAL


	)

208 
FP_NORMAL


209 
	#FP_NORMAL
 
FP_NORMAL


	)

213 #ifde‡
__NO_LONG_DOUBLE_MATH


214 
	#Â˛assify
(
x
) \

215 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

217 
	#Â˛assify
(
x
) \

218 ( (
x
) ==  () \

219 ? 
	`__Â˛assifyf
 (
x
) \

220 :  (
x
) ==  () \

221 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

225 #ifde‡
__NO_LONG_DOUBLE_MATH


226 
	#signbô
(
x
) \

227 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

229 
	#signbô
(
x
) \

230 ( (
x
) ==  () \

231 ? 
	`__signbôf
 (
x
) \

232 :  (
x
) ==  () \

233 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

237 #ifde‡
__NO_LONG_DOUBLE_MATH


238 
	#isföôe
(
x
) \

239 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

241 
	#isföôe
(
x
) \

242 ( (
x
) ==  () \

243 ? 
	`__föôef
 (
x
) \

244 :  (
x
) ==  () \

245 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

249 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

253 #ifde‡
__NO_LONG_DOUBLE_MATH


254 
	#i¢™
(
x
) \

255 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

257 
	#i¢™
(
x
) \

258 ( (
x
) ==  () \

259 ? 
	`__i¢™f
 (
x
) \

260 :  (
x
) ==  () \

261 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

265 #ifde‡
__NO_LONG_DOUBLE_MATH


266 
	#isöf
(
x
) \

267 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

269 
	#isöf
(
x
) \

270 ( (
x
) ==  () \

271 ? 
	`__isöff
 (
x
) \

272 :  (
x
) ==  () \

273 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

277 
	#MATH_ERRNO
 1

	)

278 
	#MATH_ERREXCEPT
 2

	)

282 #ifdef 
__USE_MISC


286 
_IEEE_
 = -1,

287 
_SVID_
,

288 
_XOPEN_
,

289 
_POSIX_
,

290 
_ISOC_


291 } 
	t_LIB_VERSION_TYPE
;

296 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

300 #ifde‡
__USE_SVID


306 #ifde‡
__˝lu•lus


307 
__ex˚±i⁄


309 
ex˚±i⁄


312 
ty≥
;

313 *
«me
;

314 
¨g1
;

315 
¨g2
;

316 
ªtvÆ
;

317 
	}
};

319 #ifde‡
__˝lu•lus


320 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

322 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

325 
	#X_TLOSS
 1.41484755040568800000e+16

	)

328 
	#DOMAIN
 1

	)

329 
	#SING
 2

	)

330 
	#OVERFLOW
 3

	)

331 
	#UNDERFLOW
 4

	)

332 
	#TLOSS
 5

	)

333 
	#PLOSS
 6

	)

336 
	#HUGE
 3.40282347e+38F

	)

340 #ifde‡
__USE_XOPEN


342 
	#MAXFLOAT
 3.40282347e+38F

	)

349 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


350 
	#M_E
 2.7182818284590452354

	)

351 
	#M_LOG2E
 1.4426950408889634074

	)

352 
	#M_LOG10E
 0.43429448190325182765

	)

353 
	#M_LN2
 0.69314718055994530942

	)

354 
	#M_LN10
 2.30258509299404568402

	)

355 
	#M_PI
 3.14159265358979323846

	)

356 
	#M_PI_2
 1.57079632679489661923

	)

357 
	#M_PI_4
 0.78539816339744830962

	)

358 
	#M_1_PI
 0.31830988618379067154

	)

359 
	#M_2_PI
 0.63661977236758134308

	)

360 
	#M_2_SQRTPI
 1.12837916709551257390

	)

361 
	#M_SQRT2
 1.41421356237309504880

	)

362 
	#M_SQRT1_2
 0.70710678118654752440

	)

368 #ifde‡
__USE_GNU


369 
	#M_El
 2.7182818284590452353602874713526625L

	)

370 
	#M_LOG2El
 1.4426950408889634073599246810018921L

	)

371 
	#M_LOG10El
 0.4342944819032518276511289189166051L

	)

372 
	#M_LN2l
 0.6931471805599453094172321214581766L

	)

373 
	#M_LN10l
 2.3025850929940456840179914546843642L

	)

374 
	#M_PIl
 3.1415926535897932384626433832795029L

	)

375 
	#M_PI_2l
 1.5707963267948966192313216916397514L

	)

376 
	#M_PI_4l
 0.7853981633974483096156608458198757L

	)

377 
	#M_1_PIl
 0.3183098861837906715377675267450287L

	)

378 
	#M_2_PIl
 0.6366197723675813430755350534900574L

	)

379 
	#M_2_SQRTPIl
 1.1283791670955125738961589031215452L

	)

380 
	#M_SQRT2l
 1.4142135623730950488016887242096981L

	)

381 
	#M_SQRT1_2l
 0.7071067811865475244008443621048490L

	)

388 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


389 
	#__NO_MATH_INLINES
 1

	)

392 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

399 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

400 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

401 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

402 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

403 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

404 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

408 #ifde‡
__USE_EXTERN_INLINES


409 
	~<bôs/m©hölöe.h
>

412 #ifde‡
__USE_ISOC99


416 #i‚de‡
isgª©î


417 
	#isgª©î
(
x
, 
y
) \

418 (
__exãnsi⁄__
 \

419 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

420 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

424 #i‚de‡
isgª©îequÆ


425 
	#isgª©îequÆ
(
x
, 
y
) \

426 (
__exãnsi⁄__
 \

427 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

428 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

432 #i‚de‡
i¶ess


433 
	#i¶ess
(
x
, 
y
) \

434 (
__exãnsi⁄__
 \

435 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

436 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

440 #i‚de‡
i¶es£quÆ


441 
	#i¶es£quÆ
(
x
, 
y
) \

442 (
__exãnsi⁄__
 \

443 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

444 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

448 #i‚de‡
i¶essgª©î


449 
	#i¶essgª©î
(
x
, 
y
) \

450 (
__exãnsi⁄__
 \

451 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

452 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

456 #i‚de‡
isun‹dîed


457 
	#isun‹dîed
(
u
, 
v
) \

458 (
__exãnsi⁄__
 \

459 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

460 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

465 
	g__END_DECLS


	@/usr/include/ncurses.h

37 #i‚de‡
__NCURSES_H


38 
	#__NCURSES_H


	)

40 
	#CURSES
 1

	)

41 
	#CURSES_H
 1

	)

50 
	#NCURSES_VERSION_MAJOR
 5

	)

51 
	#NCURSES_VERSION_MINOR
 5

	)

52 
	#NCURSES_VERSION_PATCH
 20060422

	)

55 #unde‡
NCURSES_VERSION


56 
	#NCURSES_VERSION
 "5.5"

	)

61 
	#NCURSES_MOUSE_VERSION
 1

	)

66 
	~<ncur£s_dŒ.h
>

71 #i‚de‡
NCURSES_ENABLE_STDBOOL_H


72 
	#NCURSES_ENABLE_STDBOOL_H
 1

	)

79 #ifde‡
NCURSES_NOMACROS


80 
	#NCURSES_ATTR_T
 
©å_t


	)

83 #i‚de‡
NCURSES_ATTR_T


84 
	#NCURSES_ATTR_T
 

	)

91 #unde‡
NCURSES_CONST


92 
	#NCURSES_CONST
 c⁄°

	)

94 #i‚de‡
NCURSES_INLINE


95 
	#NCURSES_INLINE
 
ölöe


	)

101 #unde‡
NCURSES_COLOR_T


102 
	#NCURSES_COLOR_T
 

	)

107 #unde‡
NCURSES_SIZE_T


108 
	#NCURSES_SIZE_T
 

	)

115 #unde‡
NCURSES_CH_T


116 
	#NCURSES_CH_T
 
chty≥


	)

118 #i‡0 && 
deföed
(
_LP64
)

119 
	tchty≥
;

120 
	tmmask_t
;

122 
	tchty≥
;

123 
	tmmask_t
;

126 
	~<°dio.h
>

127 
	~<un˘æ.h
>

128 
	~<°d¨g.h
>

129 #ifde‡
_XOPEN_SOURCE_EXTENDED


130 
	~<°ddef.h
>

145 #unde‡
TRUE


146 
	#TRUE
 1

	)

148 #unde‡
FALSE


149 
	#FALSE
 0

	)

151 
	tNCURSES_BOOL
;

153 #i‡
deföed
(
__˝lu•lus
)

156 
	#NCURSES_BOOL
 
boﬁ


	)

160 #i‡
NCURSES_ENABLE_STDBOOL_H


161 
	~<°dboﬁ.h
>

163 
	#NCURSES_BOOL
 
boﬁ


	)

166 #unde‡
boﬁ


167 
	#boﬁ
 
NCURSES_BOOL


	)

172 #ifde‡
__˝lu•lus


174 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë
°©ic_ˇ°
<ty≥>(vÆue)

	)

176 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë—y≥)(vÆue)

	)

183 
	#WA_ATTRIBUTES
 
A_ATTRIBUTES


	)

184 
	#WA_NORMAL
 
A_NORMAL


	)

185 
	#WA_STANDOUT
 
A_STANDOUT


	)

186 
	#WA_UNDERLINE
 
A_UNDERLINE


	)

187 
	#WA_REVERSE
 
A_REVERSE


	)

188 
	#WA_BLINK
 
A_BLINK


	)

189 
	#WA_DIM
 
A_DIM


	)

190 
	#WA_BOLD
 
A_BOLD


	)

191 
	#WA_ALTCHARSET
 
A_ALTCHARSET


	)

192 
	#WA_INVIS
 
A_INVIS


	)

193 
	#WA_PROTECT
 
A_PROTECT


	)

194 
	#WA_HORIZONTAL
 
A_HORIZONTAL


	)

195 
	#WA_LEFT
 
A_LEFT


	)

196 
	#WA_LOW
 
A_LOW


	)

197 
	#WA_RIGHT
 
A_RIGHT


	)

198 
	#WA_TOP
 
A_TOP


	)

199 
	#WA_VERTICAL
 
A_VERTICAL


	)

202 
NCURSES_EXPORT_VAR
(Ë
COLORS
;

203 
NCURSES_EXPORT_VAR
(Ë
COLOR_PAIRS
;

205 
	#COLOR_BLACK
 0

	)

206 
	#COLOR_RED
 1

	)

207 
	#COLOR_GREEN
 2

	)

208 
	#COLOR_YELLOW
 3

	)

209 
	#COLOR_BLUE
 4

	)

210 
	#COLOR_MAGENTA
 5

	)

211 
	#COLOR_CYAN
 6

	)

212 
	#COLOR_WHITE
 7

	)

217 
NCURSES_EXPORT_VAR
(
chty≥
*Ë
_nc_acs_m≠
();

218 
	#acs_m≠
 (
	`_nc_acs_m≠
())

	)

220 
NCURSES_EXPORT_VAR
(
chty≥
Ë
acs_m≠
[];

223 
	#NCURSES_ACS
(
c
Ë(
acs_m≠
[
	`NCURSES_CAST
(,c)])

	)

226 
	#ACS_ULCORNER
 
	`NCURSES_ACS
('l'Ë

	)

227 
	#ACS_LLCORNER
 
	`NCURSES_ACS
('m'Ë

	)

228 
	#ACS_URCORNER
 
	`NCURSES_ACS
('k'Ë

	)

229 
	#ACS_LRCORNER
 
	`NCURSES_ACS
('j'Ë

	)

230 
	#ACS_LTEE
 
	`NCURSES_ACS
('t'Ë

	)

231 
	#ACS_RTEE
 
	`NCURSES_ACS
('u'Ë

	)

232 
	#ACS_BTEE
 
	`NCURSES_ACS
('v'Ë

	)

233 
	#ACS_TTEE
 
	`NCURSES_ACS
('w'Ë

	)

234 
	#ACS_HLINE
 
	`NCURSES_ACS
('q'Ë

	)

235 
	#ACS_VLINE
 
	`NCURSES_ACS
('x'Ë

	)

236 
	#ACS_PLUS
 
	`NCURSES_ACS
('n'Ë

	)

237 
	#ACS_S1
 
	`NCURSES_ACS
('o'Ë

	)

238 
	#ACS_S9
 
	`NCURSES_ACS
('s'Ë

	)

239 
	#ACS_DIAMOND
 
	`NCURSES_ACS
('`'Ë

	)

240 
	#ACS_CKBOARD
 
	`NCURSES_ACS
('a'Ë

	)

241 
	#ACS_DEGREE
 
	`NCURSES_ACS
('f'Ë

	)

242 
	#ACS_PLMINUS
 
	`NCURSES_ACS
('g'Ë

	)

243 
	#ACS_BULLET
 
	`NCURSES_ACS
('~'Ë

	)

245 
	#ACS_LARROW
 
	`NCURSES_ACS
(','Ë

	)

246 
	#ACS_RARROW
 
	`NCURSES_ACS
('+'Ë

	)

247 
	#ACS_DARROW
 
	`NCURSES_ACS
('.'Ë

	)

248 
	#ACS_UARROW
 
	`NCURSES_ACS
('-'Ë

	)

249 
	#ACS_BOARD
 
	`NCURSES_ACS
('h'Ë

	)

250 
	#ACS_LANTERN
 
	`NCURSES_ACS
('i'Ë

	)

251 
	#ACS_BLOCK
 
	`NCURSES_ACS
('0'Ë

	)

257 
	#ACS_S3
 
	`NCURSES_ACS
('p'Ë

	)

258 
	#ACS_S7
 
	`NCURSES_ACS
('r'Ë

	)

259 
	#ACS_LEQUAL
 
	`NCURSES_ACS
('y'Ë

	)

260 
	#ACS_GEQUAL
 
	`NCURSES_ACS
('z'Ë

	)

261 
	#ACS_PI
 
	`NCURSES_ACS
('{'Ë

	)

262 
	#ACS_NEQUAL
 
	`NCURSES_ACS
('|'Ë

	)

263 
	#ACS_STERLING
 
	`NCURSES_ACS
('}'Ë

	)

271 
	#ACS_BSSB
 
ACS_ULCORNER


	)

272 
	#ACS_SSBB
 
ACS_LLCORNER


	)

273 
	#ACS_BBSS
 
ACS_URCORNER


	)

274 
	#ACS_SBBS
 
ACS_LRCORNER


	)

275 
	#ACS_SBSS
 
ACS_RTEE


	)

276 
	#ACS_SSSB
 
ACS_LTEE


	)

277 
	#ACS_SSBS
 
ACS_BTEE


	)

278 
	#ACS_BSSS
 
ACS_TTEE


	)

279 
	#ACS_BSBS
 
ACS_HLINE


	)

280 
	#ACS_SBSB
 
ACS_VLINE


	)

281 
	#ACS_SSSS
 
ACS_PLUS


	)

283 #unde‡
ERR


284 
	#ERR
 (-1)

	)

286 #unde‡
OK


287 
	#OK
 (0)

	)

290 
	#_SUBWIN
 0x01

	)

291 
	#_ENDLINE
 0x02

	)

292 
	#_FULLWIN
 0x04

	)

293 
	#_SCROLLWIN
 0x08

	)

294 
	#_ISPAD
 0x10

	)

295 
	#_HASMOVED
 0x20

	)

296 
	#_WRAPPED
 0x40

	)

302 
	#_NOCHANGE
 -1

	)

308 
	#_NEWINDEX
 -1

	)

310 
s¸ìn
 
	tSCREEN
;

311 
_wö_°
 
	tWINDOW
;

313 
chty≥
 
	t©å_t
;

315 #ifde‡
_XOPEN_SOURCE_EXTENDED


318 #ifde‡
mbÀn


319 #unde‡
mbÀn


321 
	~<libutf8.h
>

325 
	~<wch¨.h
>

329 
	twch¨_t
;

333 
	twöt_t
;

336 
	#CCHARW_MAX
 5

	)

339 
©å_t
 
	g©å
;

340 
wch¨_t
 
	gch¨s
[
CCHARW_MAX
];

342 
	gext_cﬁ‹
;

345 
	tcch¨_t
;

349 
	gld©
;

351 
	s_wö_°


353 
NCURSES_SIZE_T
 
	g_cury
, 
	g_curx
;

356 
NCURSES_SIZE_T
 
	g_maxy
, 
	g_maxx
;

357 
NCURSES_SIZE_T
 
	g_begy
, 
	g_begx
;

359 
	g_Êags
;

362 
©å_t
 
	g_©ås
;

363 
chty≥
 
	g_bkgd
;

366 
boﬁ
 
	g_nŸimeout
;

367 
boﬁ
 
	g_˛ór
;

368 
boﬁ
 
	g_Àaveok
;

369 
boﬁ
 
	g_s¸ﬁl
;

370 
boﬁ
 
	g_idlok
;

371 
boﬁ
 
	g_idcok
;

372 
boﬁ
 
	g_immed
;

373 
boﬁ
 
	g_sync
;

374 
boﬁ
 
	g_u£_key∑d
;

375 
	g_dñay
;

377 
ld©
 *
	g_löe
;

380 
NCURSES_SIZE_T
 
	g_ªgt›
;

381 
NCURSES_SIZE_T
 
	g_ªgbŸtom
;

384 
	g_∑rx
;

385 
	g_∑ry
;

386 
WINDOW
 *
	g_∑ª¡
;

389 
	spd©


391 
NCURSES_SIZE_T
 
	g_∑d_y
, 
	g_∑d_x
;

392 
NCURSES_SIZE_T
 
	g_∑d_t›
, 
	g_∑d_À·
;

393 
NCURSES_SIZE_T
 
	g_∑d_bŸtom
, 
	g_∑d_right
;

394 } 
	g_∑d
;

396 
NCURSES_SIZE_T
 
	g_yoff£t
;

398 #ifde‡
_XOPEN_SOURCE_EXTENDED


399 
cch¨_t
 
	g_bkg∫d
;

401 
	g_cﬁ‹
;

406 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
°ds¸
;

407 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
curs¸
;

408 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
√ws¸
;

410 
NCURSES_EXPORT_VAR
(Ë
LINES
;

411 
NCURSES_EXPORT_VAR
(Ë
COLS
;

412 
NCURSES_EXPORT_VAR
(Ë
TABSIZE
;

417 
NCURSES_EXPORT_VAR
(Ë
ESCDELAY
;

419 
NCURSES_EXPORT_VAR
(Ë
âyty≥
[];

425 
NCURSES_EXPORT
(
boﬁ
Ë
is_ãrm_ªsized
 (, );

426 
NCURSES_EXPORT
(*Ë
keybound
 (, );

427 
NCURSES_EXPORT
(c⁄° *Ë
cur£s_vîsi⁄
 ();

428 
NCURSES_EXPORT
(Ë
assume_deÁu…_cﬁ‹s
 (, );

429 
NCURSES_EXPORT
(Ë
deföe_key
 (const *, );

430 
NCURSES_EXPORT
(Ë
key_deföed
 (const *);

431 
NCURSES_EXPORT
(Ë
keyok
 (, 
boﬁ
);

432 
NCURSES_EXPORT
(Ë
ªsize_ãrm
 (, );

433 
NCURSES_EXPORT
(Ë
ªsizëîm
 (, );

434 
NCURSES_EXPORT
(Ë
u£_deÁu…_cﬁ‹s
 ();

435 
NCURSES_EXPORT
(Ë
u£_exãnded_«mes
 (
boﬁ
);

436 
NCURSES_EXPORT
(Ë
u£_Àgacy_codög
 ();

437 
NCURSES_EXPORT
(Ë
wªsize
 (
WINDOW
 *, , );

438 
NCURSES_EXPORT
(Ë
nofûãr
();

440 
	#cur£s_vîsi⁄
(Ë
NCURSES_VERSION


	)

447 #ifde‡
NCURSES_WGETCH_EVENTS


448 #i‡!
deföed
(
__BEOS__
)

449 
	#NCURSES_EVENT_VERSION
 1

	)

455 
	#_NC_EVENT_TIMEOUT_MSEC
 1

	)

456 
	#_NC_EVENT_FILE
 2

	)

457 
	#_NC_EVENT_FILE_READABLE
 2

	)

459 
	#_NC_EVENT_FILE_WRITABLE
 4

	)

460 
	#_NC_EVENT_FILE_EXCEPTION
 8

	)

465 
	gty≥
;

468 
	gtimeout_m£c
;

471 
	gÊags
;

472 
	gfd
;

473 
	gªsu…
;

474 } 
	g„v
;

475 } 
	gd©a
;

476 } 
	t_nc_evít
;

480 
	gcou¡
;

481 
	gªsu…_Êags
;

482 
_nc_evít
 *
	gevíts
[1];

483 } 
	t_nc_evíéi°
;

485 
NCURSES_EXPORT
(Ë
wgëch_evíts
(
WINDOW
 *, 
_nc_evíéi°
 *);

486 
NCURSES_EXPORT
(Ë
wgën°r_evíts
(
WINDOW
 *,*,,
_nc_evíéi°
 *);

498 #i‡!(
deföed
(
__GNUC__
Ë|| deföed(
__GNUG__
Ë|| deföed(
__©åibuã__
))

499 
	#__©åibuã__
(
p
Ë

	)

506 #i‚de‡
GCC_PRINTFLIKE


507 #i‡
deföed
(
GCC_PRINTF
Ë&& !deföed(
¥ötf
)

508 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
¥ötf
,fmt,v¨)))

	)

510 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë

	)

514 #i‚de‡
GCC_SCANFLIKE


515 #i‡
deföed
(
GCC_SCANF
Ë&& !deföed(
sˇnf
)

516 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
sˇnf
,fmt,v¨)))

	)

518 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë

	)

522 #i‚def 
GCC_NORETURN


523 
	#GCC_NORETURN


	)

526 #i‚def 
GCC_UNUSED


527 
	#GCC_UNUSED


	)

537 
NCURSES_EXPORT
(Ë
addch
 (c⁄° 
chty≥
);

538 
NCURSES_EXPORT
(Ë
addchn°r
 (c⁄° 
chty≥
 *, );

539 
NCURSES_EXPORT
(Ë
addch°r
 (c⁄° 
chty≥
 *);

540 
NCURSES_EXPORT
(Ë
addn°r
 (const *, );

541 
NCURSES_EXPORT
(Ë
add°r
 (const *);

542 
NCURSES_EXPORT
(Ë
©åoff
 (
NCURSES_ATTR_T
);

543 
NCURSES_EXPORT
(Ë
©å⁄
 (
NCURSES_ATTR_T
);

544 
NCURSES_EXPORT
(Ë
©å£t
 (
NCURSES_ATTR_T
);

545 
NCURSES_EXPORT
(Ë
©å_gë
 (
©å_t
 *, *, *);

546 
NCURSES_EXPORT
(Ë
©å_off
 (
©å_t
, *);

547 
NCURSES_EXPORT
(Ë
©å_⁄
 (
©å_t
, *);

548 
NCURSES_EXPORT
(Ë
©å_£t
 (
©å_t
, , *);

549 
NCURSES_EXPORT
(Ë
baudøã
 ();

550 
NCURSES_EXPORT
(Ë
bìp
 ();

551 
NCURSES_EXPORT
(Ë
bkgd
 (
chty≥
);

552 
NCURSES_EXPORT
(Ë
bkgd£t
 (
chty≥
);

553 
NCURSES_EXPORT
(Ë
b‹dî
 (
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

554 
NCURSES_EXPORT
(Ë
box
 (
WINDOW
 *, 
chty≥
, chtype);

555 
NCURSES_EXPORT
(
boﬁ
Ë
ˇn_ch™ge_cﬁ‹
 ();

556 
NCURSES_EXPORT
(Ë
cbªak
 ();

557 
NCURSES_EXPORT
(Ë
chg©
 (, 
©å_t
, , const *);

558 
NCURSES_EXPORT
(Ë
˛ór
 ();

559 
NCURSES_EXPORT
(Ë
˛órok
 (
WINDOW
 *,
boﬁ
);

560 
NCURSES_EXPORT
(Ë
˛πobŸ
 ();

561 
NCURSES_EXPORT
(Ë
˛π€ﬁ
 ();

562 
NCURSES_EXPORT
(Ë
cﬁ‹_c⁄ã¡
 (,*,*,*);

563 
NCURSES_EXPORT
(Ë
cﬁ‹_£t
 (,*);

564 
NCURSES_EXPORT
(Ë
COLOR_PAIR
 ();

565 
NCURSES_EXPORT
(Ë
c›ywö
 (c⁄° 
WINDOW
*,WINDOW*,,,,,,,);

566 
NCURSES_EXPORT
(Ë
curs_£t
 ();

567 
NCURSES_EXPORT
(Ë
def_¥og_mode
 ();

568 
NCURSES_EXPORT
(Ë
def_shñl_mode
 ();

569 
NCURSES_EXPORT
(Ë
dñay_ouçut
 ();

570 
NCURSES_EXPORT
(Ë
dñch
 ();

571 
NCURSES_EXPORT
(Ë
dñs¸ìn
 (
SCREEN
 *);

572 
NCURSES_EXPORT
(Ë
dñwö
 (
WINDOW
 *);

573 
NCURSES_EXPORT
(Ë
dñëñn
 ();

574 
NCURSES_EXPORT
(
WINDOW
 *Ë
dîwö
 (WINDOW *,,,,);

575 
NCURSES_EXPORT
(Ë
doupd©e
 ();

576 
NCURSES_EXPORT
(
WINDOW
 *Ë
dupwö
 (WINDOW *);

577 
NCURSES_EXPORT
(Ë
echo
 ();

578 
NCURSES_EXPORT
(Ë
echoch¨
 (c⁄° 
chty≥
);

579 
NCURSES_EXPORT
(Ë
îa£
 ();

580 
NCURSES_EXPORT
(Ë
ídwö
 ();

581 
NCURSES_EXPORT
(Ë
îa£ch¨
 ();

582 
NCURSES_EXPORT
(Ë
fûãr
 ();

583 
NCURSES_EXPORT
(Ë
Êash
 ();

584 
NCURSES_EXPORT
(Ë
Êushöp
 ();

585 
NCURSES_EXPORT
(
chty≥
Ë
gëbkgd
 (
WINDOW
 *);

586 
NCURSES_EXPORT
(Ë
gëch
 ();

587 
NCURSES_EXPORT
(Ë
gën°r
 (*, );

588 
NCURSES_EXPORT
(Ë
gë°r
 (*);

589 
NCURSES_EXPORT
(
WINDOW
 *Ë
gëwö
 (
FILE
 *);

590 
NCURSES_EXPORT
(Ë
hÆfdñay
 ();

591 
NCURSES_EXPORT
(
boﬁ
Ë
has_cﬁ‹s
 ();

592 
NCURSES_EXPORT
(
boﬁ
Ë
has_ic
 ();

593 
NCURSES_EXPORT
(
boﬁ
Ë
has_û
 ();

594 
NCURSES_EXPORT
(Ë
hlöe
 (
chty≥
, );

595 
NCURSES_EXPORT
(Ë
idcok
 (
WINDOW
 *, 
boﬁ
);

596 
NCURSES_EXPORT
(Ë
idlok
 (
WINDOW
 *, 
boﬁ
);

597 
NCURSES_EXPORT
(Ë
immedok
 (
WINDOW
 *, 
boﬁ
);

598 
NCURSES_EXPORT
(
chty≥
Ë
öch
 ();

599 
NCURSES_EXPORT
(Ë
öchn°r
 (
chty≥
 *, );

600 
NCURSES_EXPORT
(Ë
öch°r
 (
chty≥
 *);

601 
NCURSES_EXPORT
(
WINDOW
 *Ë
öôs¸
 ();

602 
NCURSES_EXPORT
(Ë
öô_cﬁ‹
 (,,,);

603 
NCURSES_EXPORT
(Ë
öô_∑ú
 (,,);

604 
NCURSES_EXPORT
(Ë
ön°r
 (*, );

605 
NCURSES_EXPORT
(Ë
ösch
 (
chty≥
);

606 
NCURSES_EXPORT
(Ë
ösdñ 
 ();

607 
NCURSES_EXPORT
(Ë
ö£π 
 ();

608 
NCURSES_EXPORT
(Ë
ö¢°r
 (const *, );

609 
NCURSES_EXPORT
(Ë
ös°r
 (const *);

610 
NCURSES_EXPORT
(Ë
ö°r
 (*);

611 
NCURSES_EXPORT
(Ë
öåÊush
 (
WINDOW
 *,
boﬁ
);

612 
NCURSES_EXPORT
(
boﬁ
Ë
i£ndwö
 ();

613 
NCURSES_EXPORT
(
boﬁ
Ë
is_löëouched
 (
WINDOW
 *,);

614 
NCURSES_EXPORT
(
boﬁ
Ë
is_wötouched
 (
WINDOW
 *);

615 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
key«me
 ();

616 
NCURSES_EXPORT
(Ë
key∑d
 (
WINDOW
 *,
boﬁ
);

617 
NCURSES_EXPORT
(Ë
kûlch¨
 ();

618 
NCURSES_EXPORT
(Ë
Àaveok
 (
WINDOW
 *,
boﬁ
);

619 
NCURSES_EXPORT
(*Ë
l⁄g«me
 ();

620 
NCURSES_EXPORT
(Ë
mëa
 (
WINDOW
 *,
boﬁ
);

621 
NCURSES_EXPORT
(Ë
move
 (, );

622 
NCURSES_EXPORT
(Ë
mvaddch
 (, , c⁄° 
chty≥
);

623 
NCURSES_EXPORT
(Ë
mvaddchn°r
 (, , c⁄° 
chty≥
 *, );

624 
NCURSES_EXPORT
(Ë
mvaddch°r
 (, , c⁄° 
chty≥
 *);

625 
NCURSES_EXPORT
(Ë
mvaddn°r
 (, , const *, );

626 
NCURSES_EXPORT
(Ë
mvadd°r
 (, , const *);

627 
NCURSES_EXPORT
(Ë
mvchg©
 (, , , 
©å_t
, , const *);

628 
NCURSES_EXPORT
(Ë
mvcur
 (,,,);

629 
NCURSES_EXPORT
(Ë
mvdñch
 (, );

630 
NCURSES_EXPORT
(Ë
mvdîwö
 (
WINDOW
 *, , );

631 
NCURSES_EXPORT
(Ë
mvgëch
 (, );

632 
NCURSES_EXPORT
(Ë
mvgën°r
 (, , *, );

633 
NCURSES_EXPORT
(Ë
mvgë°r
 (, , *);

634 
NCURSES_EXPORT
(Ë
mvhlöe
 (, , 
chty≥
, );

635 
NCURSES_EXPORT
(
chty≥
Ë
mvöch
 (, );

636 
NCURSES_EXPORT
(Ë
mvöchn°r
 (, , 
chty≥
 *, );

637 
NCURSES_EXPORT
(Ë
mvöch°r
 (, , 
chty≥
 *);

638 
NCURSES_EXPORT
(Ë
mvön°r
 (, , *, );

639 
NCURSES_EXPORT
(Ë
mvösch
 (, , 
chty≥
);

640 
NCURSES_EXPORT
(Ë
mvö¢°r
 (, , const *, );

641 
NCURSES_EXPORT
(Ë
mvös°r
 (, , const *);

642 
NCURSES_EXPORT
(Ë
mvö°r
 (, , *);

643 
NCURSES_EXPORT
(Ë
mv¥ötw
 (,, const *,...)

644 
GCC_PRINTFLIKE
(3,4);

645 
NCURSES_EXPORT
(Ë
mvsˇnw
 (,, 
NCURSES_CONST
 *,...)

646 
GCC_SCANFLIKE
(3,4);

647 
NCURSES_EXPORT
(Ë
mvvlöe
 (, , 
chty≥
, );

648 
NCURSES_EXPORT
(Ë
mvwaddch
 (
WINDOW
 *, , , c⁄° 
chty≥
);

649 
NCURSES_EXPORT
(Ë
mvwaddchn°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *, );

650 
NCURSES_EXPORT
(Ë
mvwaddch°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *);

651 
NCURSES_EXPORT
(Ë
mvwaddn°r
 (
WINDOW
 *, , , const *, );

652 
NCURSES_EXPORT
(Ë
mvwadd°r
 (
WINDOW
 *, , , const *);

653 
NCURSES_EXPORT
(Ë
mvwchg©
 (
WINDOW
 *, , , , 
©å_t
, , const *);

654 
NCURSES_EXPORT
(Ë
mvwdñch
 (
WINDOW
 *, , );

655 
NCURSES_EXPORT
(Ë
mvwgëch
 (
WINDOW
 *, , );

656 
NCURSES_EXPORT
(Ë
mvwgën°r
 (
WINDOW
 *, , , *, );

657 
NCURSES_EXPORT
(Ë
mvwgë°r
 (
WINDOW
 *, , , *);

658 
NCURSES_EXPORT
(Ë
mvwhlöe
 (
WINDOW
 *, , , 
chty≥
, );

659 
NCURSES_EXPORT
(Ë
mvwö
 (
WINDOW
 *,,);

660 
NCURSES_EXPORT
(
chty≥
Ë
mvwöch
 (
WINDOW
 *, , );

661 
NCURSES_EXPORT
(Ë
mvwöchn°r
 (
WINDOW
 *, , , 
chty≥
 *, );

662 
NCURSES_EXPORT
(Ë
mvwöch°r
 (
WINDOW
 *, , , 
chty≥
 *);

663 
NCURSES_EXPORT
(Ë
mvwön°r
 (
WINDOW
 *, , , *, );

664 
NCURSES_EXPORT
(Ë
mvwösch
 (
WINDOW
 *, , , 
chty≥
);

665 
NCURSES_EXPORT
(Ë
mvwö¢°r
 (
WINDOW
 *, , , const *, );

666 
NCURSES_EXPORT
(Ë
mvwös°r
 (
WINDOW
 *, , , const *);

667 
NCURSES_EXPORT
(Ë
mvwö°r
 (
WINDOW
 *, , , *);

668 
NCURSES_EXPORT
(Ë
mvw¥ötw
 (
WINDOW
*,,, const *,...)

669 
GCC_PRINTFLIKE
(4,5);

670 
NCURSES_EXPORT
(Ë
mvwsˇnw
 (
WINDOW
 *,,, 
NCURSES_CONST
 *,...)

671 
GCC_SCANFLIKE
(4,5);

672 
NCURSES_EXPORT
(Ë
mvwvlöe
 (
WINDOW
 *,, , 
chty≥
, );

673 
NCURSES_EXPORT
(Ë
«pms
 ();

674 
NCURSES_EXPORT
(
WINDOW
 *Ë
√w∑d
 (,);

675 
NCURSES_EXPORT
(
SCREEN
 *Ë
√wãrm
 (
NCURSES_CONST
 *,
FILE
 *,FILE *);

676 
NCURSES_EXPORT
(
WINDOW
 *Ë
√wwö
 (,,,);

677 
NCURSES_EXPORT
(Ë
∆
 ();

678 
NCURSES_EXPORT
(Ë
nocbªak
 ();

679 
NCURSES_EXPORT
(Ë
nodñay
 (
WINDOW
 *,
boﬁ
);

680 
NCURSES_EXPORT
(Ë
n€cho
 ();

681 
NCURSES_EXPORT
(Ë
n⁄l
 ();

682 
NCURSES_EXPORT
(Ë
noqiÊush
 ();

683 
NCURSES_EXPORT
(Ë
n‹aw
 ();

684 
NCURSES_EXPORT
(Ë
nŸimeout
 (
WINDOW
 *,
boﬁ
);

685 
NCURSES_EXPORT
(Ë
ovîœy
 (c⁄° 
WINDOW
*,WINDOW *);

686 
NCURSES_EXPORT
(Ë
ovîwrôe
 (c⁄° 
WINDOW
*,WINDOW *);

687 
NCURSES_EXPORT
(Ë
∑ú_c⁄ã¡
 (,*,*);

688 
NCURSES_EXPORT
(Ë
PAIR_NUMBER
 ();

689 
NCURSES_EXPORT
(Ë
≥choch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

690 
NCURSES_EXPORT
(Ë
≤ouåe‰esh
 (
WINDOW
*,,,,,,);

691 
NCURSES_EXPORT
(Ë
¥e‰esh
 (
WINDOW
 *,,,,,,);

692 
NCURSES_EXPORT
(Ë
¥ötw
 (const *,...)

693 
GCC_PRINTFLIKE
(1,2);

694 
NCURSES_EXPORT
(Ë
puç
 (const *);

695 
NCURSES_EXPORT
(Ë
putwö
 (
WINDOW
 *, 
FILE
 *);

696 
NCURSES_EXPORT
(Ë
qiÊush
 ();

697 
NCURSES_EXPORT
(Ë
øw
 ();

698 
NCURSES_EXPORT
(Ë
ªdøwwö
 (
WINDOW
 *);

699 
NCURSES_EXPORT
(Ë
ª‰esh
 ();

700 
NCURSES_EXPORT
(Ë
ª£ây
 ();

701 
NCURSES_EXPORT
(Ë
ª£t_¥og_mode
 ();

702 
NCURSES_EXPORT
(Ë
ª£t_shñl_mode
 ();

703 
NCURSES_EXPORT
(Ë
rùofÊöe
 (, (*)(
WINDOW
 *, ));

704 
NCURSES_EXPORT
(Ë
ßvëty
 ();

705 
NCURSES_EXPORT
(Ë
sˇnw
 (
NCURSES_CONST
 *,...)

706 
GCC_SCANFLIKE
(1,2);

707 
NCURSES_EXPORT
(Ë
s¸_dump
 (const *);

708 
NCURSES_EXPORT
(Ë
s¸_öô
 (const *);

709 
NCURSES_EXPORT
(Ë
s¸l
 ();

710 
NCURSES_EXPORT
(Ë
s¸ﬁl
 (
WINDOW
 *);

711 
NCURSES_EXPORT
(Ë
s¸ﬁlok
 (
WINDOW
 *,
boﬁ
);

712 
NCURSES_EXPORT
(Ë
s¸_ª°‹e
 (const *);

713 
NCURSES_EXPORT
(Ë
s¸_£t
 (const *);

714 
NCURSES_EXPORT
(Ë
£ts¸ªg
 (,);

715 
NCURSES_EXPORT
(
SCREEN
 *Ë
£t_ãrm
 (SCREEN *);

716 
NCURSES_EXPORT
(Ë
¶k_©åoff
 (c⁄° 
chty≥
);

717 
NCURSES_EXPORT
(Ë
¶k_©å_off
 (c⁄° 
©å_t
, *);

718 
NCURSES_EXPORT
(Ë
¶k_©å⁄
 (c⁄° 
chty≥
);

719 
NCURSES_EXPORT
(Ë
¶k_©å_⁄
 (
©å_t
,*);

720 
NCURSES_EXPORT
(Ë
¶k_©å£t
 (c⁄° 
chty≥
);

721 
NCURSES_EXPORT
(
©å_t
Ë
¶k_©å
 ();

722 
NCURSES_EXPORT
(Ë
¶k_©å_£t
 (c⁄° 
©å_t
,,*);

723 
NCURSES_EXPORT
(Ë
¶k_˛ór
 ();

724 
NCURSES_EXPORT
(Ë
¶k_cﬁ‹
 ();

725 
NCURSES_EXPORT
(Ë
¶k_öô
 ();

726 
NCURSES_EXPORT
(*Ë
¶k_œbñ
 ();

727 
NCURSES_EXPORT
(Ë
¶k_nouåe‰esh
 ();

728 
NCURSES_EXPORT
(Ë
¶k_ª‰esh
 ();

729 
NCURSES_EXPORT
(Ë
¶k_ª°‹e
 ();

730 
NCURSES_EXPORT
(Ë
¶k_£t
 (,const *,);

731 
NCURSES_EXPORT
(Ë
¶k_touch
 ();

732 
NCURSES_EXPORT
(Ë
°™dout
 ();

733 
NCURSES_EXPORT
(Ë
°™díd
 ();

734 
NCURSES_EXPORT
(Ë
°¨t_cﬁ‹
 ();

735 
NCURSES_EXPORT
(
WINDOW
 *Ë
sub∑d
 (WINDOW *, , , , );

736 
NCURSES_EXPORT
(
WINDOW
 *Ë
subwö
 (WINDOW *,,,,);

737 
NCURSES_EXPORT
(Ë
syncok
 (
WINDOW
 *, 
boﬁ
);

738 
NCURSES_EXPORT
(
chty≥
Ë
ãrm©ås
 ();

739 
NCURSES_EXPORT
(*Ë
ãrm«me
 ();

740 
NCURSES_EXPORT
(Ë
tigëÊag
 (
NCURSES_CONST
 *);

741 
NCURSES_EXPORT
(Ë
tigënum
 (
NCURSES_CONST
 *);

742 
NCURSES_EXPORT
(*Ë
tigë°r
 (
NCURSES_CONST
 *);

743 
NCURSES_EXPORT
(Ë
timeout
 ();

744 
NCURSES_EXPORT
(Ë
touchlöe
 (
WINDOW
 *, , );

745 
NCURSES_EXPORT
(Ë
touchwö
 (
WINDOW
 *);

746 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, ...);

747 
NCURSES_EXPORT
(Ë
ty≥ahód
 ();

748 
NCURSES_EXPORT
(Ë
ungëch
 ();

749 
NCURSES_EXPORT
(Ë
u¡ouchwö
 (
WINDOW
 *);

750 
NCURSES_EXPORT
(Ë
u£_ív
 (
boﬁ
);

751 
NCURSES_EXPORT
(Ë
vid©å
 (
chty≥
);

752 
NCURSES_EXPORT
(Ë
vidputs
 (
chty≥
, (*)());

753 
NCURSES_EXPORT
(Ë
vlöe
 (
chty≥
, );

754 
NCURSES_EXPORT
(Ë
vw¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

755 
NCURSES_EXPORT
(Ë
vw_¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

756 
NCURSES_EXPORT
(Ë
vwsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

757 
NCURSES_EXPORT
(Ë
vw_sˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

758 
NCURSES_EXPORT
(Ë
waddch
 (
WINDOW
 *, c⁄° 
chty≥
);

759 
NCURSES_EXPORT
(Ë
waddchn°r
 (
WINDOW
 *,c⁄° 
chty≥
 *,);

760 
NCURSES_EXPORT
(Ë
waddch°r
 (
WINDOW
 *,c⁄° 
chty≥
 *);

761 
NCURSES_EXPORT
(Ë
waddn°r
 (
WINDOW
 *,const *,);

762 
NCURSES_EXPORT
(Ë
wadd°r
 (
WINDOW
 *,const *);

763 
NCURSES_EXPORT
(Ë
w©å⁄
 (
WINDOW
 *, );

764 
NCURSES_EXPORT
(Ë
w©åoff
 (
WINDOW
 *, );

765 
NCURSES_EXPORT
(Ë
w©å£t
 (
WINDOW
 *, );

766 
NCURSES_EXPORT
(Ë
w©å_gë
 (
WINDOW
 *, 
©å_t
 *, *, *);

767 
NCURSES_EXPORT
(Ë
w©å_⁄
 (
WINDOW
 *, 
©å_t
, *);

768 
NCURSES_EXPORT
(Ë
w©å_off
 (
WINDOW
 *, 
©å_t
, *);

769 
NCURSES_EXPORT
(Ë
w©å_£t
 (
WINDOW
 *, 
©å_t
, , *);

770 
NCURSES_EXPORT
(Ë
wbkgd
 (
WINDOW
 *, 
chty≥
);

771 
NCURSES_EXPORT
(Ë
wbkgd£t
 (
WINDOW
 *,
chty≥
);

772 
NCURSES_EXPORT
(Ë
wb‹dî
 (
WINDOW
 *,
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

773 
NCURSES_EXPORT
(Ë
wchg©
 (
WINDOW
 *, , 
©å_t
, , const *);

774 
NCURSES_EXPORT
(Ë
w˛ór
 (
WINDOW
 *);

775 
NCURSES_EXPORT
(Ë
w˛πobŸ
 (
WINDOW
 *);

776 
NCURSES_EXPORT
(Ë
w˛π€ﬁ
 (
WINDOW
 *);

777 
NCURSES_EXPORT
(Ë
wcﬁ‹_£t
 (
WINDOW
*,,*);

778 
NCURSES_EXPORT
(Ë
wcursyncup
 (
WINDOW
 *);

779 
NCURSES_EXPORT
(Ë
wdñch
 (
WINDOW
 *);

780 
NCURSES_EXPORT
(Ë
wdñëñn
 (
WINDOW
 *);

781 
NCURSES_EXPORT
(Ë
wechoch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

782 
NCURSES_EXPORT
(Ë
wîa£
 (
WINDOW
 *);

783 
NCURSES_EXPORT
(Ë
wgëch
 (
WINDOW
 *);

784 
NCURSES_EXPORT
(Ë
wgën°r
 (
WINDOW
 *,*,);

785 
NCURSES_EXPORT
(Ë
wgë°r
 (
WINDOW
 *, *);

786 
NCURSES_EXPORT
(Ë
whlöe
 (
WINDOW
 *, 
chty≥
, );

787 
NCURSES_EXPORT
(
chty≥
Ë
wöch
 (
WINDOW
 *);

788 
NCURSES_EXPORT
(Ë
wöchn°r
 (
WINDOW
 *, 
chty≥
 *, );

789 
NCURSES_EXPORT
(Ë
wöch°r
 (
WINDOW
 *, 
chty≥
 *);

790 
NCURSES_EXPORT
(Ë
wön°r
 (
WINDOW
 *, *, );

791 
NCURSES_EXPORT
(Ë
wösch
 (
WINDOW
 *, 
chty≥
);

792 
NCURSES_EXPORT
(Ë
wösdñ 
 (
WINDOW
 *,);

793 
NCURSES_EXPORT
(Ë
wö£π 
 (
WINDOW
 *);

794 
NCURSES_EXPORT
(Ë
wö¢°r
 (
WINDOW
 *, const *,);

795 
NCURSES_EXPORT
(Ë
wös°r
 (
WINDOW
 *, const *);

796 
NCURSES_EXPORT
(Ë
wö°r
 (
WINDOW
 *, *);

797 
NCURSES_EXPORT
(Ë
wmove
 (
WINDOW
 *,,);

798 
NCURSES_EXPORT
(Ë
wnouåe‰esh
 (
WINDOW
 *);

799 
NCURSES_EXPORT
(Ë
w¥ötw
 (
WINDOW
 *, const *,...)

800 
GCC_PRINTFLIKE
(2,3);

801 
NCURSES_EXPORT
(Ë
wªdøw 
 (
WINDOW
 *,,);

802 
NCURSES_EXPORT
(Ë
wª‰esh
 (
WINDOW
 *);

803 
NCURSES_EXPORT
(Ë
wsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,...)

804 
GCC_SCANFLIKE
(2,3);

805 
NCURSES_EXPORT
(Ë
ws¸l
 (
WINDOW
 *,);

806 
NCURSES_EXPORT
(Ë
w£ts¸ªg
 (
WINDOW
 *,,);

807 
NCURSES_EXPORT
(Ë
w°™dout
 (
WINDOW
 *);

808 
NCURSES_EXPORT
(Ë
w°™díd
 (
WINDOW
 *);

809 
NCURSES_EXPORT
(Ë
wsyncdown
 (
WINDOW
 *);

810 
NCURSES_EXPORT
(Ë
wsyncup
 (
WINDOW
 *);

811 
NCURSES_EXPORT
(Ë
wtimeout
 (
WINDOW
 *,);

812 
NCURSES_EXPORT
(Ë
wtouch 
 (
WINDOW
 *,,,);

813 
NCURSES_EXPORT
(Ë
wvlöe
 (
WINDOW
 *,
chty≥
,);

818 #i‚de‡
_XOPEN_SOURCE_EXTENDED


819 
	#vid_©å
(
a
,
∑ú
,
›ts
Ë
	`vid©å
◊)

	)

824 
	#NCURSES_ATTR_SHIFT
 8

	)

825 
	#NCURSES_BITS
(
mask
,
shi·
Ë((maskË<< ((shi·Ë+ 
NCURSES_ATTR_SHIFT
))

	)

827 
	#A_NORMAL
 (1UL - 1UL)

	)

828 
	#A_ATTRIBUTES
 
	`NCURSES_BITS
(~(1UL - 1UL),0)

	)

829 
	#A_CHARTEXT
 (
	`NCURSES_BITS
(1UL,0Ë- 1UL)

	)

830 
	#A_COLOR
 
	`NCURSES_BITS
(((1ULË<< 8Ë- 1UL,0)

	)

831 
	#A_STANDOUT
 
	`NCURSES_BITS
(1UL,8)

	)

832 
	#A_UNDERLINE
 
	`NCURSES_BITS
(1UL,9)

	)

833 
	#A_REVERSE
 
	`NCURSES_BITS
(1UL,10)

	)

834 
	#A_BLINK
 
	`NCURSES_BITS
(1UL,11)

	)

835 
	#A_DIM
 
	`NCURSES_BITS
(1UL,12)

	)

836 
	#A_BOLD
 
	`NCURSES_BITS
(1UL,13)

	)

837 
	#A_ALTCHARSET
 
	`NCURSES_BITS
(1UL,14)

	)

838 
	#A_INVIS
 
	`NCURSES_BITS
(1UL,15)

	)

839 
	#A_PROTECT
 
	`NCURSES_BITS
(1UL,16)

	)

840 
	#A_HORIZONTAL
 
	`NCURSES_BITS
(1UL,17)

	)

841 
	#A_LEFT
 
	`NCURSES_BITS
(1UL,18)

	)

842 
	#A_LOW
 
	`NCURSES_BITS
(1UL,19)

	)

843 
	#A_RIGHT
 
	`NCURSES_BITS
(1UL,20)

	)

844 
	#A_TOP
 
	`NCURSES_BITS
(1UL,21)

	)

845 
	#A_VERTICAL
 
	`NCURSES_BITS
(1UL,22)

	)

850 
	#COLOR_PAIR
(
n
Ë
	`NCURSES_BITS
“, 0)

	)

851 
	#PAIR_NUMBER
(
a
Ë(
	`NCURSES_CAST
(,((◊Ë& 
A_COLOR
Ë>> 
NCURSES_ATTR_SHIFT
)))

	)

856 
	#wgë°r
(
w
, 
s
Ë
	`wgën°r
(w, s, -1)

	)

857 
	#gën°r
(
s
, 
n
Ë
	`wgën°r
(
°ds¸
, s,Ç)

	)

859 
	#£âîm
(
ãrm
Ë
	`£tu±îm
—îm, 1, (*)0)

	)

861 
	#fixãrm
(Ë
	`ª£t_¥og_mode
()

	)

862 
	#ª£âîm
(Ë
	`ª£t_shñl_mode
()

	)

863 
	#ßvëîm
(Ë
	`def_¥og_mode
()

	)

864 
	#¸mode
(Ë
	`cbªak
()

	)

865 
	#no¸mode
(Ë
	`nocbªak
()

	)

866 
	#gëtmode
()

	)

868 
	#gëyx
(
wö
,
y
,
x
Ë(y = 
	`gëcury
(wö), x = 
	`gëcurx
(wö))

	)

869 
	#gëbegyx
(
wö
,
y
,
x
Ë(y = 
	`gëbegy
(wö), x = 
	`gëbegx
(wö))

	)

870 
	#gëmaxyx
(
wö
,
y
,
x
Ë(y = 
	`gëmaxy
(wö), x = 
	`gëmaxx
(wö))

	)

871 
	#gë∑ryx
(
wö
,
y
,
x
Ë(y = 
	`gë∑ry
(wö), x = 
	`gë∑rx
(wö))

	)

873 
	#gësyx
(
y
,
x
Ëdÿ{ if(
√ws¸
->
_Àaveok
) (y)=(x)=-1; \

874 
	`gëyx
(
√ws¸
,(
y
),(
x
)); \

875 } 0)

	)

876 
	#£tsyx
(
y
,
x
Ëdÿ{ if((y)==-1 && (x)==-1Ë
√ws¸
->
_Àaveok
=
TRUE
; \

877 {
√ws¸
->
_Àaveok
=
FALSE
;
	`wmove
“ews¸,(
y
),(
x
));} \

878 } 0)

	)

881 
	#gë©ås
(
wö
Ë((wö)?(wö)->
_©ås
:
A_NORMAL
)

	)

882 
	#gëcurx
(
wö
Ë((wö)?(wö)->
_curx
:
ERR
)

	)

883 
	#gëcury
(
wö
Ë((wö)?(wö)->
_cury
:
ERR
)

	)

884 
	#gëbegx
(
wö
Ë((wö)?(wö)->
_begx
:
ERR
)

	)

885 
	#gëbegy
(
wö
Ë((wö)?(wö)->
_begy
:
ERR
)

	)

886 
	#gëmaxx
(
wö
Ë((wö)?((wö)->
_maxx
 + 1):
ERR
)

	)

887 
	#gëmaxy
(
wö
Ë((wö)?((wö)->
_maxy
 + 1):
ERR
)

	)

888 
	#gë∑rx
(
wö
Ë((wö)?(wö)->
_∑rx
:
ERR
)

	)

889 
	#gë∑ry
(
wö
Ë((wö)?(wö)->
_∑ry
:
ERR
)

	)

891 
	#w°™dout
(
wö
Ë(
	`w©å£t
(wö,
A_STANDOUT
))

	)

892 
	#w°™díd
(
wö
Ë(
	`w©å£t
(wö,
A_NORMAL
))

	)

894 
	#w©å⁄
(
wö
,
©
Ë
	`w©å_⁄
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

895 
	#w©åoff
(
wö
,
©
Ë
	`w©å_off
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

897 #i‡
deföed
(
_XOPEN_SOURCE_EXTENDED
) && 0

898 
	#w©å£t
(
wö
,
©
Ë((wö)->
_cﬁ‹
 = 
	`PAIR_NUMBER
(at), \

899 (
wö
)->
_©ås
 = (
©
))

	)

901 
	#w©å£t
(
wö
,
©
Ë((wö)->
_©ås
 = (©))

	)

904 
	#s¸ﬁl
(
wö
Ë
	`ws¸l
(wö,1)

	)

906 
	#touchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 1)

	)

907 
	#touchlöe
(
wö
, 
s
, 
c
Ë
	`wtouch 
((wö), s, c, 1)

	)

908 
	#u¡ouchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 0)

	)

910 
	#box
(
wö
, 
v
, 
h
Ë
	`wb‹dî
(wö, v, v, h, h, 0, 0, 0, 0)

	)

911 
	#b‹dî
(
ls
, 
rs
, 
ts
, 
bs
, 
é
, 
å
, 
bl
, 
br
Ë
	`wb‹dî
(
°ds¸
,Üs,Ñs,Ås, bs,Ål,År, bl, br)

	)

912 
	#hlöe
(
ch
, 
n
Ë
	`whlöe
(
°ds¸
, ch,Ç)

	)

913 
	#vlöe
(
ch
, 
n
Ë
	`wvlöe
(
°ds¸
, ch,Ç)

	)

915 
	#wö°r
(
w
, 
s
Ë
	`wön°r
(w, s, -1)

	)

916 
	#wöch°r
(
w
, 
s
Ë
	`wöchn°r
(w, s, -1)

	)

917 
	#wös°r
(
w
, 
s
Ë
	`wö¢°r
(w, s, -1)

	)

919 
	#ªdøwwö
(
wö
Ë
	`wªdøw 
(wö, 0, (wö)->
_maxy
+1)

	)

920 
	#wadd°r
(
wö
,
°r
Ë
	`waddn°r
(wö,°r,-1)

	)

921 
	#waddch°r
(
wö
,
°r
Ë
	`waddchn°r
(wö,°r,-1)

	)

927 
	#addch
(
ch
Ë
	`waddch
(
°ds¸
,ch)

	)

928 
	#addchn°r
(
°r
,
n
Ë
	`waddchn°r
(
°ds¸
,°r,n)

	)

929 
	#addch°r
(
°r
Ë
	`waddch°r
(
°ds¸
,°r)

	)

930 
	#addn°r
(
°r
,
n
Ë
	`waddn°r
(
°ds¸
,°r,n)

	)

931 
	#add°r
(
°r
Ë
	`waddn°r
(
°ds¸
,°r,-1)

	)

932 
	#©åoff
(
©
Ë
	`w©åoff
(
°ds¸
,©)

	)

933 
	#©å⁄
(
©
Ë
	`w©å⁄
(
°ds¸
,©)

	)

934 
	#©å£t
(
©
Ë
	`w©å£t
(
°ds¸
,©)

	)

935 
	#©å_gë
(
≠
,
˝
,
o
Ë
	`w©å_gë
(
°ds¸
,≠,˝,o)

	)

936 
	#©å_off
(
a
,
o
Ë
	`w©å_off
(
°ds¸
,a,o)

	)

937 
	#©å_⁄
(
a
,
o
Ë
	`w©å_⁄
(
°ds¸
,a,o)

	)

938 
	#©å_£t
(
a
,
c
,
o
Ë
	`w©å_£t
(
°ds¸
,a,c,o)

	)

939 
	#bkgd
(
ch
Ë
	`wbkgd
(
°ds¸
,ch)

	)

940 
	#bkgd£t
(
ch
Ë
	`wbkgd£t
(
°ds¸
,ch)

	)

941 
	#chg©
(
n
,
a
,
c
,
o
Ë
	`wchg©
(
°ds¸
,n,a,c,o)

	)

942 
	#˛ór
(Ë
	`w˛ór
(
°ds¸
)

	)

943 
	#˛πobŸ
(Ë
	`w˛πobŸ
(
°ds¸
)

	)

944 
	#˛π€ﬁ
(Ë
	`w˛π€ﬁ
(
°ds¸
)

	)

945 
	#cﬁ‹_£t
(
c
,
o
Ë
	`wcﬁ‹_£t
(
°ds¸
,c,o)

	)

946 
	#dñch
(Ë
	`wdñch
(
°ds¸
)

	)

947 
	#dñëñn
(Ë
	`wösdñ 
(
°ds¸
,-1)

	)

948 
	#echoch¨
(
c
Ë
	`wechoch¨
(
°ds¸
,c)

	)

949 
	#îa£
(Ë
	`wîa£
(
°ds¸
)

	)

950 
	#gëch
(Ë
	`wgëch
(
°ds¸
)

	)

951 
	#gë°r
(
°r
Ë
	`wgë°r
(
°ds¸
,°r)

	)

952 
	#öch
(Ë
	`wöch
(
°ds¸
)

	)

953 
	#öchn°r
(
s
,
n
Ë
	`wöchn°r
(
°ds¸
,s,n)

	)

954 
	#öch°r
(
s
Ë
	`wöch°r
(
°ds¸
,s)

	)

955 
	#ön°r
(
s
,
n
Ë
	`wön°r
(
°ds¸
,s,n)

	)

956 
	#ösch
(
c
Ë
	`wösch
(
°ds¸
,c)

	)

957 
	#ösdñ 
(
n
Ë
	`wösdñ 
(
°ds¸
,n)

	)

958 
	#ö£π 
(Ë
	`wösdñ 
(
°ds¸
,1)

	)

959 
	#ö¢°r
(
s
,
n
Ë
	`wö¢°r
(
°ds¸
,s,n)

	)

960 
	#ös°r
(
s
Ë
	`wös°r
(
°ds¸
,s)

	)

961 
	#ö°r
(
s
Ë
	`wö°r
(
°ds¸
,s)

	)

962 
	#move
(
y
,
x
Ë
	`wmove
(
°ds¸
,y,x)

	)

963 
	#ª‰esh
(Ë
	`wª‰esh
(
°ds¸
)

	)

964 
	#s¸l
(
n
Ë
	`ws¸l
(
°ds¸
,n)

	)

965 
	#£ts¸ªg
(
t
,
b
Ë
	`w£ts¸ªg
(
°ds¸
,t,b)

	)

966 
	#°™díd
(Ë
	`w°™díd
(
°ds¸
)

	)

967 
	#°™dout
(Ë
	`w°™dout
(
°ds¸
)

	)

968 
	#timeout
(
dñay
Ë
	`wtimeout
(
°ds¸
,dñay)

	)

969 
	#wdñëñn
(
wö
Ë
	`wösdñ 
(wö,-1)

	)

970 
	#wö£π 
(
wö
Ë
	`wösdñ 
(wö,1)

	)

976 
	#mvwaddch
(
wö
,
y
,
x
,
ch
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddch
(wö,ch))

	)

977 
	#mvwaddchn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,n))

	)

978 
	#mvwaddch°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,-1))

	)

979 
	#mvwaddn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,n))

	)

980 
	#mvwadd°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,-1))

	)

981 
	#mvwdñch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wdñch
(wö))

	)

982 
	#mvwchg©
(
wö
,
y
,
x
,
n
,
a
,
c
,
o
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wchg©
(wö,n,a,c,o))

	)

983 
	#mvwgëch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgëch
(wö))

	)

984 
	#mvwgën°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgën°r
(wö,°r,n))

	)

985 
	#mvwgë°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgë°r
(wö,°r))

	)

986 
	#mvwhlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`whlöe
(wö,c,n))

	)

987 
	#mvwöch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? 
	`NCURSES_CAST
(
chty≥
, ERRË: 
	`wöch
(wö))

	)

988 
	#mvwöchn°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöchn°r
(wö,s,n))

	)

989 
	#mvwöch°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöch°r
(wö,s))

	)

990 
	#mvwön°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wön°r
(wö,s,n))

	)

991 
	#mvwösch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wösch
(wö,c))

	)

992 
	#mvwö¢°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö¢°r
(wö,s,n))

	)

993 
	#mvwös°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös°r
(wö,s))

	)

994 
	#mvwö°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö°r
(wö,s))

	)

995 
	#mvwvlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wvlöe
(wö,c,n))

	)

997 
	#mvaddch
(
y
,
x
,
ch
Ë
	`mvwaddch
(
°ds¸
,y,x,ch)

	)

998 
	#mvaddchn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddchn°r
(
°ds¸
,y,x,°r,n)

	)

999 
	#mvaddch°r
(
y
,
x
,
°r
Ë
	`mvwaddch°r
(
°ds¸
,y,x,°r)

	)

1000 
	#mvaddn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddn°r
(
°ds¸
,y,x,°r,n)

	)

1001 
	#mvadd°r
(
y
,
x
,
°r
Ë
	`mvwadd°r
(
°ds¸
,y,x,°r)

	)

1002 
	#mvchg©
(
y
,
x
,
n
,
a
,
c
,
o
Ë
	`mvwchg©
(
°ds¸
,y,x,n,a,c,o)

	)

1003 
	#mvdñch
(
y
,
x
Ë
	`mvwdñch
(
°ds¸
,y,x)

	)

1004 
	#mvgëch
(
y
,
x
Ë
	`mvwgëch
(
°ds¸
,y,x)

	)

1005 
	#mvgën°r
(
y
,
x
,
°r
,
n
Ë
	`mvwgën°r
(
°ds¸
,y,x,°r,n)

	)

1006 
	#mvgë°r
(
y
,
x
,
°r
Ë
	`mvwgë°r
(
°ds¸
,y,x,°r)

	)

1007 
	#mvhlöe
(
y
,
x
,
c
,
n
Ë
	`mvwhlöe
(
°ds¸
,y,x,c,n)

	)

1008 
	#mvöch
(
y
,
x
Ë
	`mvwöch
(
°ds¸
,y,x)

	)

1009 
	#mvöchn°r
(
y
,
x
,
s
,
n
Ë
	`mvwöchn°r
(
°ds¸
,y,x,s,n)

	)

1010 
	#mvöch°r
(
y
,
x
,
s
Ë
	`mvwöch°r
(
°ds¸
,y,x,s)

	)

1011 
	#mvön°r
(
y
,
x
,
s
,
n
Ë
	`mvwön°r
(
°ds¸
,y,x,s,n)

	)

1012 
	#mvösch
(
y
,
x
,
c
Ë
	`mvwösch
(
°ds¸
,y,x,c)

	)

1013 
	#mvö¢°r
(
y
,
x
,
s
,
n
Ë
	`mvwö¢°r
(
°ds¸
,y,x,s,n)

	)

1014 
	#mvös°r
(
y
,
x
,
s
Ë
	`mvwös°r
(
°ds¸
,y,x,s)

	)

1015 
	#mvö°r
(
y
,
x
,
s
Ë
	`mvwö°r
(
°ds¸
,y,x,s)

	)

1016 
	#mvvlöe
(
y
,
x
,
c
,
n
Ë
	`mvwvlöe
(
°ds¸
,y,x,c,n)

	)

1021 
	#gëbkgd
(
wö
Ë((wö)->
_bkgd
)

	)

1023 
	#¶k_©å_off
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©åoff
◊))

	)

1024 
	#¶k_©å_⁄
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©å⁄
◊))

	)

1026 #i‡
deföed
(
_XOPEN_SOURCE_EXTENDED
) && 0

1027 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
Ë((wö)->
_©ås
 = (◊Ë& ~
A_COLOR
), \

1028 (
wö
)->
_cﬁ‹
 = (
p
), \

1029 
OK
)

	)

1030 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()(◊Ë!0 && (*◊Ë(wö)->
_©ås
)), \

1031 ()((
p
Ë!0 && (*’Ë(
wö
)->
_cﬁ‹
)), \

1032 
OK
)

	)

1034 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
Ë((wö)->
_©ås
 = ((◊Ë& ~
A_COLOR
Ë| 
	`COLOR_PAIR
’)), 
OK
)

	)

1035 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()(◊Ë!0 && (*◊Ë(wö)->
_©ås
)), \

1036 ()((
p
Ë!0 && (*’Ë
	`PAIR_NUMBER
((
wö
)->
_©ås
))), \

1037 
OK
)

	)

1046 
	#vw_¥ötw
 
vw¥ötw


	)

1047 
	#vw_sˇnw
 
vwsˇnw


	)

1053 
	#vssˇnf
(
a
,
b
,
c
Ë
	`_nc_vssˇnf
◊,b,c)

	)

1054 
NCURSES_EXPORT
(Ë
vssˇnf
(c⁄° *, c⁄° *, 
va_li°
);

1069 
	#KEY_CODE_YES
 0400

	)

1070 
	#KEY_MIN
 0401

	)

1071 
	#KEY_BREAK
 0401

	)

1072 
	#KEY_SRESET
 0530

	)

1073 
	#KEY_RESET
 0531

	)

1077 
	#KEY_DOWN
 0402

	)

1078 
	#KEY_UP
 0403

	)

1079 
	#KEY_LEFT
 0404

	)

1080 
	#KEY_RIGHT
 0405

	)

1081 
	#KEY_HOME
 0406

	)

1082 
	#KEY_BACKSPACE
 0407

	)

1083 
	#KEY_F0
 0410

	)

1084 
	#KEY_F
(
n
Ë(
KEY_F0
+“)Ë

	)

1085 
	#KEY_DL
 0510

	)

1086 
	#KEY_IL
 0511

	)

1087 
	#KEY_DC
 0512

	)

1088 
	#KEY_IC
 0513

	)

1089 
	#KEY_EIC
 0514

	)

1090 
	#KEY_CLEAR
 0515

	)

1091 
	#KEY_EOS
 0516

	)

1092 
	#KEY_EOL
 0517

	)

1093 
	#KEY_SF
 0520

	)

1094 
	#KEY_SR
 0521

	)

1095 
	#KEY_NPAGE
 0522

	)

1096 
	#KEY_PPAGE
 0523

	)

1097 
	#KEY_STAB
 0524

	)

1098 
	#KEY_CTAB
 0525

	)

1099 
	#KEY_CATAB
 0526

	)

1100 
	#KEY_ENTER
 0527

	)

1101 
	#KEY_PRINT
 0532

	)

1102 
	#KEY_LL
 0533

	)

1103 
	#KEY_A1
 0534

	)

1104 
	#KEY_A3
 0535

	)

1105 
	#KEY_B2
 0536

	)

1106 
	#KEY_C1
 0537

	)

1107 
	#KEY_C3
 0540

	)

1108 
	#KEY_BTAB
 0541

	)

1109 
	#KEY_BEG
 0542

	)

1110 
	#KEY_CANCEL
 0543

	)

1111 
	#KEY_CLOSE
 0544

	)

1112 
	#KEY_COMMAND
 0545

	)

1113 
	#KEY_COPY
 0546

	)

1114 
	#KEY_CREATE
 0547

	)

1115 
	#KEY_END
 0550

	)

1116 
	#KEY_EXIT
 0551

	)

1117 
	#KEY_FIND
 0552

	)

1118 
	#KEY_HELP
 0553

	)

1119 
	#KEY_MARK
 0554

	)

1120 
	#KEY_MESSAGE
 0555

	)

1121 
	#KEY_MOVE
 0556

	)

1122 
	#KEY_NEXT
 0557

	)

1123 
	#KEY_OPEN
 0560

	)

1124 
	#KEY_OPTIONS
 0561

	)

1125 
	#KEY_PREVIOUS
 0562

	)

1126 
	#KEY_REDO
 0563

	)

1127 
	#KEY_REFERENCE
 0564

	)

1128 
	#KEY_REFRESH
 0565

	)

1129 
	#KEY_REPLACE
 0566

	)

1130 
	#KEY_RESTART
 0567

	)

1131 
	#KEY_RESUME
 0570

	)

1132 
	#KEY_SAVE
 0571

	)

1133 
	#KEY_SBEG
 0572

	)

1134 
	#KEY_SCANCEL
 0573

	)

1135 
	#KEY_SCOMMAND
 0574

	)

1136 
	#KEY_SCOPY
 0575

	)

1137 
	#KEY_SCREATE
 0576

	)

1138 
	#KEY_SDC
 0577

	)

1139 
	#KEY_SDL
 0600

	)

1140 
	#KEY_SELECT
 0601

	)

1141 
	#KEY_SEND
 0602

	)

1142 
	#KEY_SEOL
 0603

	)

1143 
	#KEY_SEXIT
 0604

	)

1144 
	#KEY_SFIND
 0605

	)

1145 
	#KEY_SHELP
 0606

	)

1146 
	#KEY_SHOME
 0607

	)

1147 
	#KEY_SIC
 0610

	)

1148 
	#KEY_SLEFT
 0611

	)

1149 
	#KEY_SMESSAGE
 0612

	)

1150 
	#KEY_SMOVE
 0613

	)

1151 
	#KEY_SNEXT
 0614

	)

1152 
	#KEY_SOPTIONS
 0615

	)

1153 
	#KEY_SPREVIOUS
 0616

	)

1154 
	#KEY_SPRINT
 0617

	)

1155 
	#KEY_SREDO
 0620

	)

1156 
	#KEY_SREPLACE
 0621

	)

1157 
	#KEY_SRIGHT
 0622

	)

1158 
	#KEY_SRSUME
 0623

	)

1159 
	#KEY_SSAVE
 0624

	)

1160 
	#KEY_SSUSPEND
 0625

	)

1161 
	#KEY_SUNDO
 0626

	)

1162 
	#KEY_SUSPEND
 0627

	)

1163 
	#KEY_UNDO
 0630

	)

1164 
	#KEY_MOUSE
 0631

	)

1165 
	#KEY_RESIZE
 0632

	)

1166 
	#KEY_EVENT
 0633

	)

1168 
	#KEY_MAX
 0777

	)

1177 #i‡
NCURSES_MOUSE_VERSION
 > 1

1178 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 5))

	)

1180 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 6))

	)

1183 
	#NCURSES_BUTTON_RELEASED
 001L

	)

1184 
	#NCURSES_BUTTON_PRESSED
 002L

	)

1185 
	#NCURSES_BUTTON_CLICKED
 004L

	)

1186 
	#NCURSES_DOUBLE_CLICKED
 010L

	)

1187 
	#NCURSES_TRIPLE_CLICKED
 020L

	)

1188 
	#NCURSES_RESERVED_EVENT
 040L

	)

1191 
	#BUTTON1_RELEASED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_RELEASED
)

	)

1192 
	#BUTTON1_PRESSED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_PRESSED
)

	)

1193 
	#BUTTON1_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_CLICKED
)

	)

1194 
	#BUTTON1_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_DOUBLE_CLICKED
)

	)

1195 
	#BUTTON1_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_TRIPLE_CLICKED
)

	)

1197 
	#BUTTON2_RELEASED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_RELEASED
)

	)

1198 
	#BUTTON2_PRESSED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_PRESSED
)

	)

1199 
	#BUTTON2_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_CLICKED
)

	)

1200 
	#BUTTON2_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_DOUBLE_CLICKED
)

	)

1201 
	#BUTTON2_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_TRIPLE_CLICKED
)

	)

1203 
	#BUTTON3_RELEASED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_RELEASED
)

	)

1204 
	#BUTTON3_PRESSED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_PRESSED
)

	)

1205 
	#BUTTON3_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_CLICKED
)

	)

1206 
	#BUTTON3_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_DOUBLE_CLICKED
)

	)

1207 
	#BUTTON3_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_TRIPLE_CLICKED
)

	)

1209 
	#BUTTON4_RELEASED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_RELEASED
)

	)

1210 
	#BUTTON4_PRESSED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_PRESSED
)

	)

1211 
	#BUTTON4_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_CLICKED
)

	)

1212 
	#BUTTON4_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_DOUBLE_CLICKED
)

	)

1213 
	#BUTTON4_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_TRIPLE_CLICKED
)

	)

1219 #i‡
NCURSES_MOUSE_VERSION
 > 1

1221 
	#BUTTON5_RELEASED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_RELEASED
)

	)

1222 
	#BUTTON5_PRESSED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_PRESSED
)

	)

1223 
	#BUTTON5_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_CLICKED
)

	)

1224 
	#BUTTON5_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_DOUBLE_CLICKED
)

	)

1225 
	#BUTTON5_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_TRIPLE_CLICKED
)

	)

1227 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(6, 0001L)

	)

1228 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(6, 0002L)

	)

1229 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(6, 0004L)

	)

1230 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(6, 0010L)

	)

1234 
	#BUTTON1_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_RESERVED_EVENT
)

	)

1235 
	#BUTTON2_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_RESERVED_EVENT
)

	)

1236 
	#BUTTON3_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_RESERVED_EVENT
)

	)

1237 
	#BUTTON4_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_RESERVED_EVENT
)

	)

1239 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(5, 0001L)

	)

1240 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(5, 0002L)

	)

1241 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(5, 0004L)

	)

1242 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(5, 0010L)

	)

1246 
	#ALL_MOUSE_EVENTS
 (
REPORT_MOUSE_POSITION
 - 1)

	)

1249 
	#BUTTON_RELEASE
(
e
, 
x
Ë(”Ë& (001 << (6 * ((xË- 1))))

	)

1250 
	#BUTTON_PRESS
(
e
, 
x
Ë(”Ë& (002 << (6 * ((xË- 1))))

	)

1251 
	#BUTTON_CLICK
(
e
, 
x
Ë(”Ë& (004 << (6 * ((xË- 1))))

	)

1252 
	#BUTTON_DOUBLE_CLICK
(
e
, 
x
Ë(”Ë& (010 << (6 * ((xË- 1))))

	)

1253 
	#BUTTON_TRIPLE_CLICK
(
e
, 
x
Ë(”Ë& (020 << (6 * ((xË- 1))))

	)

1254 
	#BUTTON_RESERVED_EVENT
(
e
, 
x
Ë(”Ë& (040 << (6 * ((xË- 1))))

	)

1258 
	gid
;

1259 
	gx
, 
	gy
, 
	gz
;

1260 
mmask_t
 
	gb°©e
;

1262 
	tMEVENT
;

1264 
NCURSES_EXPORT
(Ë
gëmou£
 (
MEVENT
 *);

1265 
NCURSES_EXPORT
(Ë
ungëmou£
 (
MEVENT
 *);

1266 
NCURSES_EXPORT
(
mmask_t
Ë
mou£mask
 (mmask_t, mmask_t *);

1267 
NCURSES_EXPORT
(
boﬁ
Ë
wí˛o£
 (c⁄° 
WINDOW
 *, , );

1268 
NCURSES_EXPORT
(Ë
mou£öãrvÆ
 ();

1269 
NCURSES_EXPORT
(
boﬁ
Ë
wmou£_åafo
 (c⁄° 
WINDOW
*, *, *, bool);

1270 
NCURSES_EXPORT
(
boﬁ
Ë
mou£_åafo
 (*, *, bool);

1272 
	#mou£_åafo
(
y
,
x
,
to_s¸ìn
Ë
	`wmou£_åafo
(
°ds¸
,y,x,to_s¸ìn)

	)

1276 
NCURSES_EXPORT
(Ë
m˝röt
 (*, );

1277 
NCURSES_EXPORT
(Ë
has_key
 ();

1281 
NCURSES_EXPORT
(Ë
_åa˚f
 (c⁄° *, ...Ë
GCC_PRINTFLIKE
(1,2);

1282 
NCURSES_EXPORT
(Ë
_åa˚dump
 (c⁄° *, 
WINDOW
 *);

1283 
NCURSES_EXPORT
(*Ë
_åa˚©å
 (
©å_t
);

1284 
NCURSES_EXPORT
(*Ë
_åa˚©å2
 (, 
chty≥
);

1285 
NCURSES_EXPORT
(*Ë
_nc_åa˚bôs
 ();

1286 
NCURSES_EXPORT
(*Ë
_åa˚ch¨
 ();

1287 
NCURSES_EXPORT
(*Ë
_åa˚chty≥
 (
chty≥
);

1288 
NCURSES_EXPORT
(*Ë
_åa˚chty≥2
 (, 
chty≥
);

1289 #ifde‡
_XOPEN_SOURCE_EXTENDED


1290 
	#_åa˚ch_t
 
_åa˚cch¨_t


	)

1291 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t
 (c⁄° 
cch¨_t
 *);

1292 
	#_åa˚ch_t2
 
_åa˚cch¨_t2


	)

1293 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t2
 (, c⁄° 
cch¨_t
 *);

1295 
	#_åa˚ch_t
 
_åa˚chty≥


	)

1296 
	#_åa˚ch_t2
 
_åa˚chty≥2


	)

1298 
NCURSES_EXPORT
(*Ë
_åa˚mou£
 (c⁄° 
MEVENT
 *);

1299 
NCURSES_EXPORT
(Ë
åa˚
 (const );

1302 
	#TRACE_DISABLE
 0x0000

	)

1303 
	#TRACE_TIMES
 0x0001

	)

1304 
	#TRACE_TPUTS
 0x0002

	)

1305 
	#TRACE_UPDATE
 0x0004

	)

1306 
	#TRACE_MOVE
 0x0008

	)

1307 
	#TRACE_CHARPUT
 0x0010

	)

1308 
	#TRACE_ORDINARY
 0x001F

	)

1309 
	#TRACE_CALLS
 0x0020

	)

1310 
	#TRACE_VIRTPUT
 0x0040

	)

1311 
	#TRACE_IEVENT
 0x0080

	)

1312 
	#TRACE_BITS
 0x0100

	)

1313 
	#TRACE_ICALLS
 0x0200

	)

1314 
	#TRACE_CCALLS
 0x0400

	)

1315 
	#TRACE_DATABASE
 0x0800

	)

1316 
	#TRACE_ATTRS
 0x1000

	)

1318 
	#TRACE_SHIFT
 13

	)

1319 
	#TRACE_MAXIMUM
 ((1 << 
TRACE_SHIFT
Ë- 1Ë

	)

1321 #i‡
deföed
(
TRACE
Ë|| deföed(
NCURSES_TEST
)

1322 
NCURSES_EXPORT_VAR
(Ë
_nc_›timize_íabÀ
;

1323 
NCURSES_EXPORT
(c⁄° *Ë
_nc_visbuf
 (const *);

1324 
	#OPTIMIZE_MVCUR
 0x01

	)

1325 
	#OPTIMIZE_HASHMAP
 0x02

	)

1326 
	#OPTIMIZE_SCROLL
 0x04

	)

1327 
	#OPTIMIZE_ALL
 0xf‡

	)

1330 #ifde‡
__˝lu•lus


1333 #unde‡
box


1334 #unde‡
˛ór


1335 #unde‡
îa£


1336 #unde‡
move


1337 #unde‡
ª‰esh


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë¯## 
U


	)

301 
	#UINT16_C
(
c
Ë¯## 
U


	)

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/sys/resource.h

19 #i‚def 
_SYS_RESOURCE_H


20 
	#_SYS_RESOURCE_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ªsour˚.h
>

27 #i‚de‡
__id_t_deföed


28 
__id_t
 
	tid_t
;

29 
	#__id_t_deföed


	)

32 
	g__BEGIN_DECLS


38 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


39 
__æimô_ªsour˚
 
	t__æimô_ªsour˚_t
;

40 
__rußge_who
 
	t__rußge_who_t
;

41 
__¥i‹ôy_which
 
	t__¥i‹ôy_which_t
;

43 
	t__æimô_ªsour˚_t
;

44 
	t__rußge_who_t
;

45 
	t__¥i‹ôy_which_t
;

50 #i‚de‡
__USE_FILE_OFFSET64


51 
	$gëæimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

52 
æimô
 *
__æimôs
Ë
__THROW
;

54 #ifde‡
__REDIRECT_NTH


55 
	`__REDIRECT_NTH
 (
gëæimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

56 
æimô
 *
__æimôs
), 
gëæimô64
);

58 
	#gëæimô
 
gëæimô64


	)

61 #ifde‡
__USE_LARGEFILE64


62 
	$gëæimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

63 
æimô64
 *
__æimôs
Ë
__THROW
;

69 #i‚de‡
__USE_FILE_OFFSET64


70 
	$£ålimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

71 
__c⁄°
 
æimô
 *
__æimôs
Ë
__THROW
;

73 #ifde‡
__REDIRECT_NTH


74 
	`__REDIRECT_NTH
 (
£ålimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

75 
__c⁄°
 
æimô
 *
__æimôs
),

76 
£ålimô64
);

78 
	#£ålimô
 
£ålimô64


	)

81 #ifde‡
__USE_LARGEFILE64


82 
	$£ålimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

83 
__c⁄°
 
æimô64
 *
__æimôs
Ë
__THROW
;

88 
	$gërußge
 (
__rußge_who_t
 
__who
, 
rußge
 *
__ußge
Ë
__THROW
;

94 
	$gë¥i‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
Ë
__THROW
;

98 
	$£çri‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
, 
__¥io
)

99 
__THROW
;

101 
__END_DECLS


	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 *  (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

20 #i‚de‡
_SYS_SYSMACROS_H


21 
	#_SYS_SYSMACROS_H
 1

	)

23 
	~<„©uªs.h
>

28 #ifde‡
__GLIBC_HAVE_LONG_LONG


29 
__exãnsi⁄__


30 
__ölöe
 
	$gnu_dev_maj‹
 (
__dev
)

31 
__THROW
;

32 
__exãnsi⁄__


33 
__ölöe
 
	$gnu_dev_mö‹
 (
__dev
)

34 
__THROW
;

35 
__exãnsi⁄__


36 
__ölöe
 
	$gnu_dev_makedev
 (
__maj‹
,

37 
__mö‹
)

38 
__THROW
;

40 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

41 
__exãnsi⁄__
 
__ölöe
 

42 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

44  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

45 
	}
}

47 
__exãnsi⁄__
 
__ölöe
 

48 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

50  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

51 
	}
}

53 
__exãnsi⁄__
 
__ölöe
 

54 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

56  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

57 | (((Ë(
__mö‹
 & ~0xff)) << 12)

58 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

59 
	}
}

64 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

65 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

66 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 
	#__√ed_wch¨_t


	)

12 
	#__√ed_wöt_t


	)

13 
	#__√ed_NULL


	)

14 
	~<°ddef.h
>

15 #i‚de‡
_WINT_T


20 
	#_WINT_T


	)

21 
	twöt_t
;

23 
	#__√ed_mb°©e_t


	)

24 
	~<wch¨.h
>

25 
	#_G_size_t
 
size_t


	)

28 
__off_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos_t
;

33 
__off64_t
 
	m__pos
;

34 
__mb°©e_t
 
	m__°©e
;

35 } 
	t_G_Âos64_t
;

36 
	#_G_ssize_t
 
__ssize_t


	)

37 
	#_G_off_t
 
__off_t


	)

38 
	#_G_off64_t
 
__off64_t


	)

39 
	#_G_pid_t
 
__pid_t


	)

40 
	#_G_uid_t
 
__uid_t


	)

41 
	#_G_wch¨_t
 
wch¨_t


	)

42 
	#_G_wöt_t
 
wöt_t


	)

43 
	#_G_°©64
 
°©64


	)

44 
	~<gc⁄v.h
>

47 
__gc⁄v_öfo
 
	m__cd
;

50 
__gc⁄v_öfo
 
	m__cd
;

51 
__gc⁄v_°ï_d©a
 
	m__d©a
;

52 } 
	m__comböed
;

53 } 
	t_G_ic⁄v_t
;

55 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

57 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

58 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

60 
	#_G_HAVE_BOOL
 1

	)

64 
	#_G_HAVE_ATEXIT
 1

	)

65 
	#_G_HAVE_SYS_CDEFS
 1

	)

66 
	#_G_HAVE_SYS_WAIT
 1

	)

67 
	#_G_NEED_STDARG_H
 1

	)

68 
	#_G_va_li°
 
__gnuc_va_li°


	)

70 
	#_G_HAVE_PRINTF_FP
 1

	)

71 
	#_G_HAVE_MMAP
 1

	)

72 
	#_G_HAVE_MREMAP
 1

	)

73 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

74 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

75 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

77 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

79 
	#_G_OPEN64
 
__›í64


	)

80 
	#_G_LSEEK64
 
__l£ek64


	)

81 
	#_G_MMAP64
 
__mm≠64


	)

82 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

85 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

87 
	#_G_BUFSIZ
 8192

	)

90 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

91 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

92 
	#_G_USING_THUNKS
 1

	)

93 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

94 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

97 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


98 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

100 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm/ioctls.h

2 #i‚de‡
__ASM_STUB_IOCTLS_H


3 
	#__ASM_STUB_IOCTLS_H


	)

4 #i‡
deföed
 
__x86_64__


5 
	~<asm-x86_64/io˘ls.h
>

6 #ñi‡
deföed
 
__i386__


7 
	~<asm-i386/io˘ls.h
>

9 #w¨nög 
This
 
machöe
 
≠≥¨s
 
to
 
be
 
√ôhî
 
x86_64
 
n‹
 
i386
.

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/huge_val.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VAL
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

37 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

41 
	~<ídün.h
>

43 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

45 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


46 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

48 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


49 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

52 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

53 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VALF
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

37 { 
__l
: 0x7f800000UL }).
__d
)

	)

41 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

50 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

51 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

21 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

28 
	#HUGE_VALL
 ((Ë
HUGE_VAL
)

	)

	@/usr/include/bits/inf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#INFINITY
 (
	`__buûtö_öff
())

	)

29 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

36 
	~<löux/limôs.h
>

39 #ifde‡
__undef_NR_OPEN


40 #unde‡
NR_OPEN


41 #unde‡
__undef_NR_OPEN


44 #ifde‡
__undef_LINK_MAX


45 #unde‡
LINK_MAX


46 #unde‡
__undef_LINK_MAX


49 #ifde‡
__undef_OPEN_MAX


50 #unde‡
OPEN_MAX


51 #unde‡
__undef_OPEN_MAX


55 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

57 
	#PTHREAD_KEYS_MAX
 1024

	)

60 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

62 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

65 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

67 #unde‡
PTHREAD_THREADS_MAX


71 
	#AIO_PRIO_DELTA_MAX
 20

	)

74 
	#PTHREAD_STACK_MIN
 16384

	)

77 
	#DELAYTIMER_MAX
 2147483647

	)

80 
	#TTY_NAME_MAX
 32

	)

83 
	#LOGIN_NAME_MAX
 256

	)

86 
	#HOST_NAME_MAX
 64

	)

89 
	#MQ_PRIO_MAX
 32768

	)

	@/usr/include/bits/mathcalls.h

46 #i‚de‡
_MATH_H


53 
_MdoubÀ_BEGIN_NAMESPACE


55 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

57 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

59 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

61 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

64 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

66 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

68 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

73 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

75 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

77 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

78 
	g_MdoubÀ_END_NAMESPACE


80 #ifde‡
__USE_GNU


82 
__MATHDECL
 (,
söcos
,,

83 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

86 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


87 
__BEGIN_NAMESPACE_C99


89 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

91 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

93 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

94 
	g__END_NAMESPACE_C99


99 
_MdoubÀ_BEGIN_NAMESPACE


101 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

104 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

107 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

110 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

113 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

116 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
));

117 
	g_MdoubÀ_END_NAMESPACE


119 #ifde‡
__USE_GNU


121 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

123 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

126 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


127 
__BEGIN_NAMESPACE_C99


129 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

132 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

135 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

136 
	g__END_NAMESPACE_C99


139 #ifde‡
__USE_ISOC99


140 
__BEGIN_NAMESPACE_C99


142 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

145 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

146 
	g__END_NAMESPACE_C99


152 
_MdoubÀ_BEGIN_NAMESPACE


154 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

157 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

158 
	g_MdoubÀ_END_NAMESPACE


160 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


161 
__BEGIN_NAMESPACE_C99


163 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

164 
	g__END_NAMESPACE_C99


167 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


168 
__BEGIN_NAMESPACE_C99


170 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

171 
	g__END_NAMESPACE_C99


177 
_MdoubÀ_BEGIN_NAMESPACE


179 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

182 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

185 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

188 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

193 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

197 
	g_MdoubÀ_END_NAMESPACE


199 #ifde‡
__USE_MISC


202 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

205 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

208 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

212 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

215 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


216 
__BEGIN_NAMESPACE_C99


218 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

219 
	g__END_NAMESPACE_C99


222 #ifde‡
__USE_ISOC99


223 
__BEGIN_NAMESPACE_C99


225 
__MATHCALLX
 (
«n
,, (
__c⁄°
 *
__ègb
), (
__c⁄°__
));

226 
	g__END_NAMESPACE_C99


231 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

233 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

238 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

239 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

240 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

241 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

242 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

243 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

247 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


248 
__BEGIN_NAMESPACE_C99


250 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

253 
	g__END_NAMESPACE_C99


256 #ifde‡
__USE_ISOC99


257 
__BEGIN_NAMESPACE_C99


259 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

260 
	g__END_NAMESPACE_C99


263 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


265 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

268 #ifde‡
__USE_MISC


272 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

276 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


277 
__BEGIN_NAMESPACE_C99


280 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

283 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

284 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


285 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

289 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

291 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


293 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

297 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

300 #ifde‡
__USE_ISOC99


302 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

306 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

310 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

314 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

319 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

326 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

327 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

331 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

332 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

336 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

339 
__MATHCALL
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

342 
__MATHCALL
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

346 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

347 
__©åibuã__
 ((
__c⁄°__
));

350 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

351 
__©åibuã__
 ((
__c⁄°__
));

355 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

358 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


359 
	g__END_NAMESPACE_C99


362 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


364 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

19 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


23 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


24 
	#_MATH_H_MATHDEF
 1

	)

26 
	~<bôs/w‹dsize.h
>

28 #i‡
__WORDSIZE
 =64 || (
deföed
 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

31 
	tÊﬂt_t
;

32 
	tdoubÀ_t
;

38 
	tÊﬂt_t
;

40 
	tdoubÀ_t
;

45 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

46 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

	@/usr/include/bits/mathinline.h

21 #i‚de‡
_MATH_H


25 #ifde‡
__˝lu•lus


26 
	#__MATH_INLINE
 
__ölöe


	)

28 
	#__MATH_INLINE
 
__ölöe


	)

32 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

35 
__MATH_INLINE
 

36 
__NTH
 (
	$__signbôf
 (
__x
))

38 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

39  
__u
.
__i
 < 0;

40 
	}
}

41 
__MATH_INLINE
 

42 
__NTH
 (
	$__signbô
 (
__x
))

44 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

45  
__u
.
__i
[1] < 0;

46 
	}
}

47 
__MATH_INLINE
 

48 
__NTH
 (
	$__signbôl
 (
__x
))

50 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

51  (
__u
.
__i
[2] & 0x8000) != 0;

52 
	}
}

	@/usr/include/bits/nan.h

20 #i‚de‡
_MATH_H


27 #i‡
__GNUC_PREREQ
(3,3)

29 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

31 #ñi‡
deföed
 
__GNUC__


33 
	#NAN
 \

34 (
__exãnsi⁄__
 \

35 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

36 { 
__l
: 0x7fc00000UL }).
__d
)

	)

40 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#__«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

45 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


46 
	#__«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

49 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__«n_uni⁄


50 
	g__©åibuã_u£d__
 = { 
__«n_byãs
 };

51 
	#NAN
 (
__«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/resource.h

21 #i‚de‡
_SYS_RESOURCE_H


25 
	~<bôs/ty≥s.h
>

33 
	e__æimô_ªsour˚


36 
	mRLIMIT_CPU
 = 0,

37 
	#RLIMIT_CPU
 
RLIMIT_CPU


	)

40 
	mRLIMIT_FSIZE
 = 1,

41 
	#RLIMIT_FSIZE
 
RLIMIT_FSIZE


	)

44 
	mRLIMIT_DATA
 = 2,

45 
	#RLIMIT_DATA
 
RLIMIT_DATA


	)

48 
	mRLIMIT_STACK
 = 3,

49 
	#RLIMIT_STACK
 
RLIMIT_STACK


	)

52 
	mRLIMIT_CORE
 = 4,

53 
	#RLIMIT_CORE
 
RLIMIT_CORE


	)

59 
	m__RLIMIT_RSS
 = 5,

60 
	#RLIMIT_RSS
 
__RLIMIT_RSS


	)

63 
	mRLIMIT_NOFILE
 = 7,

64 
	m__RLIMIT_OFILE
 = 
RLIMIT_NOFILE
,

65 
	#RLIMIT_NOFILE
 
RLIMIT_NOFILE


	)

66 
	#RLIMIT_OFILE
 
__RLIMIT_OFILE


	)

69 
	mRLIMIT_AS
 = 9,

70 
	#RLIMIT_AS
 
RLIMIT_AS


	)

73 
	m__RLIMIT_NPROC
 = 6,

74 
	#RLIMIT_NPROC
 
__RLIMIT_NPROC


	)

77 
	m__RLIMIT_MEMLOCK
 = 8,

78 
	#RLIMIT_MEMLOCK
 
__RLIMIT_MEMLOCK


	)

81 
	m__RLIMIT_LOCKS
 = 10,

82 
	#RLIMIT_LOCKS
 
__RLIMIT_LOCKS


	)

85 
	m__RLIMIT_SIGPENDING
 = 11,

86 
	#RLIMIT_SIGPENDING
 
__RLIMIT_SIGPENDING


	)

89 
	m__RLIMIT_MSGQUEUE
 = 12,

90 
	#RLIMIT_MSGQUEUE
 
__RLIMIT_MSGQUEUE


	)

95 
	m__RLIMIT_NICE
 = 13,

96 
	#RLIMIT_NICE
 
__RLIMIT_NICE


	)

100 
	m__RLIMIT_RTPRIO
 = 14,

101 
	#RLIMIT_RTPRIO
 
__RLIMIT_RTPRIO


	)

103 
	m__RLIMIT_NLIMITS
 = 15,

104 
	m__RLIM_NLIMITS
 = 
__RLIMIT_NLIMITS


105 
	#RLIMIT_NLIMITS
 
__RLIMIT_NLIMITS


	)

106 
	#RLIM_NLIMITS
 
__RLIM_NLIMITS


	)

110 #i‚de‡
__USE_FILE_OFFSET64


111 
	#RLIM_INFINITY
 (()(~0UL))

	)

113 
	#RLIM_INFINITY
 0xffffffffffffffffuLL

	)

116 #ifde‡
__USE_LARGEFILE64


117 
	#RLIM64_INFINITY
 0xffffffffffffffffuLL

	)

121 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

122 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

126 #i‚de‡
__USE_FILE_OFFSET64


127 
__æim_t
 
	tæim_t
;

129 
__æim64_t
 
	tæim_t
;

131 #ifde‡
__USE_LARGEFILE64


132 
__æim64_t
 
	tæim64_t
;

135 
	sæimô


138 
æim_t
 
	mæim_cur
;

140 
æim_t
 
	mæim_max
;

143 #ifde‡
__USE_LARGEFILE64


144 
	sæimô64


147 
æim64_t
 
	mæim_cur
;

149 
æim64_t
 
	mæim_max
;

154 
	e__rußge_who


157 
	mRUSAGE_SELF
 = 0,

158 
	#RUSAGE_SELF
 
RUSAGE_SELF


	)

161 
	mRUSAGE_CHILDREN
 = -1

162 
	#RUSAGE_CHILDREN
 
RUSAGE_CHILDREN


	)

165 
	#__√ed_timevÆ


	)

166 
	~<bôs/time.h
>

169 
	srußge


172 
timevÆ
 
	mru_utime
;

174 
timevÆ
 
	mru_°ime
;

176 
	mru_maxrss
;

179 
	mru_ixrss
;

181 
	mru_idrss
;

183 
	mru_i§ss
;

186 
	mru_möÊt
;

188 
	mru_majÊt
;

190 
	mru_nsw≠
;

193 
	mru_öblock
;

195 
	mru_oublock
;

197 
	mru_msg¢d
;

199 
	mru_msgrcv
;

201 
	mru_nsig«ls
;

205 
	mru_nvcsw
;

208 
	mru_nivcsw
;

212 
	#PRIO_MIN
 -20

	)

213 
	#PRIO_MAX
 20

	)

217 
	e__¥i‹ôy_which


219 
	mPRIO_PROCESS
 = 0,

220 
	#PRIO_PROCESS
 
PRIO_PROCESS


	)

221 
	mPRIO_PGRP
 = 1,

222 
	#PRIO_PGRP
 
PRIO_PGRP


	)

223 
	mPRIO_USER
 = 2

224 
	#PRIO_USER
 
PRIO_USER


	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


26 
	#__FD_ZERO
(
s
) \

28 
__i
; \

29 
fd_£t
 *
__¨r
 = (
s
); \

30 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

31 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

32 } 0)

	)

33 
	#__FD_SET
(
d
, 
s
Ë(
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] |
	`__FDMASK
(d))

	)

34 
	#__FD_CLR
(
d
, 
s
Ë(
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] &~
	`__FDMASK
(d))

	)

35 
	#__FD_ISSET
(
d
, 
s
Ë((
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] & 
	`__FDMASK
(d)Ë!0)

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

99 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

101 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647 - 1)

	)

24 
	#__WCHAR_MAX
 (2147483647)

	)

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/ncurses_dll.h

30 #i‚de‡
NCURSES_DLL_H_ö˛


31 
	#NCURSES_DLL_H_ö˛
 1

	)

37 #unde‡
NCURSES_DLL


38 
	#NCURSES_STATIC


	)

40 #i‡
deföed
(
__CYGWIN__
)

41 #i‡
deföed
(
NCURSES_DLL
)

42 #i‡
deföed
(
NCURSES_STATIC
)

43 #unde‡
NCURSES_STATIC


46 #unde‡
NCURSES_IMPEXP


47 #unde‡
NCURSES_API


48 #unde‡
NCURSES_EXPORT


49 #unde‡
NCURSES_EXPORT_VAR


50 #i‡
deföed
(
NCURSES_DLL
)

52 
	#NCURSES_IMPEXP
 
	`__de˛•ec
(
dŒexp‹t
)

	)

53 #ñi‡
deföed
(
NCURSES_STATIC
)

55 
	#NCURSES_IMPEXP


	)

58 
	#NCURSES_IMPEXP
 
	`__de˛•ec
(
dŒimp‹t
)

	)

60 
	#NCURSES_API
 
__cde˛


	)

61 
	#NCURSES_EXPORT
(
ty≥
Ë
NCURSES_IMPEXP
Åy≥ 
NCURSES_API


	)

62 
	#NCURSES_EXPORT_VAR
(
ty≥
Ë
NCURSES_IMPEXP
 
	)
type

66 #i‡!
deföed
(
NCURSES_IMPEXP
)

67 
	#NCURSES_IMPEXP


	)

69 #i‡!
deföed
(
NCURSES_API
)

70 
	#NCURSES_API


	)

72 #i‡!
deföed
(
NCURSES_EXPORT
)

73 
	#NCURSES_EXPORT
(
ty≥
Ë
NCURSES_IMPEXP
Åy≥ 
NCURSES_API


	)

75 #i‡!
deföed
(
NCURSES_EXPORT_VAR
)

76 
	#NCURSES_EXPORT_VAR
(
ty≥
Ë
NCURSES_IMPEXP
 
	)
type

	@/usr/include/nl_types.h

19 #i‚de‡
_NL_TYPES_H


20 
	#_NL_TYPES_H
 1

	)

22 
	~<„©uªs.h
>

25 
	#NL_SETD
 1

	)

28 
	#NL_CAT_LOCALE
 1

	)

31 
__BEGIN_DECLS


34 *
	t∆_ˇtd
;

37 
	t∆_ôem
;

43 
∆_ˇtd
 
	$ˇt›í
 (
__c⁄°
 *
__ˇt_«me
, 
__Êag
Ë
	`__n⁄nuŒ
 ((1));

47 *
	$ˇtgës
 (
∆_ˇtd
 
__ˇèlog
, 
__£t
, 
__numbî
,

48 
__c⁄°
 *
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

51 
	$ˇt˛o£
 (
∆_ˇtd
 
__ˇèlog
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

53 
__END_DECLS


	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

134 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

138 #i‡
__GNUC_PREREQ
 (2,97)

140 
	#__Êex¨r
 []

	)

142 #ifde‡
__GNUC__


143 
	#__Êex¨r
 [0]

	)

145 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

146 
	#__Êex¨r
 []

	)

149 
	#__Êex¨r
 [1]

	)

165 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

167 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

168 #ifde‡
__˝lu•lus


169 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

170 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

172 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

173 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

175 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

176 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

189 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

190 
	#__©åibuã__
(
xyz
Ë

	)

196 #i‡
__GNUC_PREREQ
 (2,96)

197 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

199 
	#__©åibuã_mÆloc__


	)

205 #i‡
__GNUC_PREREQ
 (2,96)

206 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

208 
	#__©åibuã_puª__


	)

214 #i‡
__GNUC_PREREQ
 (3,1)

215 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

216 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

218 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

219 
	#__©åibuã_noölöe__


	)

223 #i‡
__GNUC_PREREQ
 (3,2)

224 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

226 
	#__©åibuã_dïªˇãd__


	)

235 #i‡
__GNUC_PREREQ
 (2,8)

236 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

238 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

245 #i‡
__GNUC_PREREQ
 (2,97)

246 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

247 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

249 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

254 #i‡
__GNUC_PREREQ
 (3,3)

255 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

257 
	#__n⁄nuŒ
(
∑øms
)

	)

262 #i‡
__GNUC_PREREQ
 (3,4)

263 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

264 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

265 #i‡
__USE_FORTIFY_LEVEL
 > 0

266 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

269 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

271 #i‚de‡
__wur


272 
	#__wur


	)

276 #i‡
__GNUC_PREREQ
 (3,2)

277 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

279 
	#__Æways_ölöe
 
__ölöe


	)

286 #i‡!
__GNUC_PREREQ
 (2,8)

287 
	#__exãnsi⁄__


	)

291 #i‡!
__GNUC_PREREQ
 (2,92)

292 
	#__ª°ri˘


	)

298 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


299 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

301 #ifde‡
__GNUC__


302 
	#__ª°ri˘_¨r


	)

304 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

305 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

308 
	#__ª°ri˘_¨r


	)

313 
	~<bôs/w‹dsize.h
>

315 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


316 
	#__LDBL_COMPAT
 1

	)

317 #ifde‡
__REDIRECT


318 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

319 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

320 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

321 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

322 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

323 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

324 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

325 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

326 
	#__LDBL_REDIR_DECL
(
«me
) \

327 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

330 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


331 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

332 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

333 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

334 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

335 
	#__LDBL_REDIR_DECL
(
«me
)

	)

	@/usr/include/unctrl.h

44 #i‚de‡
NCURSES_UNCTRL_H_ö˛


45 
	#NCURSES_UNCTRL_H_ö˛
 1

	)

47 #unde‡
NCURSES_VERSION


48 
	#NCURSES_VERSION
 "5.5"

	)

50 #ifde‡
__˝lu•lus


54 
	~<cur£s.h
>

56 #unde‡
un˘æ


57 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
un˘æ
 (
chty≥
);

59 #ifde‡
__˝lu•lus


	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‚de‡
__√ed_mb°©e_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #ifde‡
__USE_UNIX98


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

43 
	#__√ed_size_t


	)

44 
	#__√ed_wch¨_t


	)

45 
	#__√ed_NULL


	)

47 
	#__√ed_wöt_t


	)

48 
	~<°ddef.h
>

50 
	~<bôs/wch¨.h
>

54 #i‚de‡
_WINT_T


59 
	#_WINT_T


	)

60 
	twöt_t
;

64 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

65 && 
deföed
 
__WINT_TYPE__


66 
__BEGIN_NAMESPACE_STD


67 
__WINT_TYPE__
 
	twöt_t
;

68 
	g__END_NAMESPACE_STD


73 #i‚de‡
__mb°©e_t_deföed


74 
	#__mb°©e_t_deföed
 1

	)

78 
	m__cou¡
;

81 
wöt_t
 
	m__wch
;

82 
	m__wchb
[4];

83 } 
	m__vÆue
;

84 } 
	t__mb°©e_t
;

86 #unde‡
__√ed_mb°©e_t


91 #ifde‡
_WCHAR_H


93 
__BEGIN_NAMESPACE_C99


95 
__mb°©e_t
 
	tmb°©e_t
;

96 
	g__END_NAMESPACE_C99


97 #ifde‡
__USE_GNU


98 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

101 #i‚de‡
WCHAR_MIN


103 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

104 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

107 #i‚de‡
WEOF


108 
	#WEOF
 (0xffffffffu)

	)

113 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


114 
	~<w˘y≥.h
>

118 
__BEGIN_DECLS


120 
__BEGIN_NAMESPACE_STD


123 
tm
;

127 
	$__USING_NAMESPACE_STD
(
tm
)

128 
__END_NAMESPACE_STD


131 
__BEGIN_NAMESPACE_C99


133 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

134 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

136 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

137 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

138 
__THROW
;

141 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

142 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

144 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

146 
__THROW
;

149 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

150 
__THROW
 
__©åibuã_puª__
;

152 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

153 
__THROW
 
__©åibuã_puª__
;

154 
__END_NAMESPACE_C99


156 #ifde‡
__USE_GNU


158 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

161 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

162 
size_t
 
__n
Ë
__THROW
;

166 
	~<xloˇÀ.h
>

168 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

169 
__loˇÀ_t
 
__loc
Ë
__THROW
;

171 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

172 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

175 
__BEGIN_NAMESPACE_C99


178 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

182 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

184 
__END_NAMESPACE_C99


186 #ifde‡
__USE_GNU


192 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

193 
__loˇÀ_t
 
__loc
Ë
__THROW
;

198 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

199 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

202 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

205 
__BEGIN_NAMESPACE_C99


207 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

208 
__THROW
 
__©åibuã_puª__
;

210 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

211 
__THROW
 
__©åibuã_puª__
;

212 
__END_NAMESPACE_C99


214 #ifde‡
__USE_GNU


217 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

218 
__THROW
 
__©åibuã_puª__
;

221 
__BEGIN_NAMESPACE_C99


224 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

225 
__THROW
 
__©åibuã_puª__
;

228 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

229 
__THROW
 
__©åibuã_puª__
;

231 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

232 
__THROW
 
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

235 
__THROW
 
__©åibuã_puª__
;

238 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

240 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

243 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

244 
__END_NAMESPACE_C99


246 #ifde‡
__USE_XOPEN


248 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

249 
__THROW
 
__©åibuã_puª__
;

252 #ifde‡
__USE_GNU


254 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

255 
__THROW
 
__©åibuã_puª__
;

259 
__BEGIN_NAMESPACE_C99


261 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

262 
__THROW
 
__©åibuã_puª__
;

265 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

266 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

267 
__THROW
 
__©åibuã_puª__
;

270 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

271 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

275 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

276 
__THROW
;

279 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

280 
__END_NAMESPACE_C99


282 #ifde‡
__USE_GNU


285 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

286 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

287 
__THROW
;

291 
__BEGIN_NAMESPACE_C99


294 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

298 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

302 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

306 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

307 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

308 
mb°©e_t
 *
__p
Ë
__THROW
;

311 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

312 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

315 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

317 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

318 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

319 
__END_NAMESPACE_C99


321 #ifde‡
__USE_EXTERN_INLINES


327 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

328 
__ölöe
 
wöt_t


329 
	`__NTH
 (
	$btowc
 (
__c
))

330 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

331 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

333 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

334 
__ölöe
 

335 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

336 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

337 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

339 
__ölöe
 
size_t


340 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

341 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

342 {  (
__ps
 !
NULL


343 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

346 
__BEGIN_NAMESPACE_C99


349 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

350 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

351 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

355 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

356 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

357 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

358 
__END_NAMESPACE_C99


361 #ifdef 
__USE_GNU


364 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

365 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

366 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

370 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

371 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

372 
size_t
 
__nwc
, size_à
__Àn
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN


380 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

384 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

388 
__BEGIN_NAMESPACE_C99


391 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

392 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

394 #ifde‡
__USE_ISOC99


396 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

397 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

398 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

399 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

405 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

406 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

410 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

411 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

412 
__THROW
;

414 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

417 
__exãnsi⁄__


418 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

419 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

420 
__THROW
;

424 
__exãnsi⁄__


425 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

426 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

427 
__ba£
Ë
__THROW
;

429 
__END_NAMESPACE_C99


431 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


434 
__exãnsi⁄__


435 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

436 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

437 
__THROW
;

441 
__exãnsi⁄__


442 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

443 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

444 
__ba£
Ë
__THROW
;

447 #ifde‡
__USE_GNU


461 
	~<xloˇÀ.h
>

465 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

466 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

467 
__loˇÀ_t
 
__loc
Ë
__THROW
;

469 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

470 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

471 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

473 
__exãnsi⁄__


474 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

475 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

476 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

478 
__exãnsi⁄__


479 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

480 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

481 
__ba£
, 
__loˇÀ_t
 
__loc
)

482 
__THROW
;

484 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

485 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

486 
__THROW
;

488 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

489 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

490 
__THROW
;

492 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

493 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

494 
__loˇÀ_t
 
__loc
Ë
__THROW
;

500 
	$__wc°od_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__group
)

502 
__THROW
;

503 
	$__wc°of_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

504 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__group
)

505 
__THROW
;

506 
	$__wc°ﬁd_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

507 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

508 
__group
Ë
__THROW
;

510 #i‚de‡
__wc°ﬁ_öã∫Æ_deföed


511 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

512 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

513 
__ba£
, 
__group
Ë
__THROW
;

514 
	#__wc°ﬁ_öã∫Æ_deföed
 1

	)

516 #i‚de‡
__wc°oul_öã∫Æ_deföed


517 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈t
,

518 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

519 
__ba£
, 
__group
Ë
__THROW
;

520 
	#__wc°oul_öã∫Æ_deföed
 1

	)

522 #i‚de‡
__wc°ﬁl_öã∫Æ_deföed


523 
__exãnsi⁄__


524 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

525 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

526 
__ba£
, 
__group
Ë
__THROW
;

527 
	#__wc°ﬁl_öã∫Æ_deföed
 1

	)

529 #i‚de‡
__wc°ouŒ_öã∫Æ_deföed


530 
__exãnsi⁄__


531 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *

532 
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **

534 
__ª°ri˘
 
__íd±r
,

535 
__ba£
,

536 
__group
Ë
__THROW
;

537 
	#__wc°ouŒ_öã∫Æ_deföed
 1

	)

541 #i‡
deföed
 
__OPTIMIZE__
 && 
__GNUC__
 >= 2

543 
__BEGIN_NAMESPACE_C99


545 
__ölöe
 

546 
	`__NTH
 (
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

547 
wch¨_t
 **
__ª°ri˘
 
__íd±r
))

548 {  
	`__wc°od_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

549 
__ölöe
 

550 
__NTH
 (
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

551 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

552 {  
	`__wc°ﬁ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

553 
__ölöe
 

554 
__NTH
 (
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

555 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

556 {  
	`__wc°oul_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

557 
__END_NAMESPACE_C99


559 #ifde‡
__USE_GNU


560 
__ölöe
 

561 
__NTH
 (
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

562 
wch¨_t
 **
__ª°ri˘
 
__íd±r
))

563 {  
	`__wc°of_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

564 #i‚de‡
__LDBL_COMPAT


565 
__ölöe
 

566 
__NTH
 (
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

567 
wch¨_t
 **
__ª°ri˘
 
__íd±r
))

568 {  
	`__wc°ﬁd_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

570 
__exãnsi⁄__


571 
__ölöe
 

572 
__NTH
 (
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

573 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

574 {  
	`__wc°ﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

575 
__exãnsi⁄__


576 
__ölöe
 

577 
__NTH
 (
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

578 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

579 {  
	`__wc°ouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

584 #ifdef 
__USE_GNU


587 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

591 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

592 
__THROW
;

597 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


598 
__BEGIN_NAMESPACE_C99


601 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

608 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

609 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

615 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

618 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

619 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

620 
__THROW
 ;

626 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

627 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

628 
__gnuc_va_li°
 
__¨g
)

634 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

635 
__gnuc_va_li°
 
__¨g
)

639 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

640 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

641 
__gnuc_va_li°
 
__¨g
)

642 
__THROW
 ;

649 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

650 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

656 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

659 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

660 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

661 
__THROW
 ;

663 
__END_NAMESPACE_C99


666 #ifde‡
__USE_ISOC99


667 
__BEGIN_NAMESPACE_C99


673 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

674 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

675 
__gnuc_va_li°
 
__¨g
)

681 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

682 
__gnuc_va_li°
 
__¨g
)

685 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

686 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

687 
__gnuc_va_li°
 
__¨g
)

688 
__THROW
 ;

690 
__END_NAMESPACE_C99


694 
__BEGIN_NAMESPACE_C99


699 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

700 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

706 
wöt_t
 
	`gëwch¨
 ();

713 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

714 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

720 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

728 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

729 
__FILE
 *
__ª°ri˘
 
__°ªam
);

735 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

736 
__FILE
 *
__ª°ri˘
 
__°ªam
);

743 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

744 
__END_NAMESPACE_C99


747 #ifde‡
__USE_GNU


755 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

756 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

764 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

772 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

781 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

782 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

791 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

792 
__FILE
 *
__ª°ri˘
 
__°ªam
);

800 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

801 
__FILE
 *
__ª°ri˘
 
__°ªam
);

805 
__BEGIN_NAMESPACE_C99


809 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

810 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

811 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

812 
__END_NAMESPACE_C99


814 #ifde‡
__USE_GNU


815 
	~<xloˇÀ.h
>

819 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

820 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

821 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

822 
__loˇÀ_t
 
__loc
Ë
__THROW
;

831 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


832 
	#__√ed_iswxxx


	)

833 
	~<w˘y≥.h
>

837 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


838 
	~<bôs/wch¨2.h
>

841 #ifde‡
__LDBL_COMPAT


842 
	~<bôs/wch¨-ldbl.h
>

845 
__END_DECLS


	@/usr/include/asm-i386/ioctls.h

1 #i‚de‡
__ARCH_I386_IOCTLS_H__


2 
	#__ARCH_I386_IOCTLS_H__


	)

4 
	~<asm/io˘l.h
>

8 
	#TCGETS
 0x5401

	)

9 
	#TCSETS
 0x5402

	)

10 
	#TCSETSW
 0x5403

	)

11 
	#TCSETSF
 0x5404

	)

12 
	#TCGETA
 0x5405

	)

13 
	#TCSETA
 0x5406

	)

14 
	#TCSETAW
 0x5407

	)

15 
	#TCSETAF
 0x5408

	)

16 
	#TCSBRK
 0x5409

	)

17 
	#TCXONC
 0x540A

	)

18 
	#TCFLSH
 0x540B

	)

19 
	#TIOCEXCL
 0x540C

	)

20 
	#TIOCNXCL
 0x540D

	)

21 
	#TIOCSCTTY
 0x540E

	)

22 
	#TIOCGPGRP
 0x540F

	)

23 
	#TIOCSPGRP
 0x5410

	)

24 
	#TIOCOUTQ
 0x5411

	)

25 
	#TIOCSTI
 0x5412

	)

26 
	#TIOCGWINSZ
 0x5413

	)

27 
	#TIOCSWINSZ
 0x5414

	)

28 
	#TIOCMGET
 0x5415

	)

29 
	#TIOCMBIS
 0x5416

	)

30 
	#TIOCMBIC
 0x5417

	)

31 
	#TIOCMSET
 0x5418

	)

32 
	#TIOCGSOFTCAR
 0x5419

	)

33 
	#TIOCSSOFTCAR
 0x541A

	)

34 
	#FIONREAD
 0x541B

	)

35 
	#TIOCINQ
 
FIONREAD


	)

36 
	#TIOCLINUX
 0x541C

	)

37 
	#TIOCCONS
 0x541D

	)

38 
	#TIOCGSERIAL
 0x541E

	)

39 
	#TIOCSSERIAL
 0x541F

	)

40 
	#TIOCPKT
 0x5420

	)

41 
	#FIONBIO
 0x5421

	)

42 
	#TIOCNOTTY
 0x5422

	)

43 
	#TIOCSETD
 0x5423

	)

44 
	#TIOCGETD
 0x5424

	)

45 
	#TCSBRKP
 0x5425

	)

47 
	#TIOCSBRK
 0x5427

	)

48 
	#TIOCCBRK
 0x5428

	)

49 
	#TIOCGSID
 0x5429

	)

50 
	#TIOCGPTN
 
	`_IOR
('T',0x30, Ë

	)

51 
	#TIOCSPTLCK
 
	`_IOW
('T',0x31, Ë

	)

53 
	#FIONCLEX
 0x5450

	)

54 
	#FIOCLEX
 0x5451

	)

55 
	#FIOASYNC
 0x5452

	)

56 
	#TIOCSERCONFIG
 0x5453

	)

57 
	#TIOCSERGWILD
 0x5454

	)

58 
	#TIOCSERSWILD
 0x5455

	)

59 
	#TIOCGLCKTRMIOS
 0x5456

	)

60 
	#TIOCSLCKTRMIOS
 0x5457

	)

61 
	#TIOCSERGSTRUCT
 0x5458

	)

62 
	#TIOCSERGETLSR
 0x5459

	)

63 
	#TIOCSERGETMULTI
 0x545A

	)

64 
	#TIOCSERSETMULTI
 0x545B

	)

66 
	#TIOCMIWAIT
 0x545C

	)

67 
	#TIOCGICOUNT
 0x545D

	)

68 
	#TIOCGHAYESESP
 0x545E

	)

69 
	#TIOCSHAYESESP
 0x545F

	)

70 
	#FIOQSIZE
 0x5460

	)

73 
	#TIOCPKT_DATA
 0

	)

74 
	#TIOCPKT_FLUSHREAD
 1

	)

75 
	#TIOCPKT_FLUSHWRITE
 2

	)

76 
	#TIOCPKT_STOP
 4

	)

77 
	#TIOCPKT_START
 8

	)

78 
	#TIOCPKT_NOSTOP
 16

	)

79 
	#TIOCPKT_DOSTOP
 32

	)

81 
	#TIOCSER_TEMT
 0x01

	)

	@/usr/include/asm-x86_64/ioctls.h

1 #i‚de‡
__ARCH_X8664_IOCTLS_H__


2 
	#__ARCH_X8664_IOCTLS_H__


	)

4 
	~<asm/io˘l.h
>

8 
	#TCGETS
 0x5401

	)

9 
	#TCSETS
 0x5402

	)

10 
	#TCSETSW
 0x5403

	)

11 
	#TCSETSF
 0x5404

	)

12 
	#TCGETA
 0x5405

	)

13 
	#TCSETA
 0x5406

	)

14 
	#TCSETAW
 0x5407

	)

15 
	#TCSETAF
 0x5408

	)

16 
	#TCSBRK
 0x5409

	)

17 
	#TCXONC
 0x540A

	)

18 
	#TCFLSH
 0x540B

	)

19 
	#TIOCEXCL
 0x540C

	)

20 
	#TIOCNXCL
 0x540D

	)

21 
	#TIOCSCTTY
 0x540E

	)

22 
	#TIOCGPGRP
 0x540F

	)

23 
	#TIOCSPGRP
 0x5410

	)

24 
	#TIOCOUTQ
 0x5411

	)

25 
	#TIOCSTI
 0x5412

	)

26 
	#TIOCGWINSZ
 0x5413

	)

27 
	#TIOCSWINSZ
 0x5414

	)

28 
	#TIOCMGET
 0x5415

	)

29 
	#TIOCMBIS
 0x5416

	)

30 
	#TIOCMBIC
 0x5417

	)

31 
	#TIOCMSET
 0x5418

	)

32 
	#TIOCGSOFTCAR
 0x5419

	)

33 
	#TIOCSSOFTCAR
 0x541A

	)

34 
	#FIONREAD
 0x541B

	)

35 
	#TIOCINQ
 
FIONREAD


	)

36 
	#TIOCLINUX
 0x541C

	)

37 
	#TIOCCONS
 0x541D

	)

38 
	#TIOCGSERIAL
 0x541E

	)

39 
	#TIOCSSERIAL
 0x541F

	)

40 
	#TIOCPKT
 0x5420

	)

41 
	#FIONBIO
 0x5421

	)

42 
	#TIOCNOTTY
 0x5422

	)

43 
	#TIOCSETD
 0x5423

	)

44 
	#TIOCGETD
 0x5424

	)

45 
	#TCSBRKP
 0x5425

	)

46 
	#TIOCSBRK
 0x5427

	)

47 
	#TIOCCBRK
 0x5428

	)

48 
	#TIOCGSID
 0x5429

	)

49 
	#TIOCGPTN
 
	`_IOR
('T',0x30, Ë

	)

50 
	#TIOCSPTLCK
 
	`_IOW
('T',0x31, Ë

	)

52 
	#FIONCLEX
 0x5450

	)

53 
	#FIOCLEX
 0x5451

	)

54 
	#FIOASYNC
 0x5452

	)

55 
	#TIOCSERCONFIG
 0x5453

	)

56 
	#TIOCSERGWILD
 0x5454

	)

57 
	#TIOCSERSWILD
 0x5455

	)

58 
	#TIOCGLCKTRMIOS
 0x5456

	)

59 
	#TIOCSLCKTRMIOS
 0x5457

	)

60 
	#TIOCSERGSTRUCT
 0x5458

	)

61 
	#TIOCSERGETLSR
 0x5459

	)

62 
	#TIOCSERGETMULTI
 0x545A

	)

63 
	#TIOCSERSETMULTI
 0x545B

	)

65 
	#TIOCMIWAIT
 0x545C

	)

66 
	#TIOCGICOUNT
 0x545D

	)

67 
	#TIOCGHAYESESP
 0x545E

	)

68 
	#TIOCSHAYESESP
 0x545F

	)

69 
	#FIOQSIZE
 0x5460

	)

72 
	#TIOCPKT_DATA
 0

	)

73 
	#TIOCPKT_FLUSHREAD
 1

	)

74 
	#TIOCPKT_FLUSHWRITE
 2

	)

75 
	#TIOCPKT_STOP
 4

	)

76 
	#TIOCPKT_START
 8

	)

77 
	#TIOCPKT_NOSTOP
 16

	)

78 
	#TIOCPKT_DOSTOP
 32

	)

80 
	#TIOCSER_TEMT
 0x01

	)

	@/usr/include/asm/errno.h

2 #i‚de‡
__ASM_STUB_ERRNO_H


3 
	#__ASM_STUB_ERRNO_H


	)

4 #i‡
deföed
 
__x86_64__


5 
	~<asm-x86_64/î∫o.h
>

6 #ñi‡
deföed
 
__i386__


7 
	~<asm-i386/î∫o.h
>

9 #w¨nög 
This
 
machöe
 
≠≥¨s
 
to
 
be
 
√ôhî
 
x86_64
 
n‹
 
i386
.

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

41 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


42 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


43 
±hªad_muãx_t
 
	t__libc_lock_t
;

44 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

46 
	t__libc_lock_t
;

47 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

49 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

50 #ifde‡
__USE_UNIX98


51 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

53 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

56 
__libc_lock_›aque__
 
	t__libc_lock_t
;

57 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

58 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

62 
±hªad_key_t
 
	t__libc_key_t
;

71 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

73 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

75 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

77 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

89 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

90 #i‡
LLL_LOCK_INITIALIZER
 == 0

91 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

92 
CLASS
 
__libc_lock_t
 
NAME
;

	)

94 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

95 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

98 #i‡
__LT_SPINLOCK_INIT
 == 0

99 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

100 
CLASS
 
__libc_lock_t
 
NAME
;

	)

102 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

103 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

107 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

108 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

112 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

113 #i‡
LLL_LOCK_INITIALIZER
 == 0

114 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

115 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

117 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

118 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

120 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

121 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

123 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

124 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

125 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

126 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

129 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

130 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

131 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

132 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

134 
	#__πld_lock_öôülize
(
NAME
) \

135 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

142 #ifde‡
__PIC__


143 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

144 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

145 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

147 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

148 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

152 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


153 
	#PTF
(
NAME
Ë
__libc_±hªad_fun˘i⁄s
.
±r_
##
	)
NAME

154 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

155 (
	`PTF
(
FUNC
Ë!
NULL
 ? PTF(FUNCË
ARGS
 : 
ELSE
)

	)

157 
	#PTF
(
NAME
Ë
	)
NAME

158 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

159 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

165 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

166 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

168 
	#__libc_lock_öô
(
NAME
) \

169 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

171 
	#__libc_rwlock_öô
(
NAME
) \

172 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

175 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

176 
	#__libc_lock_öô_ªcursive
(
NAME
) \

177 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

179 
	#__libc_lock_öô_ªcursive
(
NAME
) \

181 i‡(
__±hªad_muãx_öô
 !
NULL
) \

183 
±hªad_muãx©å_t
 
__©å
; \

184 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

185 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

186 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

187 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

189 } 0)

	)

192 
	#__πld_lock_öô_ªcursive
(
NAME
) \

194 i‡(
__±hªad_muãx_öô
 !
NULL
) \

196 
±hªad_muãx©å_t
 
__©å
; \

197 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

198 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

199 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

200 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

202 } 0)

	)

207 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

208 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

210 
	#__libc_lock_föi
(
NAME
) \

211 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

213 
	#__libc_rwlock_föi
(
NAME
) \

214 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

217 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

218 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

220 
	#__libc_lock_föi_ªcursive
(
NAME
) \

221 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

225 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

226 
	#__libc_lock_lock
(
NAME
) \

227 ({ 
	`Œl_lock
 (
NAME
); 0; })

	)

229 
	#__libc_lock_lock
(
NAME
) \

230 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

232 
	#__libc_rwlock_rdlock
(
NAME
) \

233 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

234 
	#__libc_rwlock_wæock
(
NAME
) \

235 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

238 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

239 
	#__libc_lock_lock_ªcursive
(
NAME
) \

241 *
£lf
 = 
THREAD_SELF
; \

242 i‡((
NAME
).
ow√r
 !
£lf
) \

244 
	`Œl_lock
 ((
NAME
).
lock
); \

245 (
NAME
).
ow√r
 = 
£lf
; \

247 ++(
NAME
).
˙t
; \

248 } 0)

	)

250 
	#__libc_lock_lock_ªcursive
(
NAME
) \

251 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

255 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

256 
	#__libc_lock_åylock
(
NAME
) \

257 
	`Œl_åylock
 (
NAME
)

	)

259 
	#__libc_lock_åylock
(
NAME
) \

260 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

262 
	#__libc_rwlock_åyrdlock
(
NAME
) \

263 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

264 
	#__libc_rwlock_åywæock
(
NAME
) \

265 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

268 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

269 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

271 
ªsu…
 = 0; \

272 *
£lf
 = 
THREAD_SELF
; \

273 i‡((
NAME
).
ow√r
 !
£lf
) \

275 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

277 (
NAME
).
ow√r
 = 
£lf
; \

278 (
NAME
).
˙t
 = 1; \

281 
ªsu…
 = 
EBUSY
; \

284 ++(
NAME
).
˙t
; \

285 
ªsu…
; \

286 })

	)

288 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

289 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

292 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

293 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

296 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

297 
	#__libc_lock_u∆ock
(
NAME
) \

298 
	`Œl_u∆ock
 (
NAME
)

	)

300 
	#__libc_lock_u∆ock
(
NAME
) \

301 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

303 
	#__libc_rwlock_u∆ock
(
NAME
) \

304 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

307 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

309 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

311 i‡(--(
NAME
).
˙t
 == 0) \

313 (
NAME
).
ow√r
 = 
NULL
; \

314 
	`Œl_u∆ock
 ((
NAME
).
lock
); \

316 } 0)

	)

318 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

319 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

322 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


323 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

324 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

326 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

327 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

329 
	#__πld_lock_lock_ªcursive
(
NAME
) \

330 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

332 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

333 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

335 
	#__πld_lock_lock_ªcursive
(
NAME
) \

336 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

338 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

339 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

343 #i‡
PTHREAD_ONCE_INIT
 == 0

346 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

347 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

349 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

350 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

354 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

356 i‡(
	`PTF
(
__±hªad_⁄˚
Ë!
NULL
) \

357 
	`PTF
(
__±hªad_⁄˚
Ë(&(
ONCE_CONTROL
), 
INIT_FUNCTION
); \

358 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

359 
	`INIT_FUNCTION
 (); \

360 (
ONCE_CONTROL
) |= 2; \

362 } 0)

	)

369 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

370 (*
routöe
Ë(*), *
¨g
);

371 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

372 
execuã
);

373 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

374 (*
routöe
Ë(*), *
¨g
);

375 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

376 
execuã
);

379 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

380 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

381 
_avaû
; \

382 i‡(
DOIT
) { \

383 
_avaû
 = 
	`PTF
(
_±hªad_˛ónup_push_de„r
Ë!
NULL
; \

384 i‡(
_avaû
) { \

385 
	`PTF
(
_±hªad_˛ónup_push_de„r
Ë(&
_buf„r
, 
FCT
, 
ARG
); \

387 
_buf„r
.
__routöe
 = (
FCT
); \

388 
_buf„r
.
__¨g
 = (
ARG
); \

391 
_avaû
 = 0; \

392 }

	)

395 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

396 i‡(
_avaû
) { \

397 
	`PTF
(
_±hªad_˛ónup_p›_ª°‹e
Ë(&
_buf„r
, 
DOIT
); \

398 } i‡(
DOIT
) \

399 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

400 
	}

	)
}

403 
	#__libc_˛ónup_íd
(
DOIT
) \

404 i‡(
_avaû
) { \

405 
	`PTF
(
_±hªad_˛ónup_p›_ª°‹e
Ë(&
_buf„r
, 
DOIT
); \

406 } i‡(
DOIT
) \

407 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

411 
__ölöe
 

412 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

414 i‡(
f
->
__do_ô
)

415 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

416 
	}
}

418 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

420 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

421 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

422 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

423 .
__do_ô
 = 1 };

	)

425 
	#__libc_˛ónup_p›
(
execuã
) \

426 
__˛‰ame
.
__do_ô
 = (
execuã
); \

427 } 0)

	)

431 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

432 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

435 
	#__libc_gë•ecific
(
KEY
) \

436 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

439 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

440 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

446 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

447 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

448 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

449 (*
__∑ª¡
) (),

450 (*
__chûd
) (),

451 *
__dso_h™dÀ
);

456 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

457 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

459 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

461 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

463 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

465 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

467 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

469 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

471 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

472 
__köd
);

474 #ifde‡
__USE_UNIX98


475 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

476 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

478 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

480 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

482 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

484 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

486 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

488 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

491 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

492 (*
__de°r_fun˘i⁄
) (*));

494 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

495 
__c⁄°
 *
__poöãr
);

497 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

499 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

500 (*
__öô_routöe
) ());

502 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

503 (*
__∑ª¡
) (),

504 (*
__chûd
) ());

510 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


511 #ifde‡
wók_exã∫


512 #i‡
_LIBC


513 
	~<bp-sym.h
>

515 
	#BP_SYM
 (
sym
Ë
	)
sym

517 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

518 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

519 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

520 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

521 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

522 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

523 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

524 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

525 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

526 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

527 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

528 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

529 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

530 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

531 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

532 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

533 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

534 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

535 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

536 
	$wók_exã∫
 (
__±hªad_öôülize
)

537 
	$wók_exã∫
 (
__±hªad_©f‹k
)

538 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

539 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

540 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

542 #¥agm®
wók
 
__±hªad_muãx_öô


543 #¥agm®
wók
 
__±hªad_muãx_de°roy


544 #¥agm®
wók
 
__±hªad_muãx_lock


545 #¥agm®
wók
 
__±hªad_muãx_åylock


546 #¥agm®
wók
 
__±hªad_muãx_u∆ock


547 #¥agm®
wók
 
__±hªad_muãx©å_öô


548 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


549 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


550 #¥agm®
wók
 
__±hªad_rwlock_de°roy


551 #¥agm®
wók
 
__±hªad_rwlock_rdlock


552 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


553 #¥agm®
wók
 
__±hªad_rwlock_wæock


554 #¥agm®
wók
 
__±hªad_rwlock_åywæock


555 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


556 #¥agm®
wók
 
__±hªad_key_¸óã


557 #¥agm®
wók
 
__±hªad_£t•ecific


558 #¥agm®
wók
 
__±hªad_gë•ecific


559 #¥agm®
wók
 
__±hªad_⁄˚


560 #¥agm®
wók
 
__±hªad_öôülize


561 #¥agm®
wók
 
__±hªad_©f‹k


562 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


563 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


564 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 
__LDBL_REDIR_DECL
 (
fwsˇnf
);

33 
__LDBL_REDIR_DECL
 (
wsˇnf
);

34 
__LDBL_REDIR_DECL
 (
swsˇnf
);

35 
	g__END_NAMESPACE_C99


38 #ifde‡
__USE_ISOC99


39 
__BEGIN_NAMESPACE_C99


40 
__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

41 
__LDBL_REDIR_DECL
 (
vfwsˇnf
);

42 
__LDBL_REDIR_DECL
 (
vwsˇnf
);

43 
__LDBL_REDIR_DECL
 (
vswsˇnf
);

44 
	g__END_NAMESPACE_C99


47 #ifde‡
__USE_GNU


48 
__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

51 
__LDBL_REDIR1_DECL
 (
__wc°ﬁd_öã∫Æ
, 
__wc°od_öã∫Æ
);

53 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


54 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

55 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

56 #i‡
__USE_FORTIFY_LEVEL
 > 1

57 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

58 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

59 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

60 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

33 
__Æways_ölöe
 
wch¨_t
 *

34 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

35 
size_t
 
__n
))

37 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

38  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
, 
	`__bos0
 (__s1Ë/  (
wch¨_t
));

39  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

40 
	}
}

43 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

44 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

45 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

46 
__c⁄°
 
wch¨_t
 *
__s2
,

47 
size_t
 
__n
), 
wmemmove
);

49 
__Æways_ölöe
 
wch¨_t
 *

50 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

51 
size_t
 
__n
))

53 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

54  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
, 
	`__bos0
 (__s1Ë/  (
wch¨_t
));

55  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

56 
	}
}

59 #ifde‡
__USE_GNU


60 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

61 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

62 
size_t
 
__ns1
Ë
__THROW
;

63 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

64 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

65 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

66 
size_t
 
__n
), 
wmemp˝y
);

68 
__Æways_ölöe
 
wch¨_t
 *

69 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

70 
size_t
 
__n
))

72 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

73  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
, 
	`__bos0
 (__s1Ë/  (
wch¨_t
));

74  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

75 
	}
}

79 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

80 
size_t
 
__ns
Ë
__THROW
;

81 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

82 
size_t
 
__n
), 
wmem£t
);

84 
__Æways_ölöe
 
wch¨_t
 *

85 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__ª°ri˘
 
__s
, wch¨_à
__c
, 
size_t
 
__n
))

87 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

88  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

89  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

90 
	}
}

93 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

94 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

95 
size_t
 
__n
Ë
__THROW
;

96 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

97 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

98 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

100 
__Æways_ölöe
 
wch¨_t
 *

101 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

103 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

104  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

105  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

106 
	}
}

109 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
,

110 
size_t
 
__de°Àn
Ë
__THROW
;

111 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
, (wch¨_à*
__de°
,

112 
__c⁄°
 
wch¨_t
 *
__§c
),

113 
w˝˝y
);

115 
__Æways_ölöe
 
wch¨_t
 *

116 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

118 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

119  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

120  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

121 
	}
}

124 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

125 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

126 
size_t
 
__de°Àn
Ë
__THROW
;

127 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

128 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

129 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

130 
size_t
 
__n
), 
wc¢˝y
);

132 
__Æways_ölöe
 
wch¨_t
 *

133 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

135 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

136 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| 
	`__bos
 (
__de°
) >= __n))

137  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

138 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

139  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

140 
	}
}

143 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

144 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

145 
size_t
 
__de°Àn
Ë
__THROW
;

146 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

147 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

149 
size_t
 
__n
), 
w˝n˝y
);

151 
__Æways_ölöe
 
wch¨_t
 *

152 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

154 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

155 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| 
	`__bos
 (
__de°
) >= __n))

156  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

157 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

158  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

159 
	}
}

162 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

163 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

164 
size_t
 
__de°Àn
Ë
__THROW
;

165 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

166 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

167 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

169 
__Æways_ölöe
 
wch¨_t
 *

170 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

172 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

173  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

174  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

175 
	}
}

178 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

179 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

180 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

181 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

182 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

184 
size_t
 
__n
), 
wc¢ˇt
);

186 
__Æways_ölöe
 
wch¨_t
 *

187 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

189 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

190  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

191 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

192  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

193 
	}
}

196 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

197 
__Êag
, 
size_t
 
__s_Àn
,

198 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

199 
__THROW
 ;

202 
	#sw¥ötf
(
s
, 
n
, ...) \

203 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

204 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (s), 
__VA_ARGS__
) \

205 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

208 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

209 
__Êag
, 
size_t
 
__s_Àn
,

210 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

211 
__gnuc_va_li°
 
__¨g
)

212 
__THROW
 ;

214 
	#vsw¥ötf
(
s
, 
n
, 
fmt
, 
≠
) \

215 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

216 ? 
	`__vsw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (s), 
fmt
, 
≠
) \

217 : 
	`vsw¥ötf
 (
s
, 
n
, 
fmt
, 
≠
))

	)

220 #i‡
__USE_FORTIFY_LEVEL
 > 1

222 
	`__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

223 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

224 
	`__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

226 
	`__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

227 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

228 
__gnuc_va_li°
 
__≠
);

229 
	`__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

230 
__gnuc_va_li°
 
__≠
);

232 
	#w¥ötf
(...) \

233 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

234 
	#fw¥ötf
(
°ªam
, ...) \

235 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

236 
	#vw¥ötf
(
f‹m©
, 
≠
) \

237 
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

238 
	#vfw¥ötf
(
°ªam
, 
f‹m©
, 
≠
) \

239 
	`__vfw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

243 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

244 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

245 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

246 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

247 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

249 
__Æways_ölöe
 
__wur
 
wch¨_t
 *

250 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

252 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1

253 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| (
size_t
Ë__¿> 
	`__bos
 (
__s
)))

254  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 #ifde‡
__USE_GNU


259 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

260 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

261 
__wur
;

262 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

263 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

264 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

265 
__wur
;

267 
__Æways_ölöe
 
__wur
 
wch¨_t
 *

268 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

270 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1

271 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| (
size_t
Ë__¿> 
	`__bos
 (
__s
)))

272  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

273  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

274 
	}
}

278 
size_t
 
	$__w¸tomb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__p
,

279 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

280 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

281 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

282 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

284 
__Æways_ölöe
 
__wur
 
size_t


285 
	`__NTH
 (
	$w¸tomb
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__ps
))

290 
	#__WCHAR_MB_LEN_MAX
 16

	)

291 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


294 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

295  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

296  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

297 
	}
}

300 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

301 
__c⁄°
 **
__ª°ri˘
 
__§c
,

302 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

303 
size_t
 
__d°Àn
Ë
__THROW
;

304 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

305 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

306 
__c⁄°
 **
__ª°ri˘
 
__§c
,

307 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

308 
mb§towcs
);

310 
__Æways_ölöe
 
size_t


311 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

312 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

314 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

315 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
)

316 || 
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
)))

317  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

318 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

319  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

320 
	}
}

323 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

324 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

325 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

326 
size_t
 
__d°Àn
Ë
__THROW
;

327 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

328 (*
__ª°ri˘
 
__d°
,

329 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

330 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

331 
wc§tombs
);

333 
__Æways_ölöe
 
size_t


334 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

335 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

337 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

338 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| __À¿> 
	`__bos
 (
__d°
)))

339  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

340  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

341 
	}
}

344 #ifde‡
__USE_GNU


345 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

346 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

347 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

348 
size_t
 
__d°Àn
Ë
__THROW
;

349 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

350 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

351 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

352 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

353 
mb¢πowcs
);

355 
__Æways_ölöe
 
size_t


356 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

357 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

359 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

360 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
)

361 || 
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
)))

362  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

363 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

364  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

365 
	}
}

368 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

369 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

370 
size_t
 
__nwc
, size_à
__Àn
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

372 
__THROW
;

373 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

374 (*
__ª°ri˘
 
__d°
,

375 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

376 
size_t
 
__nwc
, size_à
__Àn
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

379 
__Æways_ölöe
 
size_t


380 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

381 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

383 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

384 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| __À¿> 
	`__bos
 (
__d°
)))

385  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

386  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

387 
	}
}

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

63 
	g__gc⁄v_°ï
;

64 
	g__gc⁄v_°ï_d©a
;

65 
	g__gc⁄v_lﬂded_obje˘
;

66 
	g__gc⁄v_å™s_d©a
;

70 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

71 
	t__c⁄°
 **, __const *,

72 **, 
	tsize_t
 *, , );

75 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

78 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

79 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

83 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

84 
	t__gc⁄v_°ï_d©a
 *, *,

85 
	t__c⁄°
 *,

86 
	t__c⁄°
 **,

87 
	t__c⁄°
 *, **,

88 
	tsize_t
 *);

91 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

92 
	t__c⁄°
 *,

96 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

97 
	tsize_t
 *);

100 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

101 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

103 
	s__gc⁄v_å™s_d©a


106 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

107 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

108 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

109 *
__d©a
;

110 
__gc⁄v_å™s_d©a
 *
__√xt
;

115 
	s__gc⁄v_°ï


117 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

118 
__c⁄°
 *
__mod«me
;

120 
__cou¡î
;

122 *
__‰om_«me
;

123 *
__to_«me
;

125 
__gc⁄v_f˘
 
__f˘
;

126 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

127 
__gc⁄v_öô_f˘
 
__öô_f˘
;

128 
__gc⁄v_íd_f˘
 
__íd_f˘
;

132 
__mö_√eded_‰om
;

133 
__max_√eded_‰om
;

134 
__mö_√eded_to
;

135 
__max_√eded_to
;

138 
__°©eful
;

140 *
__d©a
;

145 
	s__gc⁄v_°ï_d©a


147 *
__outbuf
;

148 *
__outbu„nd
;

152 
__Êags
;

156 
__övoˇti⁄_cou¡î
;

160 
__öã∫Æ_u£
;

162 
__mb°©e_t
 *
__°©ï
;

163 
__mb°©e_t
 
__°©e
;

167 
__gc⁄v_å™s_d©a
 *
__å™s
;

172 
	s__gc⁄v_öfo


174 
size_t
 
__n°ïs
;

175 
__gc⁄v_°ï
 *
__°ïs
;

176 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

177 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_lutimes


	)

20 
	#__°ub_ªvoke


	)

21 
	#__°ub_£éogö


	)

22 
	#__°ub_sigªtu∫


	)

23 
	#__°ub_s°k


	)

24 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_ªm_pio2l


	)

12 
	#__°ub___kî√l_söl


	)

13 
	#__°ub___kî√l_è∆


	)

14 
	#__°ub_bdÊush


	)

15 
	#__°ub_chÊags


	)

16 
	#__°ub_Áâach


	)

17 
	#__°ub_fchÊags


	)

18 
	#__°ub_fdëach


	)

19 
	#__°ub_„upd©ìnv


	)

20 
	#__°ub_gëmsg


	)

21 
	#__°ub_gây


	)

22 
	#__°ub_lchmod


	)

23 
	#__°ub_lutimes


	)

24 
	#__°ub_putmsg


	)

25 
	#__°ub_ªvoke


	)

26 
	#__°ub_£éogö


	)

27 
	#__°ub_sigªtu∫


	)

28 
	#__°ub_s°k


	)

29 
	#__°ub_°ty


	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#CHILD_MAX
 999

	)

9 
	#OPEN_MAX
 256

	)

10 
	#LINK_MAX
 127

	)

11 
	#MAX_CANON
 255

	)

12 
	#MAX_INPUT
 255

	)

13 
	#NAME_MAX
 255

	)

14 
	#PATH_MAX
 4096

	)

15 
	#PIPE_BUF
 4096

	)

16 
	#XATTR_NAME_MAX
 255

	)

17 
	#XATTR_SIZE_MAX
 65536

	)

18 
	#XATTR_LIST_MAX
 65536

	)

20 
	#RTSIG_MAX
 32

	)

	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

34 
	#__√ed_wöt_t


	)

35 
	~<°ddef.h
>

36 #i‚de‡
_WINT_T


41 
	#_WINT_T


	)

42 
	twöt_t
;

44 #ifde‡
__USE_ISOC99


45 
	$__USING_NAMESPACE_C99
(
wöt_t
)

51 #i‚de‡
WEOF


52 
	#WEOF
 (0xffffffffu)

	)

55 #unde‡
__√ed_iswxxx


60 #i‚de‡
__iswxxx_deföed


61 
	#__iswxxx_deföed
 1

	)

63 
__BEGIN_NAMESPACE_C99


66 
	tw˘y≥_t
;

67 
__END_NAMESPACE_C99


69 #i‚de‡
_ISwbô


74 
	~<ídün.h
>

75 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


76 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

78 
	#_ISwbô
(
bô
) \

79 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

80 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

81 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

82 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

87 
__ISwuµî
 = 0,

88 
__ISwlowî
 = 1,

89 
__ISwÆpha
 = 2,

90 
__ISwdigô
 = 3,

91 
__ISwxdigô
 = 4,

92 
__ISw•a˚
 = 5,

93 
__ISw¥öt
 = 6,

94 
__ISwgøph
 = 7,

95 
__ISwbœnk
 = 8,

96 
__ISw˙ål
 = 9,

97 
__ISwpun˘
 = 10,

98 
__ISwÆnum
 = 11,

100 
_ISwuµî
 = 
	`_ISwbô
 (
__ISwuµî
),

101 
_ISwlowî
 = 
	`_ISwbô
 (
__ISwlowî
),

102 
_ISwÆpha
 = 
	`_ISwbô
 (
__ISwÆpha
),

103 
_ISwdigô
 = 
	`_ISwbô
 (
__ISwdigô
),

104 
_ISwxdigô
 = 
	`_ISwbô
 (
__ISwxdigô
),

105 
_ISw•a˚
 = 
	`_ISwbô
 (
__ISw•a˚
),

106 
_ISw¥öt
 = 
	`_ISwbô
 (
__ISw¥öt
),

107 
_ISwgøph
 = 
	`_ISwbô
 (
__ISwgøph
),

108 
_ISwbœnk
 = 
	`_ISwbô
 (
__ISwbœnk
),

109 
_ISw˙ål
 = 
	`_ISwbô
 (
__ISw˙ål
),

110 
_ISwpun˘
 = 
	`_ISwbô
 (
__ISwpun˘
),

111 
_ISwÆnum
 = 
	`_ISwbô
 (
__ISwÆnum
)

116 
__BEGIN_DECLS


118 
__BEGIN_NAMESPACE_C99


125 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

131 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

138 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

150 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

155 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

160 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

165 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

170 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

175 #ifde‡
__USE_ISOC99


176 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

185 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

189 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

190 
__END_NAMESPACE_C99


197 
__BEGIN_NAMESPACE_C99


200 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

201 
__END_NAMESPACE_C99


202 #ifde‡
__USE_GNU


203 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

206 
__BEGIN_NAMESPACE_C99


208 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

211 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

212 
__END_NAMESPACE_C99


214 
__END_DECLS


221 #ifde‡
_WCTYPE_H


227 
__BEGIN_DECLS


229 
__BEGIN_NAMESPACE_C99


232 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

235 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

236 
__END_NAMESPACE_C99


238 #ifde‡
__USE_GNU


240 
	~<xloˇÀ.h
>

244 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

250 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

257 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

269 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

274 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

279 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

289 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

294 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

298 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

299 
__THROW
;

303 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

304 
__THROW
;

312 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

319 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

320 
__THROW
;

323 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

324 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

328 
__END_DECLS


	@/usr/include/asm-i386/errno.h

1 #i‚de‡
_I386_ERRNO_H


2 
	#_I386_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm-x86_64/errno.h

1 #i‚de‡
_X8664_ERRNO_H


2 
	#_X8664_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm/ioctl.h

2 #i‚de‡
__ASM_STUB_IOCTL_H


3 
	#__ASM_STUB_IOCTL_H


	)

4 #i‡
deföed
 
__x86_64__


5 
	~<asm-x86_64/io˘l.h
>

6 #ñi‡
deföed
 
__i386__


7 
	~<asm-i386/io˘l.h
>

9 #w¨nög 
This
 
machöe
 
≠≥¨s
 
to
 
be
 
√ôhî
 
x86_64
 
n‹
 
i386
.

	@/usr/include/pthread.h

19 #i‚de‡
_PTHREAD_H


20 
	#_PTHREAD_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	#__√ed_sig£t_t


	)

27 
	~<sig«l.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #ifde‡
__USE_UNIX98


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_GNU


68 
	mPTHREAD_MUTEX_STALLED_NP
,

69 
	mPTHREAD_MUTEX_ROBUST_NP


74 #ifde‡
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


86 #i‡
__WORDSIZE
 == 64

87 
	#PTHREAD_MUTEX_INITIALIZER
 \

88 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

89 #ifde‡
__USE_GNU


90 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

91 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

92 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

98 
	#PTHREAD_MUTEX_INITIALIZER
 \

99 { { 0, 0, 0, 0, 0, { 0 } } }

	)

100 #ifde‡
__USE_GNU


101 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

102 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

103 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

112 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


115 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

116 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

117 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

118 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


122 #i‡
__WORDSIZE
 == 64

123 
	#PTHREAD_RWLOCK_INITIALIZER
 \

124 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 
	#PTHREAD_RWLOCK_INITIALIZER
 \

127 { { 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

129 #ifde‡
__USE_GNU


130 #i‡
__WORDSIZE
 == 64

131 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

133 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

135 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

136 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, 0 } }

	)

145 
	mPTHREAD_INHERIT_SCHED
,

146 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

147 
	mPTHREAD_EXPLICIT_SCHED


148 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

155 
	mPTHREAD_SCOPE_SYSTEM
,

156 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

157 
	mPTHREAD_SCOPE_PROCESS


158 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

165 
	mPTHREAD_PROCESS_PRIVATE
,

166 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

167 
	mPTHREAD_PROCESS_SHARED


168 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

174 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

178 
	s_±hªad_˛ónup_buf„r


180 (*
	m__routöe
) (*);

181 *
	m__¨g
;

182 
	m__ˇn˚…y≥
;

183 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

189 
	mPTHREAD_CANCEL_ENABLE
,

190 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

191 
	mPTHREAD_CANCEL_DISABLE


192 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

196 
	mPTHREAD_CANCEL_DEFERRED
,

197 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

198 
	mPTHREAD_CANCEL_ASYNCHRONOUS


199 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

201 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

205 
	#PTHREAD_ONCE_INIT
 0

	)

208 #ifde‡
__USE_XOPEN2K


212 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

216 
__BEGIN_DECLS


221 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

222 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

223 *(*
__°¨t_routöe
) (*),

224 *
__ª°ri˘
 
__¨g
Ë
__THROW
;

230 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

238 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

240 #ifde‡
__USE_GNU


243 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

251 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

252 
__c⁄°
 
time•ec
 *
__ab°ime
);

259 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

263 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

266 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

274 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
;

277 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
;

280 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

281 *
__dëach°©e
Ë
__THROW
;

284 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

285 
__dëach°©e
Ë
__THROW
;

289 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

290 
size_t
 *
__gu¨dsize
Ë
__THROW
;

293 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

294 
size_t
 
__gu¨dsize
Ë
__THROW
;

298 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


299 
__©å
,

300 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

301 
__THROW
;

304 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

305 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


306 
__∑øm
Ë
__THROW
;

309 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


310 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

311 
__THROW
;

314 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

315 
__THROW
;

318 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__öhîô
)

320 
__THROW
;

323 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

324 
__öhîô
Ë
__THROW
;

328 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

329 *
__ª°ri˘
 
__sc›e
Ë
__THROW
;

332 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

333 
__THROW
;

336 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


337 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

338 
__THROW
 
__©åibuã_dïªˇãd__
;

344 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

345 *
__°ackaddr
)

346 
__THROW
 
__©åibuã_dïªˇãd__
;

349 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


350 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

351 
__THROW
;

356 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

357 
size_t
 
__°acksize
Ë
__THROW
;

359 #ifde‡
__USE_XOPEN2K


361 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

362 **
__ª°ri˘
 
__°ackaddr
,

363 
size_t
 *
__ª°ri˘
 
__°acksize
Ë
__THROW
;

368 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

369 
size_t
 
__°acksize
Ë
__THROW
;

372 #ifde‡
__USE_GNU


375 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

376 
size_t
 
__˝u£tsize
,

377 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

381 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

382 
size_t
 
__˝u£tsize
,

383 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

389 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
Ë
__THROW
;

397 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

398 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

399 
__THROW
;

402 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

403 *
__ª°ri˘
 
__pﬁicy
,

404 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

405 
__THROW
;

408 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

409 
__THROW
;

412 #ifde‡
__USE_UNIX98


414 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

417 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

420 #ifde‡
__USE_GNU


425 
	$±hªad_yõld
 (Ë
__THROW
;

430 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

431 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

434 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

435 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

448 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

449 (*
__öô_routöe
) ());

460 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

464 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

467 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

472 
	`±hªad_ã°ˇn˚l
 ();

481 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

482 
__mask_was_ßved
;

483 } 
__ˇn˚l_jmp_buf
[1];

484 *
__∑d
[4];

485 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

488 #i‚de‡
__˛ónup_f˘_©åibuã


489 
	#__˛ónup_f˘_©åibuã


	)

494 
	s__±hªad_˛ónup_‰ame


496 (*
__ˇn˚l_routöe
) (*);

497 *
__ˇn˚l_¨g
;

498 
__do_ô
;

499 
__ˇn˚l_ty≥
;

502 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


503 #ifde‡
__˝lu•lus


505 ˛as†
	c__±hªad_˛ónup_˛ass


507 (*
__ˇn˚l_routöe
) (*);

508 *
__ˇn˚l_¨g
;

509 
__do_ô
;

510 
__ˇn˚l_ty≥
;

512 
public
:

513 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

514 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

515 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

516 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

517 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

518 &
__ˇn˚l_ty≥
); 
	}
}

519 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

529 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

531 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

535 
	#±hªad_˛ónup_p›
(
execuã
) \

536 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

537 } 0)

	)

539 #ifde‡
__USE_GNU


543 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

545 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

546 
__˛‰ame
.
	`__de„r
 ()

	)

551 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

552 
__˛‰ame
.
	`__ª°‹e
 (); \

553 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

554 } 0)

	)

561 
__ölöe
 

562 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

564 i‡(
__‰ame
->
__do_ô
)

565 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

566 
	}
}

575 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

577 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

578 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

579 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

580 .
__do_ô
 = 1 };

	)

584 
	#±hªad_˛ónup_p›
(
execuã
) \

585 
__˛‰ame
.
__do_ô
 = (
execuã
); \

586 } 0)

	)

588 #ifde‡
__USE_GNU


592 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

594 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

595 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

596 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

597 .
__do_ô
 = 1 }; \

598 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

599 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

604 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

605 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

606 
__˛‰ame
.
__do_ô
 = (
execuã
); \

607 } 0)

	)

618 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

620 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

621 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

622 *
__ˇn˚l_¨g
 = (
¨g
); \

623 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) \

624 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

625 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

627 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

628 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

632 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

633 dÿ{

	)

634 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

635 
__˛ónup_f˘_©åibuã
;

639 
	#±hªad_˛ónup_p›
(
execuã
) \

641 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

642 i‡(
execuã
) \

643 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

644 } 0)

	)

645 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

646 
__˛ónup_f˘_©åibuã
;

648 #ifde‡
__USE_GNU


652 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

654 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

655 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

656 *
__ˇn˚l_¨g
 = (
¨g
); \

657 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) \

658 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

659 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

661 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

662 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

666 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

667 dÿ{

	)

668 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

669 
__˛ónup_f˘_©åibuã
;

674 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

676 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

677 i‡(
execuã
) \

678 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

679 
	}
} 0)

	)

680 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

681 
__˛ónup_f˘_©åibuã
;

685 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

686 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

687 #i‚de‡
SHARED


688 
	`__©åibuã__
 ((
__wók__
))

694 
__jmp_buf_èg
;

695 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

701 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

702 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

703 
__THROW
;

706 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

709 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
_muãx
Ë
__THROW
;

712 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

714 #ifde‡
__USE_XOPEN2K


716 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

717 
__c⁄°
 
time•ec
 *
__ª°ri˘


718 
__ab°ime
Ë
__THROW
;

722 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

725 #ifde‡
__USE_UNIX98


727 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

728 
__ª°ri˘
 
__muãx
,

729 *
__ª°ri˘
 
__¥io˚ûög
)

730 
__THROW
;

734 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

735 
__¥io˚ûög
,

736 *
__ª°ri˘
 
__ﬁd_˚ûög
)

737 
__THROW
;

741 #ifde‡
__USE_GNU


743 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

751 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
Ë
__THROW
;

754 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
Ë
__THROW
;

757 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

758 
__ª°ri˘
 
__©å
,

759 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

762 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

763 
__psh¨ed
Ë
__THROW
;

765 #ifde‡
__USE_UNIX98


767 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


768 
__©å
, *
__ª°ri˘
 
__köd
Ë
__THROW
;

773 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

774 
__THROW
;

777 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

778 
__ª°ri˘
 
__©å
,

779 *
__ª°ri˘
 
__¥Ÿocﬁ
Ë
__THROW
;

783 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

784 
__¥Ÿocﬁ
Ë
__THROW
;

787 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

788 
__ª°ri˘
 
__©å
,

789 *
__ª°ri˘
 
__¥io˚ûög
)

790 
__THROW
;

793 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

794 
__¥io˚ûög
Ë
__THROW
;

797 #ifde‡
__USE_GNU


799 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

800 *
__robu°√ss
Ë
__THROW
;

803 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

804 
__robu°√ss
Ë
__THROW
;

808 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


813 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

814 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


815 
__©å
Ë
__THROW
;

818 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

821 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

824 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

826 #ifde‡
__USE_XOPEN2K


828 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

829 
__c⁄°
 
time•ec
 *
__ª°ri˘


830 
__ab°ime
Ë
__THROW
;

834 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

837 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

839 #ifde‡
__USE_XOPEN2K


841 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

842 
__c⁄°
 
time•ec
 *
__ª°ri˘


843 
__ab°ime
Ë
__THROW
;

847 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

853 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
Ë
__THROW
;

856 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
Ë
__THROW
;

859 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

860 
__ª°ri˘
 
__©å
,

861 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

864 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

865 
__psh¨ed
Ë
__THROW
;

868 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

869 
__ª°ri˘
 
__©å
,

870 *
__ª°ri˘
 
__¥ef
Ë
__THROW
;

873 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

874 
__¥ef
Ë
__THROW
;

882 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

883 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


884 
__c⁄d_©å
Ë
__THROW
;

887 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
Ë
__THROW
;

890 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
Ë
__THROW
;

893 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
Ë
__THROW
;

900 
	`±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

901 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
);

910 
	`±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

911 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

912 
__c⁄°
 
time•ec
 *
__ª°ri˘


913 
__ab°ime
);

918 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
Ë
__THROW
;

921 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
Ë
__THROW
;

924 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

925 
__ª°ri˘
 
__©å
,

926 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

929 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

930 
__psh¨ed
Ë
__THROW
;

932 #ifde‡
__USE_XOPEN2K


934 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

935 
__ª°ri˘
 
__©å
,

936 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

937 
__THROW
;

940 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

941 
__˛ockid_t
 
__˛ock_id
Ë
__THROW
;

946 #ifde‡
__USE_XOPEN2K


951 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

952 
__THROW
;

955 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

958 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

961 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

964 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

971 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

972 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


973 
__©å
, 
__cou¡
Ë
__THROW
;

976 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
Ë
__THROW
;

979 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
Ë
__THROW
;

983 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
Ë
__THROW
;

986 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
Ë
__THROW
;

989 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

990 
__ª°ri˘
 
__©å
,

991 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

994 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

995 
__psh¨ed
Ë
__THROW
;

1007 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1008 (*
__de°r_fun˘i⁄
Ë(*)Ë
__THROW
;

1011 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1014 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1017 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1018 
__c⁄°
 *
__poöãr
Ë
__THROW
;

1021 #ifde‡
__USE_XOPEN2K


1023 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1024 
__˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

1039 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1040 (*
__∑ª¡
) (),

1041 (*
__chûd
Ë()Ë
__THROW
;

1043 
__END_DECLS


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

	@/usr/include/asm-i386/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/asm-x86_64/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_time•ec


	)

29 
	~<time.h
>

32 
	~<bôs/sched.h
>

34 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

37 
__BEGIN_DECLS


40 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

41 
__THROW
;

44 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

47 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

48 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

51 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

54 
	$sched_yõld
 (Ë
__THROW
;

57 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

66 #ifde‡
__USE_GNU


68 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

69 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET
 (˝u, cpu£ç)

	)

70 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR
 (˝u, cpu£ç)

	)

71 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET
 (˝u, cpu£ç)

	)

72 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO
 (˝u£ç)

	)

76 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

77 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

80 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

81 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

84 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm-generic/ioctl.h

1 #i‚de‡
_ASM_GENERIC_IOCTL_H


2 
	#_ASM_GENERIC_IOCTL_H


	)

22 
	#_IOC_NRBITS
 8

	)

23 
	#_IOC_TYPEBITS
 8

	)

24 
	#_IOC_SIZEBITS
 14

	)

25 
	#_IOC_DIRBITS
 2

	)

27 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

28 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

29 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

30 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

32 
	#_IOC_NRSHIFT
 0

	)

33 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

34 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

35 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

40 
	#_IOC_NONE
 0U

	)

41 
	#_IOC_WRITE
 1U

	)

42 
	#_IOC_READ
 2U

	)

44 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

45 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

46 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

47 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

48 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

51 
__övÆid_size_¨gumít_f‹_IOC
;

52 
	#_IOC_TYPECHECK
(
t
) \

53 (((
t
) == (t[1]) && \

54 (
t
Ë< (1 << 
_IOC_SIZEBITS
)) ? \

55 (
t
Ë: 
__övÆid_size_¨gumít_f‹_IOC
)

	)

58 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

59 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

60 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

61 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

62 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

63 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

64 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

67 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

68 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

69 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

70 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

74 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

75 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

76 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

77 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

78 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@/usr/include/bits/sched.h

21 #i‚de‡
__√ed_sched∑øm


23 #i‚de‡
_SCHED_H


29 
	#SCHED_OTHER
 0

	)

30 
	#SCHED_FIFO
 1

	)

31 
	#SCHED_RR
 2

	)

32 #ifde‡
__USE_GNU


33 
	#SCHED_BATCH
 3

	)

36 #ifde‡
__USE_MISC


38 
	#CSIGNAL
 0x000000f‡

	)

39 
	#CLONE_VM
 0x00000100

	)

40 
	#CLONE_FS
 0x00000200

	)

41 
	#CLONE_FILES
 0x00000400

	)

42 
	#CLONE_SIGHAND
 0x00000800

	)

43 
	#CLONE_PTRACE
 0x00002000

	)

44 
	#CLONE_VFORK
 0x00004000

	)

46 
	#CLONE_PARENT
 0x00008000

	)

48 
	#CLONE_THREAD
 0x00010000

	)

49 
	#CLONE_NEWNS
 0x00020000

	)

50 
	#CLONE_SYSVSEM
 0x00040000

	)

51 
	#CLONE_SETTLS
 0x00080000

	)

52 
	#CLONE_PARENT_SETTID
 0x00100000

	)

54 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

56 
	#CLONE_DETACHED
 0x00400000

	)

57 
	#CLONE_UNTRACED
 0x00800000

	)

59 
	#CLONE_CHILD_SETTID
 0x01000000

	)

61 
	#CLONE_STOPPED
 0x02000000

	)

65 
	ssched_∑øm


67 
	m__sched_¥i‹ôy
;

70 
	g__BEGIN_DECLS


72 #ifde‡
__USE_MISC


74 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

75 
__Êags
, *
__¨g
, ...Ë
__THROW
;

78 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

81 
__END_DECLS


85 #i‡!
deföed
 
__deföed_sched∑øm
 \

86 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

87 
	#__deföed_sched∑øm
 1

	)

89 
	s__sched_∑øm


91 
__sched_¥i‹ôy
;

93 #unde‡
__√ed_sched∑øm


97 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


98 
	#__˝u_£t_t_deföed


	)

100 
	#__CPU_SETSIZE
 1024

	)

101 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

104 
	t__˝u_mask
;

107 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

108 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

113 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

114 } 
	t˝u_£t_t
;

117 
	#__CPU_ZERO
(
˝u£ç
) \

119 
__i
; \

120 
˝u_£t_t
 *
__¨r
 = (
˝u£ç
); \

121 
__i
 = 0; __ò<  (
˝u_£t_t
Ë/  (
__˝u_mask
); ++__i) \

122 
__¨r
->
__bôs
[
__i
] = 0; \

123 
	}
} 0)

	)

124 
	#__CPU_SET
(
˝u
, 
˝u£ç
) \

125 ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] |
	`__CPUMASK
 (˝u))

	)

126 
	#__CPU_CLR
(
˝u
, 
˝u£ç
) \

127 ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] &~
	`__CPUMASK
 (˝u))

	)

128 
	#__CPU_ISSET
(
˝u
, 
˝u£ç
) \

129 (((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] & 
	`__CPUMASK
 (˝u)Ë!0)

	)

	@
1
.
1
/usr/include
157
3742
conf.c
confdata.c
expr.c
expr.h
gconf.c
images.c
kconfig_load.c
kxgettext.c
lex.zconf.c
lkc.h
lkc_proto.h
lxdialog/checklist.c
lxdialog/colors.h
lxdialog/dialog.h
lxdialog/inputbox.c
lxdialog/lxdialog.c
lxdialog/menubox.c
lxdialog/msgbox.c
lxdialog/textbox.c
lxdialog/util.c
lxdialog/yesno.c
mconf.c
menu.c
qconf.cc
qconf.h
symbol.c
util.c
zconf.hash.c
zconf.l
zconf.tab.c
zconf.y
/usr/include/ctype.h
/usr/include/dialog.h
/usr/include/dlfcn.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/inttypes.h
/usr/include/libintl.h
/usr/include/limits.h
/usr/include/locale.h
/usr/include/regex.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/ioctl.h
/usr/include/sys/stat.h
/usr/include/sys/types.h
/usr/include/sys/utsname.h
/usr/include/sys/wait.h
/usr/include/termios.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/confname.h
/usr/include/bits/dlfcn.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/ioctl-types.h
/usr/include/bits/ioctls.h
/usr/include/bits/locale.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/termios.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/utsname.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/curses.h
/usr/include/dlg_config.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/langinfo.h
/usr/include/libio.h
/usr/include/math.h
/usr/include/ncurses.h
/usr/include/stdint.h
/usr/include/sys/resource.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ttydefaults.h
/usr/include/sys/ucontext.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/ioctls.h
/usr/include/bits/endian.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/inf.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/nan.h
/usr/include/bits/resource.h
/usr/include/bits/select.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/bits/wchar.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/ncurses_dll.h
/usr/include/nl_types.h
/usr/include/sys/cdefs.h
/usr/include/unctrl.h
/usr/include/wchar.h
/usr/include/asm-i386/ioctls.h
/usr/include/asm-x86_64/ioctls.h
/usr/include/asm/errno.h
/usr/include/bits/libc-lock.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/linux/limits.h
/usr/include/wctype.h
/usr/include/asm-i386/errno.h
/usr/include/asm-x86_64/errno.h
/usr/include/asm/ioctl.h
/usr/include/pthread.h
/usr/include/asm-generic/errno.h
/usr/include/asm-i386/ioctl.h
/usr/include/asm-x86_64/ioctl.h
/usr/include/bits/setjmp.h
/usr/include/sched.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm-generic/ioctl.h
/usr/include/bits/sched.h
