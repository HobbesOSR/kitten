mainmenu "Kitten Kernel Configuration"

config X86_64
	bool
	default y
	help
	  Support for the x86_64 architecture.

config X86
	bool
	default y

config X86_MCE 
	bool
	default y

config X86_MCE_INJECT
	bool
	default y

config OUTPUT_FORMAT
        string
        default "elf64-k1om" if ARCH = "k1om"
        default "elf64-x86-64" if X86_64

config BFDARCH
        string
        default "k1om" if ARCH = "k1om"
        default "i386" if X86_64

source "kernel/Kconfig"

menu "Target Configuration"

choice
	prompt "System Architecture"
	default PC

config PC
        bool "PC-compatible"
        help
	  Support for standard PC compatible systems.

config CRAY_XT
        bool "Red Storm (Cray XT3/XT4)"
         help
	  Support for Cray XT3 and XT4 systems.

endchoice


choice
	prompt "Processor Family"
	default GENERIC_CPU

config MK8
	bool "AMD-Opteron/Athlon64"
	help
	  Optimize for AMD Opteron/Athlon64/Hammer/K8 CPUs.

config MPSC
	bool "Intel-64/Core2"
	help
	  Optimize for Intel 64 architecture.

config MK1OM
	bool "Intel Knights Corner"
	help
	  Select this for the CPU used in the Intel Many Integrated Core
	  (Intel MIC) products code-named Knights Corner. The CPU is an
	  in-order, 4-way SMT design that is mostly x86-64 compatible
	  but has a different vector unit. The differences from x86-64
	  force incompatible calling conventions, so GCC and binutils
	  assign it a unique ELF machine type: EM_K1OM.

	  Future Intel products will be part of the x86 ecosystem, *not*
	  derivatives of this incompatible offshoot.

config GENERIC_CPU
	bool "Generic-x86-64"
	help
	  Generic x86-64 CPU.

endchoice



#
# Define implied options from the CPU selection
#

# this should be set for all -march=.. options where the compiler generates cmov.
config X86_CMOV
	def_bool y
	depends on GENERIC_CPU || MK8 || MPSC

# non-X86_64 wierdness on Intel KNC (ARCH=MK1OM)
config X86_EARLYMIC
	def_bool y
	depends on MK1OM

config X86_L1_CACHE_BYTES
        int
        default "128" if MPSC
        default "64" if GENERIC_CPU || MK8 || MK1OM

config X86_L1_CACHE_SHIFT
        int
        default "7" if MPSC
        default "6" if GENERIC_CPU || MK8 || MK1OM

config X86_INTERNODE_CACHE_BYTES
	int
	default X86_L1_CACHE_BYTES

config X86_INTERNODE_CACHE_SHIFT
	int
	default X86_L1_CACHE_SHIFT

config NR_CPUS
        int "Maximum number of CPUs (2-256)"
        range 1 255
        default "64"
        help
          This allows you to specify the maximum number of CPUs which this
          kernel will support. Current maximum is 256 CPUs due to
          APIC addressing limits. Less depending on the hardware.

          This is purely to save memory - each supported CPU requires
          memory in the static kernel configuration.

#
# Physical address where the kernel is loaded
#
config PHYSICAL_START
	hex
	default "0x200000"

endmenu

menu "Virtualization"

config PALACIOS
	bool "Include Palacios virtual machine monitor"
	default "n"
	help
	  Include the Palacios virtual machine monitor. This enables Kitten
	  to run guest operating systems alongside native applications.


choice
	prompt "Internal/External Palacios library"
	depends on PALACIOS
	default PALACIOS_INT

config PALACIOS_INTERNAL
	bool "Link core Palacios library directly to Kitten interfaces"
	help 
		This is the old style linking mechanism that required 
		internalized Palacios interfaces to be implemented 
		inside Kitten

config PALACIOS_EXTERNAL
	bool "Link in Palacios as a self contained module"
	help 
		New linking style that modularizes Palacios and requires
		no Palacios interfaces to be included inside Kitten
		
endchoice
 

config PALACIOS_SOCKET
        bool
        depends on NETWORK && LWIP_TCP && LWIP_UDP && LWIP_SOCKET && PALACIOS_INTERNAL
        default "y"

config PALACIOS_GDB
	bool
	depends on PALACIOS && PALACIOS_INTERNAL
	default "y"

config PALACIOS_PATH
	string "Path to pre-built Palacios tree"
	depends on PALACIOS
	default "../palacios"
	help
	  Path to a built Palacios source tree. This path is used to
	  find Palacios include files and libraries that need to be
	  linked with the Kitten kernel image.


config BUILT_IN_GUEST_OS
	depends on PALACIOS
	bool "Compile Guest OS image into Kitten init_task"
	

config GUEST_OS_ISOIMAGE_PATH
	string "Path to guest OS image"
	depends on BUILT_IN_GUEST_OS
	default "../guest_os/linux_guest.img"
	help
	  Path to a guest image to link with the example user/hello_world
	  init task.  The hello_world init task will use this image
	  to spawn a guest OS virtual machine via Palacios.  The guest
          image must be built with the build_vm tool included with
          the Palacios source code (in palacios/utils/guest_creator).

endmenu

# source user/iofwd/Kconfig

config HAS_IOMEM
	bool
	default "y"

config HAS_IOPORT
	bool
	default "y"

config SMP
	bool
	default "y"

config ACPI
	bool
	default "y"

source "net/Kconfig"
source "drivers/Kconfig"
source "arch/x86_64/boot/Kconfig"
source "arch/x86_64/Kconfig.debug"
source "linux/arch/x86_64/Kconfig"
